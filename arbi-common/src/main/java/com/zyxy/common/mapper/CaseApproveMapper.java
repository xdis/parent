package com.zyxy.common.mapper;

import com.zyxy.common.domain.CaseApprove;
import com.zyxy.common.domain.CaseApproveExample;

import java.util.List;

import com.zyxy.common.vo.ApproveRecordVO;
import com.zyxy.common.vo.CaseApproveVO;

import org.apache.ibatis.annotations.Param;

public interface CaseApproveMapper {
    /**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table case_approve
	 * @mbggenerated
	 */
	int countByExample(CaseApproveExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table case_approve
	 * @mbggenerated
	 */
	int deleteByExample(CaseApproveExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table case_approve
	 * @mbggenerated
	 */
	int deleteByPrimaryKey(String id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table case_approve
	 * @mbggenerated
	 */
	int insert(CaseApprove record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table case_approve
	 * @mbggenerated
	 */
	int insertSelective(CaseApprove record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table case_approve
	 * @mbggenerated
	 */
	List<CaseApprove> selectByExample(CaseApproveExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table case_approve
	 * @mbggenerated
	 */
	CaseApprove selectByPrimaryKey(String id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table case_approve
	 * @mbggenerated
	 */
	int updateByExampleSelective(@Param("record") CaseApprove record,
			@Param("example") CaseApproveExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table case_approve
	 * @mbggenerated
	 */
	int updateByExample(@Param("record") CaseApprove record,
			@Param("example") CaseApproveExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table case_approve
	 * @mbggenerated
	 */
	int updateByPrimaryKeySelective(CaseApprove record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table case_approve
	 * @mbggenerated
	 */
	int updateByPrimaryKey(CaseApprove record);

	/**
     * 查询出审批记录
     * @param caseId
     * @param approveType
     * @param requestType
     * @return
     */
    List<ApproveRecordVO> queryApproveRecord(@Param("caseId") String caseId, @Param("approveType") String approveType, @Param("requestType") String requestType);

    /**
     * 查询出审批记录，秘书参与审批
     * @param caseId 案件id
     * @param approveType 审批类型
     * @param approveStatus 审批状态
     * @param requestType 请求类型
     * @return
     */
    List<ApproveRecordVO> queryApproveRecordCaseId(@Param("caseId") String caseId, @Param("approveType") String approveType, @Param("approveStatus") String approveStatus,@Param("requestType") String requestType);
    
    /**
     * 根据审批Id，查询审批记录
     * @param approveId 审批Id
     * @return
     */
    List<ApproveRecordVO> queryApproveRecordApproveId(@Param("approveId") String approveId);

    /**
     * 根据案件ID查询审批基本信息
     * @param caseApprove
     * @return
     */
    List<CaseApprove> selectApproveInfoByCaseId(CaseApprove caseApprove);

    /**
     * 更新审批状态
     * @param record 审批id 
     * @return
     */
    int updateStatus(CaseApprove record);
    
    /**
     * 查询出审批id
     * @param caseId 案件ID
     * @param approveType 审批类型
     * @param approveStatus 审批状态
     * @return
     */
    String queryApproveId(@Param("caseId") String caseId,@Param("approveType") String approveType,
    		@Param("approveStatus") String approveStatus);
    
    /**
     * 查询当前审批表的审批人
     * @param approveId
     * @return
     */
    String selectApprover(@Param("approveId") String approveId);
    
    
    /**
     * 查询当前审批表的审批人(反馈修改意见情况下)
     * @param approveId
     * @return
     */
    String selectApproverUserInfoId(@Param("approveId") String approveId);
    
    /**
     *秘书起草决定书情况下的当前审批人
     * @param caseId 案件Id
     * @param approveType  审批类型
     * @param approveStatus 审批状态
     * @return 当前审批人
     */
     List<String> selectApproverUserId(@Param("caseId") String caseId,
     		@Param("approveType") String approveType);
    
   /**
    * 将审批人更新到审批表中
    * @param approveId 审批id
    * @param managerId 审批人userId
    * @return 更新成功或失败
    */
   int updateApproverId(@Param("approveId") String  approveId, @Param("managerId") String  managerId);
   
   /**
    * 修改审批为待审核的审批状态
    * @param record
    * @return
    */
   int updateApproveStatus(CaseApprove record);
   
   
   /**
    * 查询指定审批表当前审批人身份
    * @param approveId 审批Id
    * @return
    */
   String queryApproveUserDuties(@Param("approveId") String approveId);
   
   /**
    * 查询出指定（可以反馈修改意见时候）审批表当前审批人身份
    * @param approveId 审批Id
    * @return
    */
   String queryCaseApproveDuties(@Param("approveId") String approveId);
   
   /**
    * 查询指定审批当前审批人身份
    * @param caseId 案件ID
    * @param approveType 审批类型
    * @param approveStatus 审批状态
    * @return
    */
   String queryApproveUserIdDuties(@Param("caseId") String caseId,@Param("approveType") String approveType,
   		@Param("approveStatus") String approveStatus);
   
   /**
    * 查询指定审批当前审批人
    * @param caseId 案件ID
    * @param approveType 审批类型
    * @param approveStatus 审批状态
    * @return
    */
   String queryApproveUserId(@Param("caseId") String caseId,@Param("approveType") String approveType,
   		@Param("approveStatus") String approveStatus);
   

   
   /**
    * 查询指定审批的业务Id
    * @param caseId 案件ID
    * @param approveType 审批类型
    * @param approveStatus 审批状态
    * @return
    */
   String queryApproveBusiId(@Param("caseId") String caseId,@Param("approveType") String approveType,
   		@Param("approveStatus") String approveStatus);
   
   /**
    *  将查询出的仲裁秘书更新到审批表
    * @param approveId 审批Id
    * @param caseId 案件Id
    * @return
    */
   int updateApproverSecretaryId(@Param("approveId") String  approveId, @Param("caseId") String  caseId);
   
   /**
    * 根据案件id查询出当前案件还有多少审批没完成
    * @param caseId
    * @return
    */
   List<CaseApproveVO> selectApproveByCaseId(@Param("caseId") String caseId,@Param("userId") String userId);
   
   /**
    * 查询审批中审批(驳回仍需审批的审批类型)的业务id
    * @param caseId 案件id
    * @param approveType 审批类型
    * @return 业务id
    */
   String queryBusiId(@Param("caseId")String caseId,@Param("approveType")String approveType);
   
   /**
    * 查询审批id(驳回仍需审批并且仍在进行中的相关审批)
    * @param caseId 案件id
    * @param approveType 审批类型
    * @return 审批id
    */
   String queryMultipleApprovalApproveId(@Param("caseId")String caseId,@Param("approveType")String approveType);
   
   /**
    * 修改当前审批人为上级仲裁委人员(驳回仍需审批并且仍在进行中的相关审批)
    * @param caseId 案件id
    * @param approveType 审批类型
    * @param nextApproveUserDuties 下个审批用户职务
    * @return 更新结果
    */
   int updateApproveUserAsManager(@Param("caseId")String caseId,@Param("approveType")String approveType,@Param("nextApproveUserDuties")String nextApproveUserDuties);
   
   /**
    * 修改当前审批人为仲裁员(驳回仍需审批并且仍在进行中的相关审批)
    * @param caseId 案件id
    * @param approveType 审批类型
    * @return 更新结果
    */
   int updateApproveUserAsArbitrator(@Param("caseId")String caseId,@Param("approveType")String approveType);
   
   /**
    * 改变审批状态(驳回仍需审批并且仍在进行中的相关审批)
    * @param caseId 案件id
    * @param approveType 审批类型
    * @return 更新结果
    */
   int changeApproveStatus(@Param("caseId")String caseId,@Param("approveType")String approveType,@Param("approveStatus")String status);
   
   /**
    * 查询出有秘书起草决定书时的审批记录
    * @param approveId 审批Id
    * @param approveType 审批类型
    * @return
    */
   List<ApproveRecordVO> queryApproveRecordDecision(@Param("approveId") String approveId, @Param("approveType") String approveType) ;
   
   /**
    * 秘书参与起草决定书情况下的，回避时查询审批人身份和审批Id
    * @param approveId 审批Id
    * @return
    */
   ApproveRecordVO queryApproveDuties(@Param("approveId") String approveId);
   
   /**
    * 秘书起草决定书时，修改审批状态
    * @param record 审批对象
    * @return 修改结果
    */
   int updateApproveSecretariesStatus(CaseApprove record);
   
   /**
    * 修改指定案件，指定审批类型，所有待审核状态
    * @param caseId
    * @param approveType
    * @param status
    * @return
    */
   int updateCaseIdStatus(@Param("caseId") String caseId,@Param("approveType") String approveType,@Param("status") String status);
   
   /**
    *  查询出指定审批类型的基本信息
    * @param approveId 审批Id
    * @return
    */
   CaseApprove queryBusiIdRequestId(@Param("approveId") String approveId);
   
   /**
    * 查询审批人
    * @param approveId 审批id
    * @param approveType	审批类型
    * @param approveStatus	审核状态
    * @return
    */
   String selectApproveDuties(@Param("approveId") String approveId, @Param("approveType") String approveType, 
		   @Param("approveStatus") String approveStatus);
   
   /**
    * 通过审批id更新审批状态
    * @param status 审批状态
    * @param approveId 审批id
    * @return 更新结果
    */
   int updateCaseApproveById(@Param("status")String status,@Param("approveId")String approveId);
   
   /**
    * 查询案件相反请求类型(正-反 请求)的相同审批类型的审批id
    * @param caseId 案件id
    * @param approveType 审批类型
    * @return 审批id
    */
   String queryOppositeApproveId(@Param("caseId")String caseId,@Param("approveType")String approveType);

   /**
    * 查询审批id
    * @param caseId
    * @param typeName
    */
   String queryCaseApproveByApproveId(@Param("caseId")String caseId, @Param("approveType")String approveType);
}
