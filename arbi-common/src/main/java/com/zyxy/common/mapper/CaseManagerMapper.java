package com.zyxy.common.mapper;

import com.zyxy.common.domain.CaseManager;
import com.zyxy.common.domain.CaseManagerExample;

import java.util.List;

import com.zyxy.common.domain.ManagerInfo;
import com.zyxy.common.dto.CaseManagerDTO;

import org.apache.ibatis.annotations.Param;

public interface CaseManagerMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_manager
     *
     * @mbggenerated
     */
    long countByExample(CaseManagerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_manager
     *
     * @mbggenerated
     */
    int deleteByExample(CaseManagerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_manager
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_manager
     *
     * @mbggenerated
     */
    int insert(CaseManager record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_manager
     *
     * @mbggenerated
     */
    int insertSelective(CaseManager record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_manager
     *
     * @mbggenerated
     */
    List<CaseManager> selectByExample(CaseManagerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_manager
     *
     * @mbggenerated
     */
    CaseManager selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_manager
     *
     * @mbggenerated
     */
    int updateByExampleSelective(@Param("record") CaseManager record, @Param("example") CaseManagerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_manager
     *
     * @mbggenerated
     */
    int updateByExample(@Param("record") CaseManager record, @Param("example") CaseManagerExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_manager
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(CaseManager record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table case_manager
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(CaseManager record);

    /************************************手动增加的方法*************************************/

    /**
     * 查询出仲裁委案件关系信息
     * @param formData
     * @return
     */
    List<CaseManager> queryCaseNowManager(CaseManagerDTO formData);

    /**
     * 根据人员职务查询当前最空闲的仲裁委人员
     *
     * @param caseId 案件Id
     * @param type   人员职务
     * @return
     */
    String queryFreeManagerPeopleByCaseAndType(@Param("caseId") String caseId, @Param("type") String type);

    /**
     * 根据人员职务分配仲裁委人员
     * @param caseId 案件Id
     * @param type 人员职务
     * @see com.zyxy.common.enums.ManagerInfoTypeEnum
     * @return
     */
    int allotManagerPeopleByCaseAndType(@Param("caseId") String caseId, @Param("type") String type);

    /**
     * 查询当前有效的工作人员Id
     * @param caseId 案件Id
     * @param type 工作人员类型
     * @see com.zyxy.common.enums.ManagerInfoTypeEnum
     * @return
     */
    String queryNowWorkPeopleIdByType(@Param("caseId") String caseId, @Param("type") String type);

    /**
     * 查询当前有效的工作人员Id
     *
     * @param caseId 案件Id
     * @param type   工作人员类型
     * @return
     * @see com.zyxy.common.enums.ManagerInfoTypeEnum
     */
    ManagerInfo queryNowWorkPeopleByType(@Param("caseId") String caseId, @Param("type") String type);

    /**
     * 查询指定仲裁委工作人员的userId
     * @param caseId 案件id
     * @param managerType 工作人员身份
     * @param status 状态
     * @return 查询指定仲裁委工作人员的userId
     */
    String queryArbitrationUserId(@Param("caseId") String caseId,
 		   @Param("managerType") String managerType,@Param("status") String status);
    
    
    /**
     * 系统随机分配仲裁秘书Id
     *
     * @param caseId 案件Id
     * @return
     */
    String queryAllotSecretaries(@Param("caseId")  String caseId);
    
    /**
     * 修改秘书状态
     * @param caseId 案件Id
     * @param caseAvoidId 回避记录Id
     * @param status 状态
     * @return
     */
    int updateSecretariesStatus(@Param("caseId") String caseId,@Param("caseAvoidId") String caseAvoidId,@Param("status") String status);
   
    /**
     * 查询案件仲裁秘书id
     * @param caseId 案件id
     * @return 仲裁秘书id
     */
    String queryArbitrationSecretaryByCaseId(String caseId);
}