<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyxy.common.mapper.CaseMatMapper">
  <resultMap id="BaseResultMap" type="com.zyxy.common.domain.CaseMat">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
    <result column="ATTACH_NAME" jdbcType="VARCHAR" property="attachName" />
    <result column="MAT_TYPE" jdbcType="CHAR" property="matType" />
    <result column="NODE_ID" jdbcType="INTEGER" property="nodeId" />
    <result column="EVIDENCE_MAT" jdbcType="VARCHAR" property="evidenceMat" />
    <result column="PURPOSE_EVIDENCE" jdbcType="VARCHAR" property="purposeEvidence" />
    <result column="SOURCE_EVIDENCE" jdbcType="VARCHAR" property="sourceEvidence" />
    <result column="DOC_NAME" jdbcType="VARCHAR" property="docName" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="FILE_ID" jdbcType="VARCHAR" property="fileId" />
    <result column="DOC_TYPE" jdbcType="VARCHAR" property="docType" />
    <result column="REQUEST_ID" jdbcType="VARCHAR" property="requestId" />
    <result column="COUNTERCLAIM_FLAG" jdbcType="CHAR" property="counterclaimFlag" />
    <result column="CREATER_TYPE" jdbcType="CHAR" property="createrType" />
    <result column="SIGN_SIGNATURE_LOG_ID" jdbcType="VARCHAR" property="signSignatureLogId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zyxy.common.domain.CaseMatWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="ATTACH_CONTENT" jdbcType="LONGVARCHAR" property="attachContent" />
    <result column="OPPUGN_EVIDENCE" jdbcType="LONGVARCHAR" property="oppugnEvidence" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, CASE_ID, ATTACH_NAME, MAT_TYPE, NODE_ID, EVIDENCE_MAT, PURPOSE_EVIDENCE, SOURCE_EVIDENCE, 
    DOC_NAME, REMARK, FILE_ID, DOC_TYPE, REQUEST_ID, COUNTERCLAIM_FLAG, CREATER_TYPE, 
    SIGN_SIGNATURE_LOG_ID
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ATTACH_CONTENT, OPPUGN_EVIDENCE
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zyxy.common.domain.CaseMatExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from case_mat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zyxy.common.domain.CaseMatExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from case_mat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from case_mat
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from case_mat
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zyxy.common.domain.CaseMatExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from case_mat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zyxy.common.domain.CaseMatWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into case_mat (ID, CASE_ID, ATTACH_NAME, 
      MAT_TYPE, NODE_ID, EVIDENCE_MAT, 
      PURPOSE_EVIDENCE, SOURCE_EVIDENCE, DOC_NAME, 
      REMARK, FILE_ID, DOC_TYPE, 
      REQUEST_ID, COUNTERCLAIM_FLAG, CREATER_TYPE, 
      SIGN_SIGNATURE_LOG_ID, ATTACH_CONTENT, 
      OPPUGN_EVIDENCE)
    values (#{id,jdbcType=VARCHAR}, #{caseId,jdbcType=VARCHAR}, #{attachName,jdbcType=VARCHAR}, 
      #{matType,jdbcType=CHAR}, #{nodeId,jdbcType=INTEGER}, #{evidenceMat,jdbcType=VARCHAR}, 
      #{purposeEvidence,jdbcType=VARCHAR}, #{sourceEvidence,jdbcType=VARCHAR}, #{docName,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{fileId,jdbcType=VARCHAR}, #{docType,jdbcType=VARCHAR}, 
      #{requestId,jdbcType=VARCHAR}, #{counterclaimFlag,jdbcType=CHAR}, #{createrType,jdbcType=CHAR}, 
      #{signSignatureLogId,jdbcType=VARCHAR}, #{attachContent,jdbcType=LONGVARCHAR}, 
      #{oppugnEvidence,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zyxy.common.domain.CaseMatWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into case_mat
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="attachName != null">
        ATTACH_NAME,
      </if>
      <if test="matType != null">
        MAT_TYPE,
      </if>
      <if test="nodeId != null">
        NODE_ID,
      </if>
      <if test="evidenceMat != null">
        EVIDENCE_MAT,
      </if>
      <if test="purposeEvidence != null">
        PURPOSE_EVIDENCE,
      </if>
      <if test="sourceEvidence != null">
        SOURCE_EVIDENCE,
      </if>
      <if test="docName != null">
        DOC_NAME,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="fileId != null">
        FILE_ID,
      </if>
      <if test="docType != null">
        DOC_TYPE,
      </if>
      <if test="requestId != null">
        REQUEST_ID,
      </if>
      <if test="counterclaimFlag != null">
        COUNTERCLAIM_FLAG,
      </if>
      <if test="createrType != null">
        CREATER_TYPE,
      </if>
      <if test="signSignatureLogId != null">
        SIGN_SIGNATURE_LOG_ID,
      </if>
      <if test="attachContent != null">
        ATTACH_CONTENT,
      </if>
      <if test="oppugnEvidence != null">
        OPPUGN_EVIDENCE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="attachName != null">
        #{attachName,jdbcType=VARCHAR},
      </if>
      <if test="matType != null">
        #{matType,jdbcType=CHAR},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="evidenceMat != null">
        #{evidenceMat,jdbcType=VARCHAR},
      </if>
      <if test="purposeEvidence != null">
        #{purposeEvidence,jdbcType=VARCHAR},
      </if>
      <if test="sourceEvidence != null">
        #{sourceEvidence,jdbcType=VARCHAR},
      </if>
      <if test="docName != null">
        #{docName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null">
        #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="docType != null">
        #{docType,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="counterclaimFlag != null">
        #{counterclaimFlag,jdbcType=CHAR},
      </if>
      <if test="createrType != null">
        #{createrType,jdbcType=CHAR},
      </if>
      <if test="signSignatureLogId != null">
        #{signSignatureLogId,jdbcType=VARCHAR},
      </if>
      <if test="attachContent != null">
        #{attachContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="oppugnEvidence != null">
        #{oppugnEvidence,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyxy.common.domain.CaseMatExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from case_mat
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_mat
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      </if>
      <if test="record.attachName != null">
        ATTACH_NAME = #{record.attachName,jdbcType=VARCHAR},
      </if>
      <if test="record.matType != null">
        MAT_TYPE = #{record.matType,jdbcType=CHAR},
      </if>
      <if test="record.nodeId != null">
        NODE_ID = #{record.nodeId,jdbcType=INTEGER},
      </if>
      <if test="record.evidenceMat != null">
        EVIDENCE_MAT = #{record.evidenceMat,jdbcType=VARCHAR},
      </if>
      <if test="record.purposeEvidence != null">
        PURPOSE_EVIDENCE = #{record.purposeEvidence,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceEvidence != null">
        SOURCE_EVIDENCE = #{record.sourceEvidence,jdbcType=VARCHAR},
      </if>
      <if test="record.docName != null">
        DOC_NAME = #{record.docName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.fileId != null">
        FILE_ID = #{record.fileId,jdbcType=VARCHAR},
      </if>
      <if test="record.docType != null">
        DOC_TYPE = #{record.docType,jdbcType=VARCHAR},
      </if>
      <if test="record.requestId != null">
        REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      </if>
      <if test="record.counterclaimFlag != null">
        COUNTERCLAIM_FLAG = #{record.counterclaimFlag,jdbcType=CHAR},
      </if>
      <if test="record.createrType != null">
        CREATER_TYPE = #{record.createrType,jdbcType=CHAR},
      </if>
      <if test="record.signSignatureLogId != null">
        SIGN_SIGNATURE_LOG_ID = #{record.signSignatureLogId,jdbcType=VARCHAR},
      </if>
      <if test="record.attachContent != null">
        ATTACH_CONTENT = #{record.attachContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.oppugnEvidence != null">
        OPPUGN_EVIDENCE = #{record.oppugnEvidence,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_mat
    set ID = #{record.id,jdbcType=VARCHAR},
      CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      ATTACH_NAME = #{record.attachName,jdbcType=VARCHAR},
      MAT_TYPE = #{record.matType,jdbcType=CHAR},
      NODE_ID = #{record.nodeId,jdbcType=INTEGER},
      EVIDENCE_MAT = #{record.evidenceMat,jdbcType=VARCHAR},
      PURPOSE_EVIDENCE = #{record.purposeEvidence,jdbcType=VARCHAR},
      SOURCE_EVIDENCE = #{record.sourceEvidence,jdbcType=VARCHAR},
      DOC_NAME = #{record.docName,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      FILE_ID = #{record.fileId,jdbcType=VARCHAR},
      DOC_TYPE = #{record.docType,jdbcType=VARCHAR},
      REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      COUNTERCLAIM_FLAG = #{record.counterclaimFlag,jdbcType=CHAR},
      CREATER_TYPE = #{record.createrType,jdbcType=CHAR},
      SIGN_SIGNATURE_LOG_ID = #{record.signSignatureLogId,jdbcType=VARCHAR},
      ATTACH_CONTENT = #{record.attachContent,jdbcType=LONGVARCHAR},
      OPPUGN_EVIDENCE = #{record.oppugnEvidence,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_mat
    set ID = #{record.id,jdbcType=VARCHAR},
      CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      ATTACH_NAME = #{record.attachName,jdbcType=VARCHAR},
      MAT_TYPE = #{record.matType,jdbcType=CHAR},
      NODE_ID = #{record.nodeId,jdbcType=INTEGER},
      EVIDENCE_MAT = #{record.evidenceMat,jdbcType=VARCHAR},
      PURPOSE_EVIDENCE = #{record.purposeEvidence,jdbcType=VARCHAR},
      SOURCE_EVIDENCE = #{record.sourceEvidence,jdbcType=VARCHAR},
      DOC_NAME = #{record.docName,jdbcType=VARCHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      FILE_ID = #{record.fileId,jdbcType=VARCHAR},
      DOC_TYPE = #{record.docType,jdbcType=VARCHAR},
      REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      COUNTERCLAIM_FLAG = #{record.counterclaimFlag,jdbcType=CHAR},
      CREATER_TYPE = #{record.createrType,jdbcType=CHAR},
      SIGN_SIGNATURE_LOG_ID = #{record.signSignatureLogId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyxy.common.domain.CaseMatWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_mat
    <set>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="attachName != null">
        ATTACH_NAME = #{attachName,jdbcType=VARCHAR},
      </if>
      <if test="matType != null">
        MAT_TYPE = #{matType,jdbcType=CHAR},
      </if>
      <if test="nodeId != null">
        NODE_ID = #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="evidenceMat != null">
        EVIDENCE_MAT = #{evidenceMat,jdbcType=VARCHAR},
      </if>
      <if test="purposeEvidence != null">
        PURPOSE_EVIDENCE = #{purposeEvidence,jdbcType=VARCHAR},
      </if>
      <if test="sourceEvidence != null">
        SOURCE_EVIDENCE = #{sourceEvidence,jdbcType=VARCHAR},
      </if>
      <if test="docName != null">
        DOC_NAME = #{docName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="fileId != null">
        FILE_ID = #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="docType != null">
        DOC_TYPE = #{docType,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        REQUEST_ID = #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="counterclaimFlag != null">
        COUNTERCLAIM_FLAG = #{counterclaimFlag,jdbcType=CHAR},
      </if>
      <if test="createrType != null">
        CREATER_TYPE = #{createrType,jdbcType=CHAR},
      </if>
      <if test="signSignatureLogId != null">
        SIGN_SIGNATURE_LOG_ID = #{signSignatureLogId,jdbcType=VARCHAR},
      </if>
      <if test="attachContent != null">
        ATTACH_CONTENT = #{attachContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="oppugnEvidence != null">
        OPPUGN_EVIDENCE = #{oppugnEvidence,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zyxy.common.domain.CaseMatWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_mat
    set CASE_ID = #{caseId,jdbcType=VARCHAR},
      ATTACH_NAME = #{attachName,jdbcType=VARCHAR},
      MAT_TYPE = #{matType,jdbcType=CHAR},
      NODE_ID = #{nodeId,jdbcType=INTEGER},
      EVIDENCE_MAT = #{evidenceMat,jdbcType=VARCHAR},
      PURPOSE_EVIDENCE = #{purposeEvidence,jdbcType=VARCHAR},
      SOURCE_EVIDENCE = #{sourceEvidence,jdbcType=VARCHAR},
      DOC_NAME = #{docName,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      FILE_ID = #{fileId,jdbcType=VARCHAR},
      DOC_TYPE = #{docType,jdbcType=VARCHAR},
      REQUEST_ID = #{requestId,jdbcType=VARCHAR},
      COUNTERCLAIM_FLAG = #{counterclaimFlag,jdbcType=CHAR},
      CREATER_TYPE = #{createrType,jdbcType=CHAR},
      SIGN_SIGNATURE_LOG_ID = #{signSignatureLogId,jdbcType=VARCHAR},
      ATTACH_CONTENT = #{attachContent,jdbcType=LONGVARCHAR},
      OPPUGN_EVIDENCE = #{oppugnEvidence,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyxy.common.domain.CaseMat">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_mat
    set CASE_ID = #{caseId,jdbcType=VARCHAR},
      ATTACH_NAME = #{attachName,jdbcType=VARCHAR},
      MAT_TYPE = #{matType,jdbcType=CHAR},
      NODE_ID = #{nodeId,jdbcType=INTEGER},
      EVIDENCE_MAT = #{evidenceMat,jdbcType=VARCHAR},
      PURPOSE_EVIDENCE = #{purposeEvidence,jdbcType=VARCHAR},
      SOURCE_EVIDENCE = #{sourceEvidence,jdbcType=VARCHAR},
      DOC_NAME = #{docName,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      FILE_ID = #{fileId,jdbcType=VARCHAR},
      DOC_TYPE = #{docType,jdbcType=VARCHAR},
      REQUEST_ID = #{requestId,jdbcType=VARCHAR},
      COUNTERCLAIM_FLAG = #{counterclaimFlag,jdbcType=CHAR},
      CREATER_TYPE = #{createrType,jdbcType=CHAR},
      SIGN_SIGNATURE_LOG_ID = #{signSignatureLogId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="insertEvidence" parameterType="com.zyxy.common.dto.CaseEvidenceDTO">
    insert into case_mat (
    ID,
    CASE_ID,
    MAT_TYPE,
    EVIDENCE_MAT,
    PURPOSE_EVIDENCE,
    SOURCE_EVIDENCE,
    FILE_ID,
    DOC_TYPE,
    REQUEST_ID,
    COUNTERCLAIM_FLAG,
    CREATER_TYPE
    )
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (
      #{item.id},
      #{caseId},
      '1',
      #{item.evidenceMat},
      #{item.purposeEvidence},
      #{item.sourceEvidence},
      #{item.fileId},
      #{item.docType},
      #{requestId},
      #{requestType},
      #{createrType}
      )
    </foreach>
  </insert>
  <insert id="insertAttachment" parameterType="com.zyxy.common.dto.CaseAttachmentDTO">
    insert into case_mat (
    ID,
    CASE_ID,
    MAT_TYPE,
    ATTACH_NAME,
    ATTACH_CONTENT,
    FILE_ID,
    DOC_TYPE,
    REQUEST_ID,
    COUNTERCLAIM_FLAG
    )
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (
      #{item.id},
      #{caseId},
      '0',
      #{item.attachName},
      #{item.attachContent},
      #{item.fileId},
      #{item.docType},
      #{requestId},
      #{requestType}
      )
    </foreach>
  </insert>

   <select id="selectByAttachExample" parameterType="com.zyxy.common.domain.CaseMat" resultType="com.zyxy.common.vo.AttachVO">
    SELECT
   		counterclaim_flag AS counterclamFlag,
  		mat_type AS matType,
    	attach_name AS attachName,
    	attach_content AS attachContent,
    	doc_name AS docName,
   	 	file_id AS fileId,
   	 	doc_type AS docType
    FROM case_mat
    WHERE
     	CASE_ID=#{caseId}
    AND counterclaim_flag=#{counterclaimFlag}
    AND mat_type=#{matType}
  </select>

   <select id="selectByEvidenceExample" parameterType="com.zyxy.common.domain.CaseMat" resultType="com.zyxy.common.vo.EvidenceVO">
   SELECT
   		counterclaim_flag AS counterclamFlag,
  		mat_type AS matType,
    	evidence_mat AS evidenceMat,
    	purpose_evidence AS purposeEvodence,
    	source_evidence AS sourceEvidence,
    	doc_name AS docName,
    	file_id AS fileId,
    	doc_type AS docType
    FROM case_mat
    WHERE
     	CASE_ID=#{caseId}
    AND counterclaim_flag=#{counterclaimFlag}
    AND mat_type=#{matType}
  </select>

    <!-- 查询双方仲裁申请提交资料信息-->
   <select id="selectApplicantDataList" parameterType="java.util.Map" resultType="com.zyxy.common.vo.ApplicantDataVO">
   SELECT
   		ID id,
   		creater_type createrType,
   		counterclaim_flag  counterclamFlag,
  		mat_type  matType,
  		attach_name attachName,
  		attach_content attachContent,
    	doc_name  docName,
    	file_id  fileId,
    	doc_type  docType
    FROM case_mat
    WHERE
     <if test="caseId != null and caseId != ''">
        case_id=#{caseId}
     </if>
    <if test="id != null and id != ''">
      	AND  id=#{id}
    </if>
    </select>
    
     <!-- 答辩证据 -->
    <insert id="insertRejionEvidence" parameterType="com.zyxy.common.dto.CaseEvidenceDTO">
    INSERT INTO case_mat(
    id,
    case_id,
    mat_type,
    evidence_mat,
	purpose_evidence,
	source_evidence,
	file_id,		
	doc_type,
	request_id,
	counterclaim_flag,
	creater_type
    )
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (
      #{item.id},
      #{caseId},
      #{matType},
      #{item.evidenceMat},
      #{item.purposeEvidence},
      #{item.sourceEvidence},
      #{item.fileId},
      #{item.docType},
      #{requestId},
      #{requestType},
      #{createrType}
      )
    </foreach>
  </insert>
  <select id="selectEvidencesParam" resultType="com.zyxy.common.vo.EvidenceVO">
  	 SELECT
   		counterclaim_flag AS counterclamFlag,
  		mat_type AS matType,
    	evidence_mat AS evidenceMat,
    	purpose_evidence AS purposeEvodence,
    	source_evidence AS sourceEvidence,
    	doc_name AS docName,
    	file_id AS fileId,
    	doc_type AS docType,
    	creater_type createrType,
    	oppugn_evidence oppugnEvidence
    FROM case_mat
    WHERE
     	case_id=#{caseId}
    AND creater_type=#{createrType}
    AND mat_type in (${@com.zyxy.common.enums.CaseMatTypeEnum@REQUEST_EVIDENCE.getCode()},
    ${@com.zyxy.common.enums.CaseMatTypeEnum@REPLY_EVIDENCE.getCode()},
    ${@com.zyxy.common.enums.CaseMatTypeEnum@ENUMERATE_EVIDENCE.getCode()});
  </select>
  
  
   <select id="selectEvidenceList" resultType="com.zyxy.common.vo.EvidenceVO">
  	 SELECT
   		cm.counterclaim_flag AS counterclamFlag,
  		cm.mat_type AS matType,
    	cm.evidence_mat AS evidenceMat,
    	cm.purpose_evidence AS purposeEvodence,
    	cm.source_evidence AS sourceEvidence,
    	cm.doc_name AS docName,
    	sf.sys_path AS fileId,
    	cm.doc_type AS docType,
    	cm.creater_type createrType
    FROM case_mat cm,case_approve ca,sys_file sf
    WHERE
    cm.case_id=ca.case_id
    AND cm.file_id=sf.id
    AND ca.id=#{approveId}
    AND cm.counterclaim_flag=${@com.zyxy.common.enums.RequestTypeEnum@REQUEST.getValue()}
    AND cm.mat_type=${@com.zyxy.common.enums.CaseMatTypeEnum@REQUEST_EVIDENCE.getCode()}
  </select>
</mapper>