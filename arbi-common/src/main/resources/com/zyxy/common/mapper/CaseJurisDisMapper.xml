<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyxy.common.mapper.CaseJurisDisMapper">
  <resultMap id="BaseResultMap" type="com.zyxy.common.domain.CaseJurisDis">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
    <result column="REQUEST_ID" jdbcType="VARCHAR" property="requestId" />
    <result column="JURIS_ID" jdbcType="VARCHAR" property="jurisId" />
    <result column="COUNTERCLAIM_FLAG" jdbcType="CHAR" property="counterclaimFlag" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
    <result column="FAIL_REASON" jdbcType="VARCHAR" property="failReason" />
    <result column="CREATER_ID" jdbcType="VARCHAR" property="createrId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="FEED_BACK_ID" jdbcType="VARCHAR" property="feedBackId" />
    <result column="FEED_BACK_TIME" jdbcType="TIMESTAMP" property="feedBackTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zyxy.common.domain.CaseJurisDisWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="REQUEST_ITEM" jdbcType="LONGVARCHAR" property="requestItem" />
    <result column="REASON" jdbcType="LONGVARCHAR" property="reason" />
    <result column="FEED_BACK" jdbcType="LONGVARCHAR" property="feedBack" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, CASE_ID, REQUEST_ID, JURIS_ID, COUNTERCLAIM_FLAG, STATUS, FAIL_REASON, CREATER_ID, 
    CREATE_TIME, FEED_BACK_ID, FEED_BACK_TIME
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    REQUEST_ITEM, REASON, FEED_BACK
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zyxy.common.domain.CaseJurisDisExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from case_juris_dis
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zyxy.common.domain.CaseJurisDisExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from case_juris_dis
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from case_juris_dis
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from case_juris_dis
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zyxy.common.domain.CaseJurisDisExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from case_juris_dis
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zyxy.common.domain.CaseJurisDisWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into case_juris_dis (ID, CASE_ID, REQUEST_ID, 
      JURIS_ID, COUNTERCLAIM_FLAG, STATUS, 
      FAIL_REASON, CREATER_ID, CREATE_TIME, 
      FEED_BACK_ID, FEED_BACK_TIME, REQUEST_ITEM, 
      REASON, FEED_BACK)
    values (#{id,jdbcType=VARCHAR}, #{caseId,jdbcType=VARCHAR}, #{requestId,jdbcType=VARCHAR}, 
      #{jurisId,jdbcType=VARCHAR}, #{counterclaimFlag,jdbcType=CHAR}, #{status,jdbcType=CHAR}, 
      #{failReason,jdbcType=VARCHAR}, #{createrId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{feedBackId,jdbcType=VARCHAR}, #{feedBackTime,jdbcType=TIMESTAMP}, #{requestItem,jdbcType=LONGVARCHAR}, 
      #{reason,jdbcType=LONGVARCHAR}, #{feedBack,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zyxy.common.domain.CaseJurisDisWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into case_juris_dis
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="requestId != null">
        REQUEST_ID,
      </if>
      <if test="jurisId != null">
        JURIS_ID,
      </if>
      <if test="counterclaimFlag != null">
        COUNTERCLAIM_FLAG,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="failReason != null">
        FAIL_REASON,
      </if>
      <if test="createrId != null">
        CREATER_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="feedBackId != null">
        FEED_BACK_ID,
      </if>
      <if test="feedBackTime != null">
        FEED_BACK_TIME,
      </if>
      <if test="requestItem != null">
        REQUEST_ITEM,
      </if>
      <if test="reason != null">
        REASON,
      </if>
      <if test="feedBack != null">
        FEED_BACK,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="jurisId != null">
        #{jurisId,jdbcType=VARCHAR},
      </if>
      <if test="counterclaimFlag != null">
        #{counterclaimFlag,jdbcType=CHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="failReason != null">
        #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="feedBackId != null">
        #{feedBackId,jdbcType=VARCHAR},
      </if>
      <if test="feedBackTime != null">
        #{feedBackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestItem != null">
        #{requestItem,jdbcType=LONGVARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="feedBack != null">
        #{feedBack,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyxy.common.domain.CaseJurisDisExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from case_juris_dis
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_juris_dis
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      </if>
      <if test="record.requestId != null">
        REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      </if>
      <if test="record.jurisId != null">
        JURIS_ID = #{record.jurisId,jdbcType=VARCHAR},
      </if>
      <if test="record.counterclaimFlag != null">
        COUNTERCLAIM_FLAG = #{record.counterclaimFlag,jdbcType=CHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.failReason != null">
        FAIL_REASON = #{record.failReason,jdbcType=VARCHAR},
      </if>
      <if test="record.createrId != null">
        CREATER_ID = #{record.createrId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.feedBackId != null">
        FEED_BACK_ID = #{record.feedBackId,jdbcType=VARCHAR},
      </if>
      <if test="record.feedBackTime != null">
        FEED_BACK_TIME = #{record.feedBackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.requestItem != null">
        REQUEST_ITEM = #{record.requestItem,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.reason != null">
        REASON = #{record.reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.feedBack != null">
        FEED_BACK = #{record.feedBack,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_juris_dis
    set ID = #{record.id,jdbcType=VARCHAR},
      CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      JURIS_ID = #{record.jurisId,jdbcType=VARCHAR},
      COUNTERCLAIM_FLAG = #{record.counterclaimFlag,jdbcType=CHAR},
      STATUS = #{record.status,jdbcType=CHAR},
      FAIL_REASON = #{record.failReason,jdbcType=VARCHAR},
      CREATER_ID = #{record.createrId,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      FEED_BACK_ID = #{record.feedBackId,jdbcType=VARCHAR},
      FEED_BACK_TIME = #{record.feedBackTime,jdbcType=TIMESTAMP},
      REQUEST_ITEM = #{record.requestItem,jdbcType=LONGVARCHAR},
      REASON = #{record.reason,jdbcType=LONGVARCHAR},
      FEED_BACK = #{record.feedBack,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_juris_dis
    set ID = #{record.id,jdbcType=VARCHAR},
      CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      JURIS_ID = #{record.jurisId,jdbcType=VARCHAR},
      COUNTERCLAIM_FLAG = #{record.counterclaimFlag,jdbcType=CHAR},
      STATUS = #{record.status,jdbcType=CHAR},
      FAIL_REASON = #{record.failReason,jdbcType=VARCHAR},
      CREATER_ID = #{record.createrId,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      FEED_BACK_ID = #{record.feedBackId,jdbcType=VARCHAR},
      FEED_BACK_TIME = #{record.feedBackTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyxy.common.domain.CaseJurisDisWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_juris_dis
    <set>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        REQUEST_ID = #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="jurisId != null">
        JURIS_ID = #{jurisId,jdbcType=VARCHAR},
      </if>
      <if test="counterclaimFlag != null">
        COUNTERCLAIM_FLAG = #{counterclaimFlag,jdbcType=CHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="failReason != null">
        FAIL_REASON = #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        CREATER_ID = #{createrId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="feedBackId != null">
        FEED_BACK_ID = #{feedBackId,jdbcType=VARCHAR},
      </if>
      <if test="feedBackTime != null">
        FEED_BACK_TIME = #{feedBackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestItem != null">
        REQUEST_ITEM = #{requestItem,jdbcType=LONGVARCHAR},
      </if>
      <if test="reason != null">
        REASON = #{reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="feedBack != null">
        FEED_BACK = #{feedBack,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zyxy.common.domain.CaseJurisDisWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_juris_dis
    set CASE_ID = #{caseId,jdbcType=VARCHAR},
      REQUEST_ID = #{requestId,jdbcType=VARCHAR},
      JURIS_ID = #{jurisId,jdbcType=VARCHAR},
      COUNTERCLAIM_FLAG = #{counterclaimFlag,jdbcType=CHAR},
      STATUS = #{status,jdbcType=CHAR},
      FAIL_REASON = #{failReason,jdbcType=VARCHAR},
      CREATER_ID = #{createrId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      FEED_BACK_ID = #{feedBackId,jdbcType=VARCHAR},
      FEED_BACK_TIME = #{feedBackTime,jdbcType=TIMESTAMP},
      REQUEST_ITEM = #{requestItem,jdbcType=LONGVARCHAR},
      REASON = #{reason,jdbcType=LONGVARCHAR},
      FEED_BACK = #{feedBack,jdbcType=LONGVARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyxy.common.domain.CaseJurisDis">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_juris_dis
    set CASE_ID = #{caseId,jdbcType=VARCHAR},
      REQUEST_ID = #{requestId,jdbcType=VARCHAR},
      JURIS_ID = #{jurisId,jdbcType=VARCHAR},
      COUNTERCLAIM_FLAG = #{counterclaimFlag,jdbcType=CHAR},
      STATUS = #{status,jdbcType=CHAR},
      FAIL_REASON = #{failReason,jdbcType=VARCHAR},
      CREATER_ID = #{createrId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      FEED_BACK_ID = #{feedBackId,jdbcType=VARCHAR},
      FEED_BACK_TIME = #{feedBackTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>


  <!--手动添加的方法-->
  <!--查询管辖权异议-->
   <select id="queryCaseJurisDisByCaseId" resultType="com.zyxy.common.vo.CaseJurisDisVO">
    SELECT
      d.id,
      d.case_id caseId,
      d.reason,
      u.name jurisName,
      d.status,
      d.fail_reason failReason,
      d.create_time createTime
    FROM
      case_juris_dis d,
      user_info u
    WHERE
      u.id = d.juris_id
      AND case_id = #{caseId}
      AND counterclaim_flag = #{counterclaimFlag}
  </select>


  <!--根据案件id和请求类型查询出管辖权异议基本对象-->
  <select id="selectCaseJurisDisByCaseIdAndRequestType" resultType="com.zyxy.common.vo.ArbiCaseJurisDisVO">
    SELECT
        ci.case_no caseNo,
        ci.id caseId,
        cp.prop_name propName,
        cd.prop_name defePropName,
        ci.sign_abri_protocol_mode signAbriProtocolMode,
        ci.sign_time signTime,
        ci.protocol_name protocolName,
        ci.case_acceptance_time caseAcceptanceTime,
        ci.case_type_id caseTypeId,
        cri.arb_claim arbClaim,
        cjd.id jurisDisId,
        cjd.create_time createTime,
        cjd.request_item requestItem,
        cjd.reason reason,
        cjd.feed_back feedBack,
        ui.name applyName
    FROM
        case_info ci,
        case_request_info cri,
        case_proposer cp,
        case_defendant cd,
        case_arbitrator ca,
        case_juris_dis cjd,
        user_info ui
    WHERE
        ci.id = cri.case_id
    AND
        ci.id = cp.case_id
    AND
        ci.id = cd.case_id
    AND
        ci.id = ca.case_id
    AND
        ci.id = cjd.case_id
    AND
        cri.id = cjd.request_id
    AND
        cjd.creater_id = ui.id
    AND
        ci.id = #{caseId}
    AND
        cri.request_type = #{requestType}
  </select>
  
  <select id="selectJurisdictionObjectionApplyDoc" resultType="com.zyxy.common.vo.JurisdictionObjectionApplyDocVO">
  	SELECT
		i.case_type_id caseType,
		j.reason reasonFact,
		j.request_item requset,
		CASE
	WHEN j.counterclaim_flag = 0 THEN
		p.prop_name
	WHEN j.counterclaim_flag = 1 THEN
		d.prop_name
	END applicantName,
	 j.create_time applyTime
	FROM
		case_info i,
		case_juris_dis j,
		case_proposer p,
		case_defendant d
	WHERE
		i.id = j.case_id
	AND i.id = p.case_id
	AND i.id = d.case_id
	AND i.id = #{caseId}
	AND j.counterclaim_flag = #{requestType}
  </select>
  
  <select id="selectJurisdictionObjectionFeedbackDoc" resultType="com.zyxy.common.vo.JurisdictionObjectionFeedbackDocVO">
  	SELECT
		j.feed_back feedBack,
		j.feed_back_time feedBackTime,
		CASE
	WHEN j.counterclaim_flag = '0' THEN
		d.prop_name
	WHEN j.counterclaim_flag = '1' THEN
		p.prop_name
	END  applicantName
	FROM
		case_juris_dis j,
		case_proposer p,
		case_defendant d
	WHERE
		j.case_id = p.case_id
	AND j.case_id = d.case_id
	AND j.case_id = #{caseId}
	AND j.counterclaim_flag = #{requestType}
  </select>
  
</mapper>