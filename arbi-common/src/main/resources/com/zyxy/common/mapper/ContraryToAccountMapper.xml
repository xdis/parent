<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zyxy.common.mapper.ContraryToAccountMapper" >
  <resultMap id="BaseResultMap" type="com.zyxy.common.domain.ContraryToAccount" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="money_bank" property="moneyBank" jdbcType="VARCHAR" />
    <result column="money_account" property="moneyAccount" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, amount, money_bank, money_account, create_time, status, user_id, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zyxy.common.domain.ContraryToAccountExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from contrary_to_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from contrary_to_account
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from contrary_to_account
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zyxy.common.domain.ContraryToAccountExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from contrary_to_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zyxy.common.domain.ContraryToAccount" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into contrary_to_account (id, amount, money_bank, 
      money_account, create_time, status, 
      user_id, remark)
    values (#{id,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{moneyBank,jdbcType=VARCHAR}, 
      #{moneyAccount,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=CHAR}, 
      #{userId,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zyxy.common.domain.ContraryToAccount" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into contrary_to_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="moneyBank != null" >
        money_bank,
      </if>
      <if test="moneyAccount != null" >
        money_account,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="moneyBank != null" >
        #{moneyBank,jdbcType=VARCHAR},
      </if>
      <if test="moneyAccount != null" >
        #{moneyAccount,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyxy.common.domain.ContraryToAccountExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from contrary_to_account
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update contrary_to_account
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.moneyBank != null" >
        money_bank = #{record.moneyBank,jdbcType=VARCHAR},
      </if>
      <if test="record.moneyAccount != null" >
        money_account = #{record.moneyAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update contrary_to_account
    set id = #{record.id,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      money_bank = #{record.moneyBank,jdbcType=VARCHAR},
      money_account = #{record.moneyAccount,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=CHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyxy.common.domain.ContraryToAccount" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update contrary_to_account
    <set >
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="moneyBank != null" >
        money_bank = #{moneyBank,jdbcType=VARCHAR},
      </if>
      <if test="moneyAccount != null" >
        money_account = #{moneyAccount,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyxy.common.domain.ContraryToAccount" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update contrary_to_account
    set amount = #{amount,jdbcType=DECIMAL},
      money_bank = #{moneyBank,jdbcType=VARCHAR},
      money_account = #{moneyAccount,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=CHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 对公账户审核列表 -->
    <select id="queryContraryAuditList" resultType="com.zyxy.common.vo.ContraryAuditVO" parameterType="com.zyxy.common.dto.ContraryAuditDTO">
    	SELECT
			cta.id id,
			li.NAME moneyName,
			cta.amount amount,
			cta.money_bank moneyBank,
			cta.money_account moneyAccount,
			cta.remark remark,
			cta.create_time createTime,
			cta.status status,
			li.TYPE type
		FROM
			litigant_info li,
			contrary_to_account cta
		WHERE
			li.USER_ID = cta.user_id
			 <if test="moneyName != null and moneyName != '' ">
			    AND li.NAME = #{moneyName}
			 </if>
			 <if test="moneyAccount != null and moneyAccount != '' ">
			    AND cta.money_account = #{moneyAccount}
			 </if>
			 <if test="initTime != null and initTime != ''">
			 	AND cta.create_time &gt;= #{initTime}
			 </if>
 			 <if test="cutoffTime != null and cutoffTime != ''">
 			 	AND cta.create_time &lt;= #{cutoffTime}
 			 </if>
 			 <if test="status != null and status != ''">
 			 	AND cta.status = #{status}
 			 </if>
			order by cta.create_time DESC
    </select>
    
    <!-- 审核对公账户-修改状态 -->
    <update id="updateContraryAudit">
		UPDATE contrary_to_account
		SET STATUS = #{status}
		WHERE
			id = #{id}    
    </update>
</mapper>