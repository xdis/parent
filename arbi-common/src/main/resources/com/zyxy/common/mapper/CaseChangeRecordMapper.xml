<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyxy.common.mapper.CaseChangeRecordMapper">
  <resultMap id="BaseResultMap" type="com.zyxy.common.domain.CaseChangeRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
    <result column="FACT_REASON" jdbcType="VARCHAR" property="factReason" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="REQUEST_ID" jdbcType="VARCHAR" property="requestId" />
    <result column="COUNTERCLAIM_FLAG" jdbcType="VARCHAR" property="counterclaimFlag" />
    <result column="STATUS" jdbcType="VARCHAR" property="status" />
    <result column="CREATER_ID" jdbcType="VARCHAR" property="createrId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="MARK_AMOUNT" jdbcType="DECIMAL" property="markAmount" />
    <result column="PAY_ID" jdbcType="VARCHAR" property="payId" />
    <result column="PAYMENT_SHOULD_BE" jdbcType="DECIMAL" property="paymentShouldBe" />
    <result column="SHOULD_BE_REFUND" jdbcType="DECIMAL" property="shouldBeRefund" />
    <result column="CASE_ADMISSIBLE_AMOUNT" jdbcType="DECIMAL" property="caseAdmissibleAmount" />
    <result column="CASE_HANDLING_AMOUNT" jdbcType="DECIMAL" property="caseHandlingAmount" />
    <result column="PAY_END_TIME" jdbcType="TIMESTAMP" property="payEndTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zyxy.common.domain.CaseChangeRecordWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="CHANGE_REQUEST" jdbcType="LONGVARCHAR" property="changeRequest" />
    <result column="CHANGE_CONTENT" jdbcType="LONGVARCHAR" property="changeContent" />
    <result column="REASON" jdbcType="LONGVARCHAR" property="reason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, CASE_ID, FACT_REASON, USER_ID, REQUEST_ID, COUNTERCLAIM_FLAG, STATUS, CREATER_ID, 
    CREATE_TIME,MARK_AMOUNT,PAY_ID,PAYMENT_SHOULD_BE,SHOULD_BE_REFUND,CASE_ADMISSIBLE_AMOUNT,CASE_HANDLING_AMOUNT,PAY_END_TIME
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    CHANGE_REQUEST, CHANGE_CONTENT, REASON
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.zyxy.common.domain.CaseChangeRecordExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from case_change_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.zyxy.common.domain.CaseChangeRecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from case_change_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from case_change_record
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from case_change_record
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zyxy.common.domain.CaseChangeRecordExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from case_change_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zyxy.common.domain.CaseChangeRecordWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into case_change_record (ID, CASE_ID, FACT_REASON, 
      USER_ID, REQUEST_ID, COUNTERCLAIM_FLAG, 
      STATUS, CREATER_ID, CREATE_TIME, 
      CHANGE_REQUEST, CHANGE_CONTENT, REASON,
      MARK_AMOUNT,PAY_ID,PAYMENT_SHOULD_BE,SHOULD_BE_REFUND,CASE_ADMISSIBLE_AMOUNT,CASE_HANDLING_AMOUNT,PAY_END_TIME
      )
    values (#{id,jdbcType=VARCHAR}, #{caseId,jdbcType=VARCHAR}, #{factReason,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{requestId,jdbcType=VARCHAR}, #{counterclaimFlag,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{createrId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{changeRequest,jdbcType=LONGVARCHAR}, #{changeContent,jdbcType=LONGVARCHAR}, #{reason,jdbcType=LONGVARCHAR},
      #{markAmount,jdbcType=DECIMAL},#{payId,jdbcType=VARCHAR},#{paymentShouldBe,jdbcType=DECIMAL},
      #{shouldBeRefund,jdbcType=DECIMAL},#{caseAdmissibleAmount,jdbcType=DECIMAL},#{caseHandlingAmount,jdbcType=DECIMAL},#{payEndTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zyxy.common.domain.CaseChangeRecordWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into case_change_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="factReason != null">
        FACT_REASON,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="requestId != null">
        REQUEST_ID,
      </if>
      <if test="counterclaimFlag != null">
        COUNTERCLAIM_FLAG,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="createrId != null">
        CREATER_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="changeRequest != null">
        CHANGE_REQUEST,
      </if>
      <if test="changeContent != null">
        CHANGE_CONTENT,
      </if>
      <if test="reason != null">
        REASON,
      </if>
      <if test="markAmount != null">
        MARK_AMOUNT,
      </if>
      <if test="payId != null">
        PAY_ID,
      </if>
      <if test="paymentShouldBe != null">
        PAYMENT_SHOULD_BE,
      </if>
      <if test="shouldBeRefund != null">
        SHOULD_BE_REFUND,
      </if>
      <if test="caseAdmissibleAmount != null">
        CASE_ADMISSIBLE_AMOUNT,
      </if>
      <if test="caseHandlingAmount != null">
        CASE_HANDLING_AMOUNT,
      </if>
      <if test="payEndTime != null">
        PAY_END_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="factReason != null">
        #{factReason,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="counterclaimFlag != null">
        #{counterclaimFlag,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="changeRequest != null">
        #{changeRequest,jdbcType=LONGVARCHAR},
      </if>
      <if test="changeContent != null">
        #{changeContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="markAmount != null">
        #{markAmount,jdbcType=DECIMAL},
      </if>
      <if test="payId != null">
         #{payId,jdbcType=VARCHAR},
      </if>
      <if test="paymentShouldBe != null">
         #{paymentShouldBe,jdbcType=DECIMAL},
      </if>
      <if test="shouldBeRefund != null">
        #{shouldBeRefund,jdbcType=DECIMAL},
      </if>
      <if test="caseAdmissibleAmount != null">
        #{caseAdmissibleAmount,jdbcType=DECIMAL},
      </if>
      <if test="caseHandlingAmount != null">
        #{caseHandlingAmount,jdbcType=DECIMAL},
      </if>
      <if test="payEndTime != null">
        #{payEndTime,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyxy.common.domain.CaseChangeRecordExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from case_change_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_change_record
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      </if>
      <if test="record.factReason != null">
        FACT_REASON = #{record.factReason,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.requestId != null">
        REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      </if>
      <if test="record.counterclaimFlag != null">
        COUNTERCLAIM_FLAG = #{record.counterclaimFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createrId != null">
        CREATER_ID = #{record.createrId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.changeRequest != null">
        CHANGE_REQUEST = #{record.changeRequest,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.changeContent != null">
        CHANGE_CONTENT = #{record.changeContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.reason != null">
        REASON = #{record.reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="markAmount != null">
        MARK_AMOUNT=#{markAmount,jdbcType=DECIMAL},
      </if>
      <if test="payId != null">
         PAY_ID=#{payId,jdbcType=VARCHAR},
      </if>
      <if test="paymentShouldBe != null">
         PAYMENT_SHOULD_BE=#{paymentShouldBe,jdbcType=DECIMAL},
      </if>
      <if test="shouldBeRefund != null">
        SHOULD_BE_REFUND=#{shouldBeRefund,jdbcType=DECIMAL},
      </if>
      <if test="caseAdmissibleAmount != null">
        CASE_ADMISSIBLE_AMOUNT=#{caseAdmissibleAmount,jdbcType=DECIMAL},
      </if>
      <if test="caseHandlingAmount != null">
        CASE_HANDLING_AMOUNT=#{caseHandlingAmount,jdbcType=DECIMAL},
      </if>
      <if test="payEndTime != null">
        PAY_END_TIME=#{payEndTime,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_change_record
    set ID = #{record.id,jdbcType=VARCHAR},
      CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      FACT_REASON = #{record.factReason,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      COUNTERCLAIM_FLAG = #{record.counterclaimFlag,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      CREATER_ID = #{record.createrId,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      CHANGE_REQUEST = #{record.changeRequest,jdbcType=LONGVARCHAR},
      CHANGE_CONTENT = #{record.changeContent,jdbcType=LONGVARCHAR},
      REASON = #{record.reason,jdbcType=LONGVARCHAR},
      MARK_AMOUNT=#{markAmount,jdbcType=DECIMAL},
      PAY_ID=#{payId,jdbcType=VARCHAR},
      PAYMENT_SHOULD_BE=#{paymentShouldBe,jdbcType=DECIMAL},
      SHOULD_BE_REFUND=#{shouldBeRefund,jdbcType=DECIMAL},
      CASE_ADMISSIBLE_AMOUNT=#{caseAdmissibleAmount,jdbcType=DECIMAL},
      CASE_HANDLING_AMOUNT=#{caseHandlingAmount,jdbcType=DECIMAL},
      PAY_END_TIME=#{payEndTime,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_change_record
    set ID = #{record.id,jdbcType=VARCHAR},
      CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      FACT_REASON = #{record.factReason,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      COUNTERCLAIM_FLAG = #{record.counterclaimFlag,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      CREATER_ID = #{record.createrId,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      MARK_AMOUNT=#{markAmount,jdbcType=DECIMAL},
      PAY_ID=#{payId,jdbcType=VARCHAR},
      PAYMENT_SHOULD_BE=#{paymentShouldBe,jdbcType=DECIMAL},
      SHOULD_BE_REFUND=#{shouldBeRefund,jdbcType=DECIMAL},
      CASE_ADMISSIBLE_AMOUNT=#{caseAdmissibleAmount,jdbcType=DECIMAL},
      CASE_HANDLING_AMOUNT=#{caseHandlingAmount,jdbcType=DECIMAL},
      PAY_END_TIME=#{payEndTime,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyxy.common.domain.CaseChangeRecordWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_change_record
    <set>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="factReason != null">
        FACT_REASON = #{factReason,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        REQUEST_ID = #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="counterclaimFlag != null">
        COUNTERCLAIM_FLAG = #{counterclaimFlag,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        CREATER_ID = #{createrId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="changeRequest != null">
        CHANGE_REQUEST = #{changeRequest,jdbcType=LONGVARCHAR},
      </if>
      <if test="changeContent != null">
        CHANGE_CONTENT = #{changeContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="reason != null">
        REASON = #{reason,jdbcType=LONGVARCHAR},
      </if>
      <if test="markAmount != null">
        MARK_AMOUNT=#{markAmount,jdbcType=DECIMAL},
      </if>
      <if test="payId != null">
         PAY_ID=#{payId,jdbcType=VARCHAR},
      </if>
      <if test="paymentShouldBe != null">
         PAYMENT_SHOULD_BE=#{paymentShouldBe,jdbcType=DECIMAL},
      </if>
      <if test="shouldBeRefund != null">
        SHOULD_BE_REFUND=#{shouldBeRefund,jdbcType=DECIMAL},
      </if>
      <if test="caseAdmissibleAmount != null">
        CASE_ADMISSIBLE_AMOUNT=#{caseAdmissibleAmount,jdbcType=DECIMAL},
      </if>
      <if test="caseHandlingAmount != null">
        CASE_HANDLING_AMOUNT=#{caseHandlingAmount,jdbcType=DECIMAL},
      </if>
      <if test="payEndTime != null">
        PAY_END_TIME=#{payEndTime,jdbcType=DECIMAL},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zyxy.common.domain.CaseChangeRecordWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_change_record
    set CASE_ID = #{caseId,jdbcType=VARCHAR},
      FACT_REASON = #{factReason,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      REQUEST_ID = #{requestId,jdbcType=VARCHAR},
      COUNTERCLAIM_FLAG = #{counterclaimFlag,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      CREATER_ID = #{createrId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      CHANGE_REQUEST = #{changeRequest,jdbcType=LONGVARCHAR},
      CHANGE_CONTENT = #{changeContent,jdbcType=LONGVARCHAR},
      REASON = #{reason,jdbcType=LONGVARCHAR},
      MARK_AMOUNT=#{markAmount,jdbcType=DECIMAL},
      PAY_ID=#{payId,jdbcType=VARCHAR},
      PAYMENT_SHOULD_BE=#{paymentShouldBe,jdbcType=DECIMAL},
      SHOULD_BE_REFUND=#{shouldBeRefund,jdbcType=DECIMAL},
      CASE_ADMISSIBLE_AMOUNT=#{caseAdmissibleAmount,jdbcType=DECIMAL},
      CASE_HANDLING_AMOUNT=#{caseHandlingAmount,jdbcType=DECIMAL},
      PAY_END_TIME=#{payEndTime,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyxy.common.domain.CaseChangeRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_change_record
    set CASE_ID = #{caseId,jdbcType=VARCHAR},
      FACT_REASON = #{factReason,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      REQUEST_ID = #{requestId,jdbcType=VARCHAR},
      COUNTERCLAIM_FLAG = #{counterclaimFlag,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      CREATER_ID = #{createrId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      MARK_AMOUNT=#{markAmount,jdbcType=DECIMAL},
      PAY_ID=#{payId,jdbcType=VARCHAR},
      PAYMENT_SHOULD_BE=#{paymentShouldBe,jdbcType=DECIMAL},
      SHOULD_BE_REFUND=#{shouldBeRefund,jdbcType=DECIMAL},
      CASE_ADMISSIBLE_AMOUNT=#{caseAdmissibleAmount,jdbcType=DECIMAL},
      CASE_HANDLING_AMOUNT=#{caseHandlingAmount,jdbcType=DECIMAL},
      PAY_END_TIME=#{payEndTime,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <select id="seleceRequsetIdByCaseIdAndRequestFlag" parameterType="string" resultType="String">
  	SELECT
		id
	FROM
		case_request_info
	WHERE
		case_id = #{caseId}
	AND request_type = #{requestType}
  </select>
  
   	<!--查询指定变更请求记录 -->
   <select id="selectChangeRecord" parameterType="string" resultType="com.zyxy.common.vo.ChangeRequestContentVO">
  	SELECT
		id changeId,
		change_request changeRequest,
		fact_reason factReason,
		mark_amount markAmount,
		payment_should_be paymentShouldBe,
		create_time createTime
	FROM
		case_change_record
	WHERE
		case_id = #{caseId}
	AND counterclaim_flag = #{counterclaimFlag}
	AND status = #{status}
  </select>
  
  	<!--查询出案件所有以通过的应补缴费用 -->
   <select id="selectPaymentShouldBe" parameterType="string" resultType="Double">
  	SELECT
		payment_should_be paymentShouldBe
	FROM
		case_change_record
	WHERE
		case_id = #{caseId}
	AND counterclaim_flag = #{counterclaimFlag}
	AND status = #{status}
  </select>
  
  <!-- 将变更仲裁请求费用更新到数据库-->
  <update id="updateChangeRecord" >
    UPDATE
    	case_change_record
    SET
    	mark_amount=#{markAmount},
    	payment_should_be=#{paymentShouldBe},
    	pay_id=#{payId},
    	case_admissible_amount=#{theFeeFor},
    	case_handling_amount=#{handling}
    WHERE	
    	id = #{changeId}
  </update>
  
   <!--更新审批状态-->
  <update id="updateAuditState" >
    UPDATE
    	case_change_record
    SET
    	status=#{auditStatus}
    WHERE	
    	id = #{changeId}
  </update>
  
  <!-- 查询变更请求文书内容 -->
  <select id="selectCaseChangeDoc" resultType="com.zyxy.common.vo.CaseChangeInfoVO" parameterType="string">
  	SELECT 
		p.prop_name applicantName,
		p.prop_type applicantType,
		p.sex applicantSex,
		p.birthday applicantBirthday,
		p.address applicantAddress,
		p.card_id applicantCardId,
		p.cert_name applicantCertName,
		p.cert_duties applicantCertDuties,
		p.unified_social_code applicantUnifiedSocialCode,
		p.ethnic applicantEthnic,
		p.phone applicantPhone,
		p.email applicantEmail,
		l.name applicantAttorney,
		l.vocation applicantAttorneyJob,
		d.prop_name beApplicantName,
		d.prop_type beApplicantType,
		d.sex beApplicantSex,
		d.birthday beApplicantBirthday,
		d.address beApplicantAddress,
		d.card_id beApplicantCardId,
		d.cert_name beApplicantCertName,
		d.cert_duties beApplicantCertDuties,
		d.unified_social_code beApplicantUnifiedSocialCode,
		d.ethnic beApplicantEthnic,
		d.phone beApplicantPhone,
		d.email beApplicantEmail,
		li.name beApplicantAttorney,
		li.vocation beApplicantAttorneyJob,
		c.change_request changeRequest,
		c.fact_reason factReason,
		c.status status,
		c.request_id requestId,
		c.create_time applyTime
	FROM
		case_proposer p,
		case_defendant d,
		case_change_record c,
		case_info i
	LEFT JOIN
		case_agent a
	ON
		i.id = a.case_id
	AND	
		a.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@PROPESER.getValue()}
	LEFT JOIN
		litigant_info l
	ON	
		l.user_id = a.agent_id
	LEFT JOIN
		case_agent ca
	ON	
		i.id = ca.case_id
	AND
		ca.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@DEFENDANT.getValue()}
	LEFT JOIN
		litigant_info li
	ON
		li.user_id = ca.agent_id 
	WHERE
		i.id = p.case_id
	AND
		i.id = d.case_id
	AND	
		i.id = c.case_id
	AND
		c.counterclaim_flag = ${@com.zyxy.common.enums.RequestTypeEnum@REQUEST.getValue()}
	AND
		i.id = #{caseId}
	AND
		c.id = #{changeId}
  
  </select>
  
  <select id="selectCaseBackChangeDoc" resultType="com.zyxy.common.vo.CaseChangeInfoVO" parameterType="string">
  	SELECT 
		d.prop_name applicantName,
		d.prop_type applicantType,
		d.sex applicantSex,
		d.birthday applicantBirthday,
		d.address applicantAddress,
		d.card_id applicantCardId,
		d.cert_name applicantCertName,
		d.cert_duties applicantCertDuties,
		d.unified_social_code applicantUnifiedSocialCode,
		d.ethnic applicantEthnic,
		d.phone applicantPhone,
		d.email applicantEmail,
		l.name applicantAttorney,
		l.vocation applicantAttorneyJob,
		p.prop_name beApplicantName,
		p.prop_type beApplicantType,
		p.sex beApplicantSex,
		p.birthday beApplicantBirthday,
		p.address beApplicantAddress,
		p.card_id beApplicantCardId,
		p.cert_name beApplicantCertName,
		p.cert_duties beApplicantCertDuties,
		p.unified_social_code beApplicantUnifiedSocialCode,
		p.ethnic beApplicantEthnic,
		p.phone beApplicantPhone,
		p.email beApplicantEmail,
		li.name beApplicantAttorney,
		li.vocation beApplicantAttorneyJob,
		c.change_request requestItem,
		c.fact_reason factReason,
		c.status status,
		c.request_id requestId,
		c.create_time applyTime
	FROM
		case_proposer p,
		case_defendant d,
		case_change_record c,
		case_info i
	LEFT JOIN
		case_agent a
	ON
		i.id = a.case_id
	AND	
		a.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@PROPESER.getValue()}
	LEFT JOIN
		litigant_info l
	ON	
		l.user_id = a.agent_id
	LEFT JOIN
		case_agent ca
	ON	
		i.id = ca.case_id
	AND
		ca.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@DEFENDANT.getValue()}
	LEFT JOIN
		litigant_info li
	ON
		li.user_id = ca.agent_id 
	WHERE
		i.id = p.case_id
	AND
		i.id = d.case_id
	AND	
		i.id = c.case_id
	AND
		c.counterclaim_flag = ${@com.zyxy.common.enums.RequestTypeEnum@BACK_REQUEST.getValue()}
	AND
		i.id = #{caseId}
	AND
		c.id = #{changeId}
  </select>
  
  <!-- 本请求变更 -->
  <select id="selectChangeRequestList" parameterType="string" resultType="com.zyxy.common.vo.RequestListVO">
  	SELECT
		c.case_id caseId,
		c.request_id requestId,
		c.id changeId,
		c.create_time createTime,
	    CASE
	WHEN o.status IS NULL THEN
		'待审核'
	WHEN o.status = 0 THEN
		'待支付'
	WHEN o.status = 1 THEN
		'案件进行中'
	WHEN o.status = 2 THEN
		'变更失败'
	END status ,
	    ${@com.zyxy.common.enums.CaseDocTypeEnum@CHANGE_REQUEST_APPLY_BOOK.getCode()} requestType,
		'变更仲裁申请书' dcoName
	FROM
		case_change_record c LEFT JOIN pay_order_tran o ON
		c.id = o.change_id
	WHERE
		c.case_id = #{caseId}
	AND counterclaim_flag = ${@com.zyxy.common.enums.RequestTypeEnum@REQUEST.getValue()}
	<if test="litigantType!=null">
		AND
		o.status = 2
	</if>
  </select>
  
  <!-- 反请求变更书 -->
    <select id="selectChangeBackRequestList" parameterType="string" resultType="com.zyxy.common.vo.RequestListVO">
  	SELECT
		c.case_id caseId,
		c.request_id requestId,
		c.id changeId,
		c.create_time createTime,
	    CASE
	WHEN o.status IS NULL THEN
		'待审核'
	WHEN o.status = 0 THEN
		'待支付'
	WHEN o.status = 1 THEN
		'案件进行中'
	WHEN o.status = 2 THEN
		'变更失败'
	END status ,
	    ${@com.zyxy.common.enums.CaseDocTypeEnum@CHANGE_BACK_REQUEST_APPLY_BOOK.getCode()} requestType,
		'变更反请求申请书' dcoName
	FROM
		case_change_record c LEFT JOIN pay_order_tran o ON
		c.id = o.change_id
	WHERE
		c.case_id = #{caseId}
	AND counterclaim_flag = ${@com.zyxy.common.enums.RequestTypeEnum@BACK_REQUEST.getValue()}
	<if test="litigantType!=null">
		AND
		o.status = 2
	</if>
  </select>
  
  
  <!-- 查询出变更仲裁请求申请对象 -->
    <select id="queryCaseChangeRecordByDTO" resultType="com.zyxy.common.vo.CaseChangeRecordVO" >
        SELECT
            ci.id caseId,
            cp.prop_name propName,
            cp.sex propSex,
            cp.ethnic pronEthnic,
            cp.card_id propCardId,
            cp.address propAddress,
            cp.cert_name propCertName,
            cp.cert_duties propCertDuties,
            cd.prop_name defePropName,
            cd.sex defeSex,
            cd.ethnic defeEthnic,
            cd.card_id defeCardId,
            cd.address defeAddress,
            cd.cert_name defeCertName,
            cd.cert_duties defeCertDuties,
            m.name propAgentName,
            m.sex propAgentSex,
            m.card_id propAgentCardId,
            m.ethnic propAgentEthnic,
            m.address propAgentAddress,
            n.name defeAgentName,
            n.sex defeAgentSex,
            n.card_id defeAgentCardId,
            n.ethnic defeAgentEthnic,
            n.address defeAgentAddress,
            ccr.id caseChangeRecordId,
            ccr.change_request changeRequest,
            ccr.fact_reason factReason,
            ccr.change_content changeContent,
            ccr.create_time createTime,
            ccr.request_id requestId,
            ccr.counterclaim_flag counterclaimFlag,
            ccr.mark_amount markAmount,
            ccr.case_admissible_amount caseAdmissibleAmount,
            ccr.case_handling_amount caseHandlingAmount,
            ccr.should_be_refund shouldBeRefund,
            ccr.payment_should_be paymentShouldBe,
            ca.id,
            ui.name applyName, 
            IF (
                ca.approve_user_id = #{userId},
                '0',
                '1'
            ) primiss,
            IF (
                (
                    SELECT
                        COUNT(1)
                    FROM
                        case_avoid_record
                    WHERE
                        case_id =  ci.id
                    AND avoid_type = ${@com.zyxy.common.enums.CaseAvoidTypeEnum@SECRETARY.getValue()}
                    AND avoid_id = #{userId}
                    AND (status = ${@com.zyxy.common.enums.CaseAvoidStatusEnum@WAIT_AUDIT.getValue()} OR status = ${@com.zyxy.common.enums.CaseAvoidStatusEnum@SUCCESS_AUDIT.getValue()})
                ) > 0,
                '0',
                '1'
            ) isApplyAvoid
        FROM
            case_info ci
        LEFT JOIN (
            SELECT
                ca.case_id,
                li. NAME,
                ui.sex,
                li.ethnic,
                li.card_id,
                li.address
            FROM
                case_agent ca,
                litigant_info li,
                user_info ui
            WHERE
                ca.agent_id = li.user_id
            AND li.user_id = ui.id
            AND ca.litigant_type = ${@com.zyxy.common.enums.CaseAgentTypeEnum@PROP_AGENT.getCode()}
            AND li.element_verify_status = ${@com.zyxy.common.enums.LitigantElementVerifyStatusEnum@GET_THROUGH.getCode()}
        ) m ON ci.id = m.case_id
        LEFT JOIN (
            SELECT
                ca.case_id,
                li. NAME,
                ui.sex,
                li.ethnic,
                li.card_id,
                li.address
            FROM
                case_agent ca,
                litigant_info li,
                user_info ui
            WHERE
                ca.agent_id = li.user_id
            AND li.user_id = ui.id
            AND ca.litigant_type = ${@com.zyxy.common.enums.CaseAgentTypeEnum@DEFE_AGENT.getCode()}
            AND li.element_verify_status =  ${@com.zyxy.common.enums.LitigantElementVerifyStatusEnum@GET_THROUGH.getCode()}
        ) n ON ci.id = n.case_id,
         case_proposer cp,
         case_defendant cd,
         case_change_record ccr,
         case_approve ca,
         user_info ui
        WHERE
            ci.id = cp.case_id
        AND 
            ci.id = cd.case_id
        AND 
            ci.id = ccr.case_id
        AND 
            ci.id = ca.case_id
        AND 
            ccr.user_id = ui.id
        AND
            ca.id=#{approveId}
    </select>
    
    
	<!--根据案件id和请求类型，查询出涉案金额等金额-->
	<select id="queryChangerRecordAmountByCaseId" resultType="com.zyxy.common.vo.CaseRequestInfoVO">
	  SELECT
	      ccr.request_id requestId,
	      ccr.mark_amount caseMarkAmount,
	      ccr.should_be_refund caseSholdBeRefund,
	      ccr.payment_should_be casePaymentShouldBe
	  FROM
	      case_change_record ccr
	  WHERE
	      ccr.case_id = #{caseId}
	  AND ccr.counterclaim_flag = #{requestType}
	</select>
	
	     	<!--查询指定变更请求记录 -->
   <select id="queryChangeRecord" parameterType="string" resultType="com.zyxy.common.vo.ChangeRequestContentVO">
		SELECT
			ccr.id changeId,
			ccr.change_request changeRequest,
			ccr.fact_reason factReason,
			ccr.mark_amount markAmount,
			ccr.payment_should_be paymentShouldBe,
			ccr.create_time createTime
		FROM
			case_change_record ccr,
			case_approve ca
		WHERE
			ca.id = #{approveId}
		AND ca.busi_id = ccr.id
  </select>
    
</mapper>
