<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyxy.common.mapper.EnterpriseAuthRecordMapper">
    <resultMap id="BaseResultMap" type="com.zyxy.common.domain.EnterpriseAuthRecord">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="ID" jdbcType="VARCHAR" property="id"/>
        <result column="TYPE" jdbcType="CHAR" property="type"/>
        <result column="NAME" jdbcType="VARCHAR" property="name"/>
        <result column="UNIFIED_SOCIAL_CODE" jdbcType="VARCHAR" property="unifiedSocialCode"/>
        <result column="EMAIL" jdbcType="VARCHAR" property="email"/>
        <result column="CERT_NAME" jdbcType="VARCHAR" property="certName"/>
        <result column="CERT_DUTIES" jdbcType="VARCHAR" property="certDuties"/>
        <result column="ADDRESS" jdbcType="VARCHAR" property="address"/>
        <result column="CARD_IMAGE_FRONT" jdbcType="VARCHAR" property="cardImageFront"/>
        <result column="CARD_IMAGE_CON" jdbcType="VARCHAR" property="cardImageCon"/>
        <result column="three_in_one" jdbcType="VARCHAR" property="threeInOne"/>
        <result column="PLATFORM_AUTH" jdbcType="VARCHAR" property="platformAuth"/>
        <result column="AMOUNT" jdbcType="DECIMAL" property="amount"/>
        <result column="STATUS" jdbcType="CHAR" property="status"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="CREATER_ID" jdbcType="VARCHAR" property="createrId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        ID, TYPE, NAME, UNIFIED_SOCIAL_CODE, EMAIL, CERT_NAME, CERT_DUTIES, ADDRESS, CARD_IMAGE_FRONT,
        CARD_IMAGE_CON, three_in_one, PLATFORM_AUTH, AMOUNT, STATUS, CREATE_TIME, CREATER_ID
    </sql>
    <select id="selectByExample" parameterType="com.zyxy.common.domain.EnterpriseAuthRecordExample"
            resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from enterprise_auth_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.zyxy.common.domain.EnterpriseAuthRecordExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from enterprise_auth_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.zyxy.common.domain.EnterpriseAuthRecord">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into enterprise_auth_record (ID, TYPE, NAME,
        UNIFIED_SOCIAL_CODE, EMAIL, CERT_NAME,
        CERT_DUTIES, ADDRESS, CARD_IMAGE_FRONT,
        CARD_IMAGE_CON, three_in_one, PLATFORM_AUTH,
        AMOUNT, STATUS, CREATE_TIME,
        CREATER_ID)
        values (#{id,jdbcType=VARCHAR}, #{type,jdbcType=CHAR}, #{name,jdbcType=VARCHAR},
        #{unifiedSocialCode,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{certName,jdbcType=VARCHAR},
        #{certDuties,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{cardImageFront,jdbcType=VARCHAR},
        #{cardImageCon,jdbcType=VARCHAR}, #{threeInOne,jdbcType=VARCHAR}, #{platformAuth,jdbcType=VARCHAR},
        #{amount,jdbcType=DECIMAL}, #{status,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{createrId,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.zyxy.common.domain.EnterpriseAuthRecord">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into enterprise_auth_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="type != null">
                TYPE,
            </if>
            <if test="name != null">
                NAME,
            </if>
            <if test="unifiedSocialCode != null">
                UNIFIED_SOCIAL_CODE,
            </if>
            <if test="email != null">
                EMAIL,
            </if>
            <if test="certName != null">
                CERT_NAME,
            </if>
            <if test="certDuties != null">
                CERT_DUTIES,
            </if>
            <if test="address != null">
                ADDRESS,
            </if>
            <if test="cardImageFront != null">
                CARD_IMAGE_FRONT,
            </if>
            <if test="cardImageCon != null">
                CARD_IMAGE_CON,
            </if>
            <if test="threeInOne != null">
                three_in_one,
            </if>
            <if test="platformAuth != null">
                PLATFORM_AUTH,
            </if>
            <if test="amount != null">
                AMOUNT,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="createrId != null">
                CREATER_ID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=CHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="unifiedSocialCode != null">
                #{unifiedSocialCode,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="certName != null">
                #{certName,jdbcType=VARCHAR},
            </if>
            <if test="certDuties != null">
                #{certDuties,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="cardImageFront != null">
                #{cardImageFront,jdbcType=VARCHAR},
            </if>
            <if test="cardImageCon != null">
                #{cardImageCon,jdbcType=VARCHAR},
            </if>
            <if test="threeInOne != null">
                #{threeInOne,jdbcType=VARCHAR},
            </if>
            <if test="platformAuth != null">
                #{platformAuth,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="status != null">
                #{status,jdbcType=CHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createrId != null">
                #{createrId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zyxy.common.domain.EnterpriseAuthRecordExample"
            resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from enterprise_auth_record
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update enterprise_auth_record
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                TYPE = #{record.type,jdbcType=CHAR},
            </if>
            <if test="record.name != null">
                NAME = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.unifiedSocialCode != null">
                UNIFIED_SOCIAL_CODE = #{record.unifiedSocialCode,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                EMAIL = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.certName != null">
                CERT_NAME = #{record.certName,jdbcType=VARCHAR},
            </if>
            <if test="record.certDuties != null">
                CERT_DUTIES = #{record.certDuties,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null">
                ADDRESS = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.cardImageFront != null">
                CARD_IMAGE_FRONT = #{record.cardImageFront,jdbcType=VARCHAR},
            </if>
            <if test="record.cardImageCon != null">
                CARD_IMAGE_CON = #{record.cardImageCon,jdbcType=VARCHAR},
            </if>
            <if test="record.threeInOne != null">
                three_in_one = #{record.threeInOne,jdbcType=VARCHAR},
            </if>
            <if test="record.platformAuth != null">
                PLATFORM_AUTH = #{record.platformAuth,jdbcType=VARCHAR},
            </if>
            <if test="record.amount != null">
                AMOUNT = #{record.amount,jdbcType=DECIMAL},
            </if>
            <if test="record.status != null">
                STATUS = #{record.status,jdbcType=CHAR},
            </if>
            <if test="record.createTime != null">
                CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createrId != null">
                CREATER_ID = #{record.createrId,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update enterprise_auth_record
        set ID = #{record.id,jdbcType=VARCHAR},
        TYPE = #{record.type,jdbcType=CHAR},
        NAME = #{record.name,jdbcType=VARCHAR},
        UNIFIED_SOCIAL_CODE = #{record.unifiedSocialCode,jdbcType=VARCHAR},
        EMAIL = #{record.email,jdbcType=VARCHAR},
        CERT_NAME = #{record.certName,jdbcType=VARCHAR},
        CERT_DUTIES = #{record.certDuties,jdbcType=VARCHAR},
        ADDRESS = #{record.address,jdbcType=VARCHAR},
        CARD_IMAGE_FRONT = #{record.cardImageFront,jdbcType=VARCHAR},
        CARD_IMAGE_CON = #{record.cardImageCon,jdbcType=VARCHAR},
        three_in_one = #{record.threeInOne,jdbcType=VARCHAR},
        PLATFORM_AUTH = #{record.platformAuth,jdbcType=VARCHAR},
        AMOUNT = #{record.amount,jdbcType=DECIMAL},
        STATUS = #{record.status,jdbcType=CHAR},
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
        CREATER_ID = #{record.createrId,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    
    <!-- 法人身份审核列表 -->
    <select id="queryArbiCaseList" resultType="com.zyxy.common.vo.MethodAuditVO" parameterType="com.zyxy.common.dto.UserAuditDTO">
    	SELECT
			ear.ID id,
			ear.CERT_NAME certName,
			li.CARD_ID cardId,
			ear.CREATE_TIME createTime,
			ear.CARD_IMAGE_FRONT cardImageFront,
			ear.CARD_IMAGE_CON cardImageCon,
			ear.STATUS status
		FROM
			enterprise_auth_record ear,
			litigant_info li
		WHERE
			ear.CREATER_ID = li.USER_ID
			 <if test="propName!=null and propName!='' ">
			      AND ear.CERT_NAME=#{propName}
			 </if>
			 <if test="cardId!=null and cardId!='' ">
			      AND li.CARD_ID=#{cardId}
			 </if>
			 <if test="status!=null and status!='' ">
			      AND ear.STATUS=#{status}
			 </if>
			order by ear.CREATE_TIME DESC
    </select>
    
    <!-- 审核法人身份-修改状态 -->
    <update id="updateMethodAudit">
		UPDATE 
			enterprise_auth_record
		SET
		 	status = #{status}
		WHERE
			AND id=#{id}
    </update>
</mapper>