<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyxy.common.mapper.CaseApproveMapper">
  <resultMap id="BaseResultMap" type="com.zyxy.common.domain.CaseApprove">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
    <result column="REQUEST_ID" jdbcType="VARCHAR" property="requestId" />
    <result column="APPROVE_TYPE" jdbcType="VARCHAR" property="approveType" />
    <result column="APPROVE_STATUS" jdbcType="CHAR" property="approveStatus" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="BUSI_ID" jdbcType="VARCHAR" property="busiId" />
    <result column="CREATER_ID" jdbcType="VARCHAR" property="createrId" />
    <result column="APPROVE_USER_ID" jdbcType="VARCHAR" property="approveUserId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, CASE_ID, REQUEST_ID, APPROVE_TYPE, APPROVE_STATUS, CREATE_TIME, BUSI_ID, CREATER_ID, 
    APPROVE_USER_ID
  </sql>
  <select id="selectByExample" parameterType="com.zyxy.common.domain.CaseApproveExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from case_approve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from case_approve
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from case_approve
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zyxy.common.domain.CaseApproveExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from case_approve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zyxy.common.domain.CaseApprove">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into case_approve (ID, CASE_ID, REQUEST_ID, 
      APPROVE_TYPE, APPROVE_STATUS, CREATE_TIME, 
      BUSI_ID, CREATER_ID, APPROVE_USER_ID
      )
    values (#{id,jdbcType=VARCHAR}, #{caseId,jdbcType=VARCHAR}, #{requestId,jdbcType=VARCHAR}, 
      #{approveType,jdbcType=VARCHAR}, #{approveStatus,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{busiId,jdbcType=VARCHAR}, #{createrId,jdbcType=VARCHAR}, #{approveUserId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zyxy.common.domain.CaseApprove">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into case_approve
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="requestId != null">
        REQUEST_ID,
      </if>
      <if test="approveType != null">
        APPROVE_TYPE,
      </if>
      <if test="approveStatus != null">
        APPROVE_STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="busiId != null">
        BUSI_ID,
      </if>
      <if test="createrId != null">
        CREATER_ID,
      </if>
      <if test="approveUserId != null">
        APPROVE_USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="approveType != null">
        #{approveType,jdbcType=VARCHAR},
      </if>
      <if test="approveStatus != null">
        #{approveStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="busiId != null">
        #{busiId,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=VARCHAR},
      </if>
      <if test="approveUserId != null">
        #{approveUserId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyxy.common.domain.CaseApproveExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from case_approve
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_approve
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      </if>
      <if test="record.requestId != null">
        REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      </if>
      <if test="record.approveType != null">
        APPROVE_TYPE = #{record.approveType,jdbcType=VARCHAR},
      </if>
      <if test="record.approveStatus != null">
        APPROVE_STATUS = #{record.approveStatus,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.busiId != null">
        BUSI_ID = #{record.busiId,jdbcType=VARCHAR},
      </if>
      <if test="record.createrId != null">
        CREATER_ID = #{record.createrId,jdbcType=VARCHAR},
      </if>
      <if test="record.approveUserId != null">
        APPROVE_USER_ID = #{record.approveUserId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_approve
    set ID = #{record.id,jdbcType=VARCHAR},
      CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      APPROVE_TYPE = #{record.approveType,jdbcType=VARCHAR},
      APPROVE_STATUS = #{record.approveStatus,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      BUSI_ID = #{record.busiId,jdbcType=VARCHAR},
      CREATER_ID = #{record.createrId,jdbcType=VARCHAR},
      APPROVE_USER_ID = #{record.approveUserId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyxy.common.domain.CaseApprove">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_approve
    <set>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="requestId != null">
        REQUEST_ID = #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="approveType != null">
        APPROVE_TYPE = #{approveType,jdbcType=VARCHAR},
      </if>
      <if test="approveStatus != null">
        APPROVE_STATUS = #{approveStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="busiId != null">
        BUSI_ID = #{busiId,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        CREATER_ID = #{createrId,jdbcType=VARCHAR},
      </if>
      <if test="approveUserId != null">
        APPROVE_USER_ID = #{approveUserId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyxy.common.domain.CaseApprove">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_approve
    set CASE_ID = #{caseId,jdbcType=VARCHAR},
      REQUEST_ID = #{requestId,jdbcType=VARCHAR},
      APPROVE_TYPE = #{approveType,jdbcType=VARCHAR},
      APPROVE_STATUS = #{approveStatus,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      BUSI_ID = #{busiId,jdbcType=VARCHAR},
      CREATER_ID = #{createrId,jdbcType=VARCHAR},
      APPROVE_USER_ID = #{approveUserId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <!--手动添加的方法-->
  <!--查询出审批记录-->
  <select id="queryApproveRecord" resultType="com.zyxy.common.vo.ApproveRecordVO">
	SELECT
		ca.approve_status approveStatus,
		cas.approve_suggest approveSuggest,
		mi.duties duties,
		ui.name approveName
	FROM
		case_approve ca,
		case_approve_suggest cas,
		case_request_info cri,
		manager_info mi,
		user_info ui
	WHERE
		ca.id = cas.approve_id
	AND 
		ca.request_id = cri.id
	AND 
		ca.case_id = cri.case_id
	AND 
		ca.approve_user_id = mi.user_id
	AND 
		mi.user_id = ui.id
	AND 
		ca.case_id = #{caseId}
	AND 
		ca.approve_type = #{approveType}
	AND 
		cri.request_type = #{requestType}
	AND mi.status =
		${@com.zyxy.common.enums.ManagerInfoStatusEnum@NORMAL.getCode()}
  </select>


  <!--查询出审批记录，秘书参与审批-->
  <select id="queryApproveRecordCaseId" resultType="com.zyxy.common.vo.ApproveRecordVO">
   SELECT
   	ca.id approveId,
    cas.approve_suggest approveSuggest,
    mi.duties duties,
    ui.name approveName,
    cas.opinion_status opinionStatus,
    cas.create_time  createTime
    FROM
    case_approve ca,
    case_approve_suggest cas,
    case_request_info cri,
    manager_info mi,
    user_info ui
    WHERE
    ca.id = cas.approve_id
    AND ca.request_id = cri.id
    AND ca.case_id = cri.case_id
    AND cas.creater_id = mi.user_id
    AND mi.user_id = ui.id
    AND ca.case_id = #{caseId}
    AND ca.approve_type = #{approveType}
    AND ca.approve_status = #{approveStatus}
    <if test="requestType==null">
    AND cri.request_type = #{requestType}
    </if>
    AND mi.status =  ${@com.zyxy.common.enums.ManagerInfoStatusEnum@NORMAL.getCode()}
    ORDER BY
	cas.create_time
	DESC
  </select>
  
   <!--根据审批Id,查询审批记录-->
  <select id="queryApproveRecordApproveId" resultType="com.zyxy.common.vo.ApproveRecordVO">
   SELECT
   	ca.id approveId,
    cas.approve_suggest approveSuggest,
    mi.duties duties,
    ui.name approveName,
    cas.opinion_status opinionStatus,
    cas.create_time  createTime
    FROM
    case_approve ca,
    case_approve_suggest cas,
    manager_info mi,
    user_info ui
    WHERE
    ca.id = cas.approve_id
    AND cas.creater_id = mi.user_id
    AND mi.user_id = ui.id
    AND ca.id = #{approveId}
    AND mi.status =  ${@com.zyxy.common.enums.ManagerInfoStatusEnum@NORMAL.getCode()}
    ORDER BY
	cas.create_time
  </select>


  <select id="selectApproveInfoByCaseId" parameterType="com.zyxy.common.domain.CaseApprove" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" />
      FROM case_approve
    WHERE
      CASE_ID=#{caseId}

    <if test="approveStatus!=null and approveStatus!='' ">
      AND APPROVE_STATUS=#{approveStatus}
    </if>
    <if test="approveType!=null and approveType!='' ">
      AND APPROVE_TYPE=#{approveType}
    </if>
   
  </select>
  
  
   <!-- 修改审批状态 -->
   <update id="updateStatus" parameterType="com.zyxy.common.domain.CaseApprove">
    UPDATE case_approve
    SET
     approve_status = #{approveStatus,jdbcType=CHAR}
    WHERE ID = #{id,jdbcType=VARCHAR}
  </update>
  
  
  <!--查询出审批id-->
  <select id="queryApproveId" parameterType="String" resultType="String">
	SELECT
	id id
	FROM
	case_approve
	WHERE
	approve_type = #{approveType}
	AND approve_status = #{approveStatus}
	AND case_id=#{caseId}
  </select>
  
  
   <!--查询出当前审批人-->
  <select id="selectApprover" parameterType="String" resultType="String">
	SELECT
	approve_user_id approveUserId
	FROM
	case_approve
	WHERE
	id = #{approveId}
	AND approve_status= ${@com.zyxy.common.enums.CaseApproveStatusEnum@WAIT_AUDIT.getValue()}
  </select>
  
     <!--查询当前审批表的审批人(反馈修改意见情况下)-->
  <select id="selectApproverUserInfoId" parameterType="String" resultType="String">
	SELECT
	approve_user_id approveUserId
	FROM
	case_approve
	WHERE
	id = #{approveId}
	AND approve_status!= ${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
  </select>
  
     <!--秘书起草决定书，回避情况下的当前审批人-->
  <select id="selectApproverUserId" parameterType="String" resultType="String">
	SELECT
	approve_user_id approveUserId
	FROM
	case_approve
	WHERE
	approve_type = #{approveType}
	AND approve_status != ${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
	AND case_id=#{caseId}
	ORDER BY   create_time DESC
  </select>
  
  <!-- 修改当前审批人 -->
  <update id="updateApproverId">
   UPDATE case_approve
   SET approve_user_id= #{managerId}
   WHERE
   id= #{approveId}
  </update>
  
  <!-- 修改审批状态 -->
   <update id="updateApproveStatus" parameterType="com.zyxy.common.domain.CaseApprove">
    UPDATE 
    	case_approve
    SET
     	approve_status = #{approveStatus,jdbcType=CHAR}
    WHERE 
    	ID = #{id,jdbcType=VARCHAR}
    AND
    	approve_status=${@com.zyxy.common.enums.CaseApproveStatusEnum@WAIT_AUDIT.getValue()}
    	
  </update>
  
  
    <!--查询指定审批审批人身份-->
  <select id="queryApproveUserDuties" parameterType="String" resultType="String">
	SELECT
		mi.duties approveDuties
	FROM
		case_approve ca
	LEFT JOIN manager_info mi ON ca.approve_user_id = mi.user_id
	WHERE
		ca.id=#{approveId}
	AND
		ca.approve_status=${@com.zyxy.common.enums.CaseApproveStatusEnum@WAIT_AUDIT.getValue()}
  </select>
  
      <!--查询出指定（可以反馈修改意见时候）审批表当前审批人身份-->
  <select id="queryCaseApproveDuties" parameterType="String" resultType="String">
	SELECT
		mi.duties approveDuties
	FROM
		case_approve ca
	LEFT JOIN manager_info mi ON ca.approve_user_id = mi.user_id
	WHERE
		ca.id=#{approveId}
	AND
		ca.approve_status!=${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
  </select>
  
  
  
   <!--查询指定审批审批人身份-->
  <select id="queryApproveUserIdDuties" parameterType="String" resultType="String">
	SELECT
		mi.duties approveDuties
	FROM
		case_approve ca
	LEFT JOIN manager_info mi ON ca.approve_user_id = mi.user_id
	WHERE
		ca.approve_type = #{approveType}
	AND ca.approve_status = #{approveStatus}
	AND ca.case_id = #{caseId}
  </select>
  
   <!--查询指定审批审批人身份-->
  <select id="queryApproveUserId" parameterType="String" resultType="String">
	SELECT
		approve_user_id approveUserId
	FROM
		case_approve 
	WHERE
		approve_type = #{approveType}
	AND approve_status = #{approveStatus}
	AND case_id = #{caseId}
  </select>
  
    <!--查询指定审批的业务Id-->
  <select id="queryApproveBusiId" parameterType="String" resultType="String">
	SELECT
		busi_id busiId
	FROM
		case_approve
	WHERE
		ca.approve_type = #{approveType}
	AND ca.approve_status = #{approveStatus}
	AND ca.case_id = #{caseId}
  </select>
  
   <!-- 将查询到的仲裁秘书更新到审批表 -->
  <update id="updateApproverSecretaryId">
	UPDATE case_approve
	SET approve_user_id = (
		SELECT
			manager_id
		FROM
			case_manager
		WHERE
			manager_type = ${@com.zyxy.common.enums.ManagerInfoTypeEnum@SECRETARY_ARBITRATION.getCode()}
		AND status= ${@com.zyxy.common.enums.CaseManagerStatusEnum@OK.getCode()}
		AND case_id = #{caseId}
	)
	WHERE
		id = #{approveId}
	AND approve_status =${@com.zyxy.common.enums.CaseApproveStatusEnum@WAIT_AUDIT.getCode()}
  </update>
  
  <!-- 根据案件id查询出该案件有多少审批 -->
  <select id="selectApproveByCaseId" resultType="com.zyxy.common.vo.CaseApproveVO">
  	SELECT
		ci.id caseId,
		ca.id approveId,
		ca.request_id requestId,
		ca.approve_type approveType,
		appt.type_value approveTypeName,
		IF (
			(
				SELECT
					COUNT(1)
				FROM
					case_manager
				WHERE
					case_id = ci.id
				AND manager_id = #{userId}
				AND status = ${@com.zyxy.common.enums.CaseManagerStatusEnum@OK.getCode()}
			) &gt; 0,
			'0',
			'1'
		) primiss,
        CASE (
				SELECT
					duties
				FROM
					manager_info
				WHERE
					user_id = #{userId}
				AND
					status= ${@com.zyxy.common.enums.ManagerInfoStatusEnum@NORMAL.getCode()}
			)
		WHEN ${@com.zyxy.common.enums.ManagerInfoTypeEnum@INITIATE_THE_SECRETARY.getCode()} THEN
			(

				IF (
					ca.approve_user_id = #{userId},
					'0',
					'1'
				)
			)
		WHEN ${@com.zyxy.common.enums.ManagerInfoTypeEnum@INITIATE_THE_MINISTER.getCode()} THEN
			(

				IF (
					ca.approve_user_id = #{userId},
					'0',
					'1'
				)
			)
		WHEN ${@com.zyxy.common.enums.ManagerInfoTypeEnum@ARBITRATION_SECRETARY.getCode()} THEN
			(

				IF (
					ca.approve_user_id = #{userId},
					'0',
					'1'
				)
			)
		WHEN ${@com.zyxy.common.enums.ManagerInfoTypeEnum@ARBITRATION_MINISTER.getCode()} THEN
			(
				IF (
					ca.approve_user_id = #{userId},
					'0',
					'1'
				)
			)
		WHEN ${@com.zyxy.common.enums.ManagerInfoTypeEnum@DIRECTOR.getCode()} THEN
			0
		WHEN ${@com.zyxy.common.enums.ManagerInfoTypeEnum@DEPUTY_DIRECTOR.getCode()} THEN
			0
		END isMyOperation
	FROM
		case_approve ca,
		case_info ci,
		approve_type appt
	WHERE
		ca.case_id = ci.id
	AND 
		ca.approve_type = appt.type_name
	AND 
		ci.id = #{caseId}
	AND
		ca.approve_status=${@com.zyxy.common.enums.CaseApproveStatusEnum@WAIT_AUDIT.getValue()}
  </select>
  
  <!-- 查询审批中审批(驳回仍需审批的审批类型)的业务id -->
  <select id="queryBusiId" resultType="java.lang.String">
  	SELECT
  		busi_id
  	FROM
  		case_approve
  	WHERE
  		case_id = #{caseId}
  		AND
  		approve_type = #{approveType}
  		AND
  		approve_status != ${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
  </select>
  
    <!-- 查询审批id(主任/副主任驳回仍需处理并且仍在进行中的相关审批) -->
  <select id="queryMultipleApprovalApproveId" resultType="java.lang.String">
  	SELECT
  		ca.id
  	FROM
  		case_approve ca
  	WHERE
  		ca.approve_type = #{approveType}
  		AND
  		ca.case_id = #{caseId}
  		AND
  		approve_status != ${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
  </select>
  
  <!-- 更新审批人id为对应仲裁员id(主任/副主任驳回仍需审批并且仍在进行中的相关审批) -->
  <update id="updateApproveUserAsArbitrator" parameterType="java.lang.String">
  	UPDATE
  		case_approve
  	SET
  		approve_user_id = (
  			SELECT
  				arbitrator_id
  			FROM
  				case_aribtrator
  			WHERE
  				case_id=#{caseId}
  				AND
  				status=${@com.zyxy.common.enums.CaseArbitratorStatusEnum@OK.getCode()}
  		)
  	WHERE
  		case_id=#{caseId}
  		AND
		approve_type=#{approveType}
		AND
		approve_status != ${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
  </update>
  
  <!-- 更新当前审批人id为仲裁委人员id(主任/副主任驳回仍需审批并且仍在进行中的相关审批) -->
  <update id="updateApproveUserAsManager" parameterType="java.lang.String">
  	UPDATE
  		case_approve
	SET
		approve_user_id = (
			SELECT 
				manager_id 
			FROM 
				case_manager 
			WHERE 
				case_id=#{caseId} 
				AND 
				status=${@com.zyxy.common.enums.CaseManagerStatusEnum@OK.getCode()}
				AND
				manager_type=#{nextApproveUserDuties}
			)
	WHERE
		case_id=#{caseId}
		AND
		approve_type=#{approveType}
		AND
		approve_status != ${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
  </update>
  
  <!-- 改变审批状态(主任/副主任驳回仍需审批并且仍在进行中的相关审批) -->
  <update id="changeApproveStatus" parameterType="java.lang.String">
  	UPDATE 
  		case_approve
  	<set>
  		<if test="approveStatus != null">
  			approve_status = #{approveStatus},
  		</if>
  	</set>
  	WHERE
  		approve_type=#{approveType}
  		AND
  		case_id=#{caseId}
  		AND
  		approve_status != ${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
  </update>
  
    <!-- 查询出有秘书起草决定书时的审批记录-->
  <select id="queryApproveRecordDecision" resultType="com.zyxy.common.vo.ApproveRecordVO">
   SELECT
   	ca.id approveId,
    cas.approve_suggest approveSuggest,
    mi.duties duties,
    ui.name approveName,
    cas.opinion_status opinionStatus,
    cas.create_time  createTime
    FROM
    case_approve ca,
    case_approve_suggest cas,
    manager_info mi,
    user_info ui
    WHERE
    ca.id = cas.approve_id
    AND cas.creater_id = mi.user_id
    AND mi.user_id = ui.id
    AND ca.id = #{approveId}
    AND ca.approve_type = #{approveType}
    AND ca.approve_status != ${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
    AND mi.status =  ${@com.zyxy.common.enums.ManagerInfoStatusEnum@NORMAL.getCode()}
    ORDER BY
	cas.create_time
	DESC
  </select>
  
   <!-- 秘书参与起草决定书情况下的，回避时查询审批人身份审批Id-->
  <select id="queryApproveDuties" resultType="com.zyxy.common.vo.ApproveRecordVO" >
	SELECT
		mi.duties duties,
		ca.case_id  caseId,
		ca.busi_id busiId,
		ca.tribunal_mark tribunalMark
	FROM
		case_approve ca,
		manager_info mi
	WHERE
		ca.id = #{approveId}
	AND ca.approve_user_id=mi.user_id
	AND ca.approve_status != ${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
	ORDER BY ca.create_time
  </select>
  
   <!-- 秘书起草决定书时，修改审批状态 -->
   <update id="updateApproveSecretariesStatus" parameterType="com.zyxy.common.domain.CaseApprove">
    UPDATE 
    	case_approve
    SET
     	approve_status = #{approveStatus,jdbcType=CHAR}
    WHERE 
    	ID = #{id,jdbcType=VARCHAR}
    AND
    	approve_status!=${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
  </update>
  
   <!-- 秘书起草决定书时，修改审批状态 -->
   <update id="updateCaseIdStatus" parameterType="String">
    UPDATE 
    	case_approve
    SET
     	approve_status = #{status}
    WHERE 
    	case_id = #{caseId}
    AND
    	approve_status!=${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
   	AND
   		approve_type=#{approveType}
  </update>
  
   <!--  查询出指定审批类型的基本信息 -->
  <select id="queryBusiIdRequestId" parameterType="String" resultType="com.zyxy.common.domain.CaseApprove">
		SELECT
			busi_id busiId,
			request_id requestId
		FROM
			case_approve
		WHERE
		 id = ${approveId}
		AND approve_status != ${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
  </select>
  
  <!-- 查询审批中的审批记录(驳回仍需审批的相关审批) -->
  <select id="selectApprovingRecord" resultMap="BaseResultMap">
  	SELECT
  	<include refid="Base_Column_List" />
    FROM 
    	case_approve
    WHERE 
    	id = #{approveId}
    	AND
    	approve_type = #{approveType}
    	AND
    	approve_status &lt;&gt; ${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
  </select>

    <!-- 通过审批id更新审批状态 -->
  <update id="updateCaseApproveById" parameterType="java.lang.String">
  	UPDATE
  		case_approve
  	SET
  		status = #{status}
  	WHERE
  		id = #{approveId}
  </update>
  
  <!--根据审批id查询指定审批审批人身份-->
  <select id="selectApproveDuties" parameterType="String" resultType="String">
	SELECT
		mi.duties approveDuties
	FROM
		case_approve ca,
		manager_info mi
	WHERE
		ca.approve_user_id = mi.user_id
	AND	ca.approve_type = #{approveType}
	AND ca.approve_status = #{approveStatus}
	AND ca.id = #{approveId}
  </select>
    
  <!-- 查询审批id -->  
  <select id="queryCaseApproveByApproveId" resultType="java.lang.String">
  	SELECT
  		ca.id
  	FROM
  		case_approve ca
  	WHERE
  		ca.case_id = #{caseId}
  	AND
  		ca.approve_type = #{approveType}
  </select>
  
  <select id="queryOppositeApproveId" resultType="java.lang.String">
  	SELECT
  		id
  	FROM
  		case_approve
  	WHERE
  		case_id = #{caseId}
  		AND
  		approve_status &lt;&gt; ${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
  		AND
  		<if test="approveType != null and approveType == 'THIS_REQUEST_WITHDRAW_CASE_APPROVE'">
  			approve_type = ${@com.zyxy.common.enums.ApproveTypeEnum@COUNTER_CLAIM_CASE_APPROVE.getTypeName()}
  		</if>
  		<if test="approveType != null and approveType == 'COUNTER_CLAIM_CASE_APPROVE'">
  			approve_type = ${@com.zyxy.common.enums.ApproveTypeEnum@THIS_REQUEST_WITHDRAW_CASE_APPROVE.getTypeName()}
  		</if>
  </select>
</mapper>
