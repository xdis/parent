<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyxy.common.mapper.CaseDocMapper">
  <resultMap id="BaseResultMap" type="com.zyxy.common.domain.CaseDoc">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="DOC_NAME" jdbcType="VARCHAR" property="docName" />
    <result column="DOC_TYPE" jdbcType="VARCHAR" property="docType" />
    <result column="SIGN_STATUS" jdbcType="CHAR" property="signStatus" />
    <result column="FILE_ID" jdbcType="VARCHAR" property="fileId" />
    <result column="CASE_ID" jdbcType="VARCHAR" property="caseId" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
    <result column="LOGISTICS_STATUS" jdbcType="CHAR" property="logisticsStatus" />
    <result column="DOC_YEAR_NUMBER" jdbcType="VARCHAR" property="docYearNumber" />
    <result column="DOC_SERIAL_NUMBER" jdbcType="VARCHAR" property="docSerialNumber" />
    <result column="SIGN_SIGNET_LOG_ID" jdbcType="VARCHAR" property="signSignetLogId" />
    <result column="CREATER_ID" jdbcType="VARCHAR" property="createrId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_ID" jdbcType="VARCHAR" property="updateId" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="REQUEST_ID" jdbcType="VARCHAR" property="requestId" />
    <result column="BUSI_ID" jdbcType="VARCHAR" property="busiId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, DOC_NAME, DOC_TYPE, SIGN_STATUS, FILE_ID, CASE_ID, STATUS, LOGISTICS_STATUS, 
    DOC_YEAR_NUMBER, DOC_SERIAL_NUMBER, SIGN_SIGNET_LOG_ID, CREATER_ID, CREATE_TIME, 
    UPDATE_ID, UPDATE_TIME, REQUEST_ID, BUSI_ID
  </sql>
  <select id="selectByExample" parameterType="com.zyxy.common.domain.CaseDocExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from case_doc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from case_doc
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from case_doc
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zyxy.common.domain.CaseDocExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from case_doc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zyxy.common.domain.CaseDoc">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into case_doc (ID, DOC_NAME, DOC_TYPE, 
      SIGN_STATUS, FILE_ID, CASE_ID, 
      STATUS, LOGISTICS_STATUS, DOC_YEAR_NUMBER, 
      DOC_SERIAL_NUMBER, SIGN_SIGNET_LOG_ID, CREATER_ID, 
      CREATE_TIME, UPDATE_ID, UPDATE_TIME, 
      REQUEST_ID, BUSI_ID)
    values (#{id,jdbcType=VARCHAR}, #{docName,jdbcType=VARCHAR}, #{docType,jdbcType=VARCHAR}, 
      #{signStatus,jdbcType=CHAR}, #{fileId,jdbcType=VARCHAR}, #{caseId,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR}, #{logisticsStatus,jdbcType=CHAR}, #{docYearNumber,jdbcType=VARCHAR}, 
      #{docSerialNumber,jdbcType=VARCHAR}, #{signSignetLogId,jdbcType=VARCHAR}, #{createrId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{requestId,jdbcType=VARCHAR}, #{busiId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zyxy.common.domain.CaseDoc">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into case_doc
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="docName != null">
        DOC_NAME,
      </if>
      <if test="docType != null">
        DOC_TYPE,
      </if>
      <if test="signStatus != null">
        SIGN_STATUS,
      </if>
      <if test="fileId != null">
        FILE_ID,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="logisticsStatus != null">
        LOGISTICS_STATUS,
      </if>
      <if test="docYearNumber != null">
        DOC_YEAR_NUMBER,
      </if>
      <if test="docSerialNumber != null">
        DOC_SERIAL_NUMBER,
      </if>
      <if test="signSignetLogId != null">
        SIGN_SIGNET_LOG_ID,
      </if>
      <if test="createrId != null">
        CREATER_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateId != null">
        UPDATE_ID,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="requestId != null">
        REQUEST_ID,
      </if>
      <if test="busiId != null">
        BUSI_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="docName != null">
        #{docName,jdbcType=VARCHAR},
      </if>
      <if test="docType != null">
        #{docType,jdbcType=VARCHAR},
      </if>
      <if test="signStatus != null">
        #{signStatus,jdbcType=CHAR},
      </if>
      <if test="fileId != null">
        #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="logisticsStatus != null">
        #{logisticsStatus,jdbcType=CHAR},
      </if>
      <if test="docYearNumber != null">
        #{docYearNumber,jdbcType=VARCHAR},
      </if>
      <if test="docSerialNumber != null">
        #{docSerialNumber,jdbcType=VARCHAR},
      </if>
      <if test="signSignetLogId != null">
        #{signSignetLogId,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestId != null">
        #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="busiId != null">
        #{busiId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyxy.common.domain.CaseDocExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from case_doc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_doc
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.docName != null">
        DOC_NAME = #{record.docName,jdbcType=VARCHAR},
      </if>
      <if test="record.docType != null">
        DOC_TYPE = #{record.docType,jdbcType=VARCHAR},
      </if>
      <if test="record.signStatus != null">
        SIGN_STATUS = #{record.signStatus,jdbcType=CHAR},
      </if>
      <if test="record.fileId != null">
        FILE_ID = #{record.fileId,jdbcType=VARCHAR},
      </if>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.logisticsStatus != null">
        LOGISTICS_STATUS = #{record.logisticsStatus,jdbcType=CHAR},
      </if>
      <if test="record.docYearNumber != null">
        DOC_YEAR_NUMBER = #{record.docYearNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.docSerialNumber != null">
        DOC_SERIAL_NUMBER = #{record.docSerialNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.signSignetLogId != null">
        SIGN_SIGNET_LOG_ID = #{record.signSignetLogId,jdbcType=VARCHAR},
      </if>
      <if test="record.createrId != null">
        CREATER_ID = #{record.createrId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null">
        UPDATE_ID = #{record.updateId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.requestId != null">
        REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      </if>
      <if test="record.busiId != null">
        BUSI_ID = #{record.busiId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_doc
    set ID = #{record.id,jdbcType=VARCHAR},
      DOC_NAME = #{record.docName,jdbcType=VARCHAR},
      DOC_TYPE = #{record.docType,jdbcType=VARCHAR},
      SIGN_STATUS = #{record.signStatus,jdbcType=CHAR},
      FILE_ID = #{record.fileId,jdbcType=VARCHAR},
      CASE_ID = #{record.caseId,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=CHAR},
      LOGISTICS_STATUS = #{record.logisticsStatus,jdbcType=CHAR},
      DOC_YEAR_NUMBER = #{record.docYearNumber,jdbcType=VARCHAR},
      DOC_SERIAL_NUMBER = #{record.docSerialNumber,jdbcType=VARCHAR},
      SIGN_SIGNET_LOG_ID = #{record.signSignetLogId,jdbcType=VARCHAR},
      CREATER_ID = #{record.createrId,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_ID = #{record.updateId,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      REQUEST_ID = #{record.requestId,jdbcType=VARCHAR},
      BUSI_ID = #{record.busiId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyxy.common.domain.CaseDoc">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_doc
    <set>
      <if test="docName != null">
        DOC_NAME = #{docName,jdbcType=VARCHAR},
      </if>
      <if test="docType != null">
        DOC_TYPE = #{docType,jdbcType=VARCHAR},
      </if>
      <if test="signStatus != null">
        SIGN_STATUS = #{signStatus,jdbcType=CHAR},
      </if>
      <if test="fileId != null">
        FILE_ID = #{fileId,jdbcType=VARCHAR},
      </if>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="logisticsStatus != null">
        LOGISTICS_STATUS = #{logisticsStatus,jdbcType=CHAR},
      </if>
      <if test="docYearNumber != null">
        DOC_YEAR_NUMBER = #{docYearNumber,jdbcType=VARCHAR},
      </if>
      <if test="docSerialNumber != null">
        DOC_SERIAL_NUMBER = #{docSerialNumber,jdbcType=VARCHAR},
      </if>
      <if test="signSignetLogId != null">
        SIGN_SIGNET_LOG_ID = #{signSignetLogId,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        CREATER_ID = #{createrId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        UPDATE_ID = #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestId != null">
        REQUEST_ID = #{requestId,jdbcType=VARCHAR},
      </if>
      <if test="busiId != null">
        BUSI_ID = #{busiId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyxy.common.domain.CaseDoc">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_doc
    set DOC_NAME = #{docName,jdbcType=VARCHAR},
      DOC_TYPE = #{docType,jdbcType=VARCHAR},
      SIGN_STATUS = #{signStatus,jdbcType=CHAR},
      FILE_ID = #{fileId,jdbcType=VARCHAR},
      CASE_ID = #{caseId,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR},
      LOGISTICS_STATUS = #{logisticsStatus,jdbcType=CHAR},
      DOC_YEAR_NUMBER = #{docYearNumber,jdbcType=VARCHAR},
      DOC_SERIAL_NUMBER = #{docSerialNumber,jdbcType=VARCHAR},
      SIGN_SIGNET_LOG_ID = #{signSignetLogId,jdbcType=VARCHAR},
      CREATER_ID = #{createrId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_ID = #{updateId,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      REQUEST_ID = #{requestId,jdbcType=VARCHAR},
      BUSI_ID = #{busiId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>


  <!--手动添加的方法-->
  <select id="queryCaseDoc" parameterType="com.zyxy.common.dto.CaseDocDTO" resultType="com.zyxy.common.vo.CaseDocVO">
      SELECT
        cd.doc_name docName,
        cd.doc_year_number docYearNumber,
        cd.doc_serial_number docSerialNumber,
        cd.doc_type docType,
        cdc.body_text bodyText,
        cdc.opinion opinion,
        cdc.final_decision finalDecision,
        cp.prop_name propName,
        cp.sex propSex,
        cp.ethnic propEthnic,
        cp.address propAddress,
        cp.card_id propCardId,
        cdf.prop_name depeName,
        cdf.sex depeSex,
        cdf.ethnic depeEthnic,
        cdf.address depeAddress,
        cdf.card_id depeCardId,
        ui.name arbiName,
        cdc.issus_time issusTime,
        ui1.name managerName
    FROM
        case_doc cd,
        case_doc_content cdc,
        case_info ci,
        case_proposer cp,
        case_defendant cdf,
        case_arbitrator car,
        arbitrator_info ai,
        user_info ui,
        user_info ui1,
        manager_info mi
    WHERE
        cd.case_id = cdc.case_id
    AND cd.id = cdc.doc_id
    AND ci.id = cd.case_id
    AND ci.id = cp.case_id
    AND ci.id = cdf.case_id
    AND ci.id = car.case_id
    AND car.arbitrator_id = ai.id
    AND ai.user_id = ui.id
    AND cdc.secretary_id = mi.id
    AND mi.user_id=ui1.id
    AND mi.duties = #{duties} /**仲裁委类型，2仲裁秘书*/
    AND ui.id = #{userId}/**仲裁员用户id**/
    AND cd.status=#{docStatus} /**文书状态**/
    AND cd.doc_type=#{docType} /**文书类型 1-裁决书**/
    AND car.status=#{arbitratorStatus} /**该案件仲裁员状态 2-有效**/
    AND ci.id=#{caseId}/**案件id**/
  </select>
  
  
   <!-- 返回案件申请书对象 -->
   <select id="queryDocuments" resultType="com.zyxy.common.vo.DocumentContentVO">
	SELECT
	cdc.body_text bodyText,
	cdc.opinion opinion,
	cdc.final_decision finalDecision,
	cdc.issue_type issueType,
	cdc.create_time createTime,
	ui.name secretaries,
	uif.name arbitrator,
	cd.doc_type docType
	FROM
	case_doc cd,case_doc_content cdc,user_info ui,user_info uif
	WHERE
	cd.case_id = cdc.case_id
	AND cd.id = cdc.doc_id
	AND cdc.secretary_id=ui.id
	AND cdc.arbitrator_id=uif.id
	AND cd.doc_type=#{docType}
	AND cd.status=#{status}
	AND cdc.save_a_draft=#{saveDraft}
	AND cd.case_id=#{caseId}
  </select>
  

  <!-- 根据案件id和文书类型查询出文书内容 -->
  <select id="selectCaseDoc" parameterType="com.zyxy.common.dto.CaseDocDTO" resultType="com.zyxy.common.vo.CaseDocumentsVO">
  	SELECT
		cd.DOC_NAME docName,
		cd.DOC_YEAR_NUMBER docYearNumber,
		cd.DOC_SERIAL_NUMBER docSerialNumber,
		cd.DOC_TYPE docType,
		cdc.BODY_TEXT bodyText,
		cdc.OPINION opinion,
		uin. NAME secretaryName,
		ui. NAME arbitratorName,
		cri.ARB_CLAIM arbClaim,
		cri.FACT fact,
		cri.REASON reason,
		cp.PROP_NAME propName,
		cp.SEX propSex,
		cp.ETHNIC propEthnic,
		cp.ADDRESS propAddress,
		cp.CARD_ID propCardId,
		cde.PROP_NAME depeName,
		cde.SEX depeSex,
		cde.ETHNIC depeEthnic,
		cde.ADDRESS depeAddress,
		cde.CARD_ID depeCardId,
		cp.CERT_NAME propCertName,
		cp.CERT_DUTIES propCertDuties,
		cp.PROP_TYPE propType,
		cde.CERT_NAME depeCertName,
		cde.CERT_DUTIES depeCertDuties,
		cde.PROP_TYPE deptType
	FROM
		case_doc cd,
		case_doc_content cdc,
		case_request_info cri,
		user_info ui,
		user_info uin,
		case_proposer cp,
		case_defendant cde
	WHERE
		cd.ID = cdc.DOC_ID
	AND cdc.SECRETARY_ID = uin.ID
	AND cdc.ARBITRATOR_ID = ui.ID
	AND cd.CASE_ID = cp.CASE_ID
	AND cd.CASE_ID = cde.CASE_ID
	AND cd.CASE_ID = #{caseId}
	AND cd.DOC_TYPE = #{docType}
	AND cdc.SAVE_A_DRAFT = '1'
	AND cd.STATUS = '0'
  </select>
  
  
    <!-- 根据业务id和文书是否为草稿出文书内容、请求信息 -->
  <select id="queryCaseDocbusiId" parameterType="String" resultType="com.zyxy.common.vo.CaseDocVO">
	SELECT
		cd.doc_name docName,
		cd.doc_year_number docYearNumber,
		cd.doc_serial_number docSerialNumber,
		cd.doc_type docType,
		cdc.body_text bodyText,
		cdc.opinion opinion,
		cdc.final_decision finalDecision,
		cp.prop_name propName,
		cp.sex propSex,
		cp.ethnic propEthnic,
		cp.address propAddress,
		cp.card_id propCardId,
		cdf.prop_name depeName,
		cdf.sex depeSex,
		cdf.ethnic depeEthnic,
		cdf.address depeAddress,
		cdf.card_id depeCardId,
		ui. NAME arbiName,
		cdc.issus_time issusTime,
		uif. NAME managerName,
		lis.cert_name  propCertName,
		lis.cert_duties propCertDuties,
		lis.type propType,
		lib.cert_name  depeCertName,
		lib.cert_duties depeCertDuties,
		lib.type deptType
	FROM
		case_doc cd,
		case_doc_content cdc,
		case_info ci,
		case_proposer cp,
		case_defendant cdf,
		user_info ui,
		user_info uif,
		litigant_info lis,
		litigant_info lib
	WHERE
		cd.id = cdc.doc_id
	AND ci.id = cd.case_id
	AND ci.id = cp.case_id
	AND ci.id = cdf.case_id
	AND cdc.secretary_id = uif.id
	AND cdc.arbitrator_id = ui.id
	AND lis.user_id=cp.creater_id
	AND lib.user_id=cdf.creater_id
	AND cd.busi_id = #{busiId}
	AND cdc.save_a_draft = #{saveDraft}
  </select>
  
   <!-- 根据业务Id查询出文书内容 -->
 <select id="queryCaseDocByBusiId" resultType="com.zyxy.common.vo.DocumentContentVO">
  	SELECT
	  	cd.id docId,
	  	cd.doc_year_number docYearNumber,
	  	cd.doc_serial_number docSerialNumber,
		cdc.id docContentId,
		cdc.body_text bodyText,
		cdc.opinion opinion,
		cdc.final_decision finalDecision,
		cdc.issue_type issueType,
		cdc.create_time createTime,
		cdc.issus_time issusTime,
		cdc.save_a_draft saveAdraft
	FROM
		case_doc cd,
		case_doc_content cdc
	WHERE
		cd.id = cdc.doc_id
	AND
		cd.status=${@com.zyxy.common.enums.CaseDocStatusEnum@NORMAL.getCode()}
	AND
		cd.doc_type=#{docType}
	AND
		cd.busi_id = #{busiId}
		
  </select>
  
  <!-- 查询文书ID(主任/副主任驳回仍需审批并且仍在进行中的相关审批) -->
  <select id="queryCaseDocId" resultType="java.lang.String">
  	SELECT
  		cd.id
  	FROM
  		case_doc cd
  		LEFT JOIN
  			case_approve ca
  		ON
  			ca.busi_id=ca.busi_id
  	WHERE
  		cd.doc_type=#{docType}
  		AND
  		cd.case_id=#{caseId}
  		AND
  		cd.status = ${@com.zyxy.common.enums.CaseDocStatusEnum@NORMAL.getCode())}
  		AND
  		ca.approve_status != ${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
  </select>


  <!--根据用户id查询出组庭时间-->
  <select id="selectTimeByUserId" resultType="java.util.Date">
    SELECT
        cd.create_time
    FROM
        case_doc cd,
        doc_send_record dsr
    WHERE
        cd.id = dsr.doc_id
    AND cd.doc_type = ${@com.zyxy.common.enums.CaseDocTypeEnum@TRIBUNAL_NOTICE.getCode())}
    AND cd.case_id = dsr.case_id
    AND dsr.receiver_id = #{avoidUserId}
  </select>


  <select id="selectCaseJurisDisByCaseIdAndDocType" resultType="com.zyxy.common.vo.DocumentContentVO">
    SELECT
        cd.id docId,
        cdc.id docContentId,
        cdc.opinion opinion,
        cd.create_time createTime,
        cdc.issue_type issueType,
        cdc.issus_time issusTime
    FROM
        case_doc cd,
        case_doc_content cdc
    WHERE
        cd.case_id = cdc.case_id
    AND
        cd.id = cdc.doc_id
    AND
        cd.case_id = #{caseId}
    AND
        cd.doc_type = #{docType}
    AND
        cd.status = ${@com.zyxy.common.enums.CaseDocStatusEnum@NORMAL.getCode())}
  </select>
  <select id="selectDocumentByBussId" resultType="com.zyxy.common.vo.DocumentContentVO">

      SELECT
        cd.id docId,
        cdc.id docContentId,
        cdc.opinion opinion,
        cd.create_time createTime,
        cdc.issue_type issueType,
        cdc.issus_time issusTime
    FROM
        case_doc cd,
        case_doc_content cdc
    WHERE
        cd.case_id = cdc.case_id
    AND
        cd.id = cdc.doc_id
    AND
        cd.BUSI_ID = #{busiId}

    AND
        cd.status = ${@com.zyxy.common.enums.CaseDocStatusEnum@NORMAL.getCode())}

    </select>


  <!-- 根据案件id和文书类型获取合同协议相关数据 -->
  <select id="queryCaseInfo" parameterType="com.zyxy.common.dto.CaseDocDTO" resultType="com.zyxy.common.domain.CaseInfo">
    SELECT
      ci.CASE_TYPE_ID caseTypeId,
      ci.ACCEPT_TIME acceptTime,
      ci.CASE_ACCEPTANCE_TIME caseAcceptanceTime,
      ci.SIGN_ABRI_PROTOCOL_MODE signAbriProtocolMode,
      ci.SIGN_TIME signTime,
      ci.protocol_name protocolName
    FROM
      case_doc cd,
      case_doc_content cdc,
      case_info ci
    WHERE
      cd.ID = cdc.DOC_ID
    AND cd.case_id = ci.id
    AND cd.CASE_ID = #{caseId}
    AND cd.DOC_TYPE = #{docType}
    AND cd.STATUS = ${@com.zyxy.common.enums.CaseDocStatusEnum@NORMAL.getCode())}
  </select>
  
  <!-- 通过审批id查询文书内容 -->
  <select id="queryCaseDocByApproveId" resultMap="BaseResultMap">
  	SELECT 
  		cd.ID, 
  		cd.DOC_NAME, 
  		cd.DOC_TYPE, 
  		cd.SIGN_STATUS, 
  		cd.FILE_ID, 
  		cd.CASE_ID, 
  		cd.STATUS, 
  		cd.LOGISTICS_STATUS, 
    	cd.DOC_YEAR_NUMBER, 
    	cd.DOC_SERIAL_NUMBER, 
    	cd.SIGN_SIGNET_LOG_ID, 
    	cd.CREATER_ID, 
    	cd.CREATE_TIME, 
    	cd.UPDATE_ID, 
    	cd.UPDATE_TIME, 
    	cd.REQUEST_ID, 
    	cd.BUSI_ID
  	FROM
  		case_doc cd
  		LEFT JOIN
  			case_approve ca
  			ON
  			ca.busi_id = cd.busi_id
  	WHERE
  		ca.id = #{approveId}
  		AND
  		cd.status = ${@com.zyxy.common.enums.CaseDocStatusEnum@NORMAL.getCode()}
  </select>
  
  <select id="queryValidDocByRequestIdAndDocType" resultMap="BaseResultMap">
  	SELECT
  		<include refid="Base_Column_List" />
  	FROM
  		case_doc
  	WHERE
  		doc_type = #{docType}
  		AND
  		status = ${@com.zyxy.common.enums.CaseDocStatusEnum@NORMAL.getCode()}
  		AND
  		request_id = #{requestId}
  </select>
</mapper>