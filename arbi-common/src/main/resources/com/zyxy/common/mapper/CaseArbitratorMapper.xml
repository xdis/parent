<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyxy.common.mapper.CaseArbitratorMapper">
    <resultMap id="BaseResultMap" type="com.zyxy.common.domain.CaseArbitrator">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="ID" jdbcType="INTEGER" property="id"/>
        <result column="CASE_ID" jdbcType="VARCHAR" property="caseId"/>
        <result column="ARBITRATOR_ID" jdbcType="VARCHAR" property="arbitratorId"/>
        <result column="STATUS" jdbcType="CHAR" property="status"/>
        <result column="TYPE" jdbcType="CHAR" property="type"/>
        <result column="ACCEPT_TIME" jdbcType="TIMESTAMP" property="acceptTime"/>
        <result column="REMARK" jdbcType="VARCHAR" property="remark"/>
        <result column="CREATE_ID" jdbcType="VARCHAR" property="createId"/>
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="UPDATE_ID" jdbcType="VARCHAR" property="updateId"/>
        <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="SEND_GROUP_NOTICE" jdbcType="CHAR" property="sendGroupNotice"/>
        <result column="SEND_GROUP_NOTICE_TIME" jdbcType="TIMESTAMP" property="sendGroupNoticeTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        ID, CASE_ID, ARBITRATOR_ID, STATUS, TYPE, ACCEPT_TIME, REMARK, CREATE_ID, CREATE_TIME,
        UPDATE_ID, UPDATE_TIME, SEND_GROUP_NOTICE, SEND_GROUP_NOTICE_TIME
    </sql>
    <select id="selectByExample" parameterType="com.zyxy.common.domain.CaseArbitratorExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from case_arbitrator
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from case_arbitrator
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from case_arbitrator
        where ID = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.zyxy.common.domain.CaseArbitratorExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from case_arbitrator
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.zyxy.common.domain.CaseArbitrator">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into case_arbitrator (ID, CASE_ID, ARBITRATOR_ID,
        STATUS, TYPE, ACCEPT_TIME,
        REMARK, CREATE_ID, CREATE_TIME,
        UPDATE_ID, UPDATE_TIME, SEND_GROUP_NOTICE,
        SEND_GROUP_NOTICE_TIME)
        values (#{id,jdbcType=INTEGER}, #{caseId,jdbcType=VARCHAR}, #{arbitratorId,jdbcType=VARCHAR},
        #{status,jdbcType=CHAR}, #{type,jdbcType=CHAR}, #{acceptTime,jdbcType=TIMESTAMP},
        #{remark,jdbcType=VARCHAR}, #{createId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{sendGroupNotice,jdbcType=CHAR},
        #{sendGroupNoticeTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.zyxy.common.domain.CaseArbitrator">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into case_arbitrator
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="caseId != null">
                CASE_ID,
            </if>
            <if test="arbitratorId != null">
                ARBITRATOR_ID,
            </if>
            <if test="status != null">
                STATUS,
            </if>
            <if test="type != null">
                TYPE,
            </if>
            <if test="acceptTime != null">
                ACCEPT_TIME,
            </if>
            <if test="remark != null">
                REMARK,
            </if>
            <if test="createId != null">
                CREATE_ID,
            </if>
            <if test="createTime != null">
                CREATE_TIME,
            </if>
            <if test="updateId != null">
                UPDATE_ID,
            </if>
            <if test="updateTime != null">
                UPDATE_TIME,
            </if>
            <if test="sendGroupNotice != null">
                SEND_GROUP_NOTICE,
            </if>
            <if test="sendGroupNoticeTime != null">
                SEND_GROUP_NOTICE_TIME,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="caseId != null">
                #{caseId,jdbcType=VARCHAR},
            </if>
            <if test="arbitratorId != null">
                #{arbitratorId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=CHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=CHAR},
            </if>
            <if test="acceptTime != null">
                #{acceptTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateId != null">
                #{updateId,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sendGroupNotice != null">
                #{sendGroupNotice,jdbcType=CHAR},
            </if>
            <if test="sendGroupNoticeTime != null">
                #{sendGroupNoticeTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zyxy.common.domain.CaseArbitratorExample"
            resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from case_arbitrator
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update case_arbitrator
        <set>
            <if test="record.id != null">
                ID = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.caseId != null">
                CASE_ID = #{record.caseId,jdbcType=VARCHAR},
            </if>
            <if test="record.arbitratorId != null">
                ARBITRATOR_ID = #{record.arbitratorId,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                STATUS = #{record.status,jdbcType=CHAR},
            </if>
            <if test="record.type != null">
                TYPE = #{record.type,jdbcType=CHAR},
            </if>
            <if test="record.acceptTime != null">
                ACCEPT_TIME = #{record.acceptTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.remark != null">
                REMARK = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.createId != null">
                CREATE_ID = #{record.createId,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateId != null">
                UPDATE_ID = #{record.updateId,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.sendGroupNotice != null">
                SEND_GROUP_NOTICE = #{record.sendGroupNotice,jdbcType=CHAR},
            </if>
            <if test="record.sendGroupNoticeTime != null">
                SEND_GROUP_NOTICE_TIME = #{record.sendGroupNoticeTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update case_arbitrator
        set ID = #{record.id,jdbcType=INTEGER},
        CASE_ID = #{record.caseId,jdbcType=VARCHAR},
        ARBITRATOR_ID = #{record.arbitratorId,jdbcType=VARCHAR},
        STATUS = #{record.status,jdbcType=CHAR},
        TYPE = #{record.type,jdbcType=CHAR},
        ACCEPT_TIME = #{record.acceptTime,jdbcType=TIMESTAMP},
        REMARK = #{record.remark,jdbcType=VARCHAR},
        CREATE_ID = #{record.createId,jdbcType=VARCHAR},
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
        UPDATE_ID = #{record.updateId,jdbcType=VARCHAR},
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
        SEND_GROUP_NOTICE = #{record.sendGroupNotice,jdbcType=CHAR},
        SEND_GROUP_NOTICE_TIME = #{record.sendGroupNoticeTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zyxy.common.domain.CaseArbitrator">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update case_arbitrator
        <set>
            <if test="caseId != null">
                CASE_ID = #{caseId,jdbcType=VARCHAR},
            </if>
            <if test="arbitratorId != null">
                ARBITRATOR_ID = #{arbitratorId,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                STATUS = #{status,jdbcType=CHAR},
            </if>
            <if test="type != null">
                TYPE = #{type,jdbcType=CHAR},
            </if>
            <if test="acceptTime != null">
                ACCEPT_TIME = #{acceptTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remark != null">
                REMARK = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createId != null">
                CREATE_ID = #{createId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateId != null">
                UPDATE_ID = #{updateId,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="sendGroupNotice != null">
                SEND_GROUP_NOTICE = #{sendGroupNotice,jdbcType=CHAR},
            </if>
            <if test="sendGroupNoticeTime != null">
                SEND_GROUP_NOTICE_TIME = #{sendGroupNoticeTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zyxy.common.domain.CaseArbitrator">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update case_arbitrator
        set CASE_ID = #{caseId,jdbcType=VARCHAR},
        ARBITRATOR_ID = #{arbitratorId,jdbcType=VARCHAR},
        STATUS = #{status,jdbcType=CHAR},
        TYPE = #{type,jdbcType=CHAR},
        ACCEPT_TIME = #{acceptTime,jdbcType=TIMESTAMP},
        REMARK = #{remark,jdbcType=VARCHAR},
        CREATE_ID = #{createId,jdbcType=VARCHAR},
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
        UPDATE_ID = #{updateId,jdbcType=VARCHAR},
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
        SEND_GROUP_NOTICE = #{sendGroupNotice,jdbcType=CHAR},
        SEND_GROUP_NOTICE_TIME = #{sendGroupNoticeTime,jdbcType=TIMESTAMP}
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <sql id="queryArbiId">
        SELECT h.USER_ID
        FROM
        (
        <!--查询出所有仲裁员及其当前持有案件数-->
        SELECT
        ai.USER_ID,
        CASE WHEN n.NUM IS NULL
        THEN 0
        ELSE n.NUM END NUM
        FROM
        arbitrator_info ai
        LEFT JOIN (
        <!--查询当前进行中案件仲裁员持有案件数-->
        SELECT
        a.ARBITRATOR_ID,
        count(1) NUM
        FROM
        case_arbitrator a,
        case_info c
        WHERE
        c.ID = a.CASE_ID
        AND c.COMPLETE_TIME IS NULL
        AND
        (
        a.STATUS =
        ${@com.zyxy.common.enums.CaseArbitratorStatusEnum@OK.getCode()}
        OR a.STATUS =
        ${@com.zyxy.common.enums.CaseArbitratorStatusEnum@WAIT_ACCEPT.getCode()}
        )
        GROUP BY a.ARBITRATOR_ID
        ) n
        ON ai.USER_ID = n.ARBITRATOR_ID
        ) h
        WHERE h.NUM = (
        <!--查询出最低结案数-->
        SELECT
        CASE
        WHEN
        n.NUM IS NULL
        THEN 0
        ELSE n.NUM
        END NUM
        FROM
        arbitrator_info ai
        LEFT JOIN (
        SELECT
        a.ARBITRATOR_ID,
        count(1) NUM
        FROM
        case_arbitrator a,
        case_info c
        WHERE
        c.ID = a.CASE_ID
        AND c.COMPLETE_TIME IS NULL
        AND
        (
        a.STATUS = ${@com.zyxy.common.enums.CaseArbitratorStatusEnum@OK.getCode()}
        OR a.STATUS =
        ${@com.zyxy.common.enums.CaseArbitratorStatusEnum@WAIT_ACCEPT.getCode()}
        )
        GROUP BY a.ARBITRATOR_ID
        ) n
        ON ai.USER_ID = n.ARBITRATOR_ID
        WHERE
        <!--不能是已经分配过的-->
        ai.USER_ID NOT IN (
        SELECT ARBITRATOR_ID
        FROM
        case_arbitrator_oper
        WHERE
        CASE_ID = #{caseId}
        )
        ORDER BY CASE WHEN n.NUM IS NULL THEN 0 ELSE n.NUM END
        LIMIT 1
        )
        <!--随机分配-->
        ORDER BY rand()
        LIMIT 1
    </sql>
    <select id="queryAllotArbitrator" parameterType="String" resultType="String">
        <include refid="queryArbiId"/>
    </select>
    <select id="queryCaseNowArbitratorByCaseId" resultMap="BaseResultMap">
    SELECT
        <include refid="Base_Column_List"/>
    FROM
    case_arbitrator
    WHERE
    case_id = #{caseId}
    AND status IN (
    ${@com.zyxy.common.enums.CaseArbitratorStatusEnum@WAIT_ACCEPT.getCode()},
    ${@com.zyxy.common.enums.CaseArbitratorStatusEnum@OK.getCode()}
    )
  </select>
    <insert id="allotArbitrator" parameterType="String">
        INSERT INTO case_arbitrator (CASE_ID, ARBITRATOR_ID, STATUS, CREATE_ID, CREATE_TIME, TYPE)
        VALUES (#{caseId}, (SELECT USER_ID
        FROM (<include refid="queryArbiId"/>) a),
        ${@com.zyxy.common.enums.CaseArbitratorStatusEnum@WAIT_ACCEPT.getCode()},
        ${@com.zyxy.common.enums.SysUserEnum@SYSTEM.getValue()}, now(),
        ${@com.zyxy.common.enums.CaseArbitratorTypeEnum@SYSTEM_ASSIGN.getCode()})
    </insert>

    <insert id="insertCaseArbiOper" parameterType="com.zyxy.common.domain.CaseArbitratorOper">
        INSERT INTO case_arbitrator_oper (case_id,arbitrator_id,type,creater_id,create_time)
        VALUES(#{caseId},(SELECT USER_ID
        FROM (<include refid="queryArbiId"/>) a),#{type},#{createrId},#{createTime})
    </insert>

    <!--根据案件id查询出仲裁员名称和组庭通知书创建时间-->
    <select id="selectArbitratorNameAndCreateTime" resultType="com.zyxy.common.vo.CaseArbitratorTribunalVO">
        SELECT
            ui.name arbitratorName,
            cd.create_time tribunalNoticeCreateTime
        FROM
            case_arbitrator ca,
            user_info ui,
            doc_send_record dsr,
            case_doc cd
        WHERE
            ca.case_id = dsr.case_id
        AND ca.arbitrator_id = dsr.receiver_id
        AND ca.arbitrator_id = ui.id
        AND dsr.doc_id = cd.id
        AND ca.status= ${@com.zyxy.common.enums.CaseArbitratorStatusEnum@OK.getCode()}
        AND cd.case_id = #{caseId}
        AND cd.doc_type = ${@com.zyxy.common.enums.CaseDocTypeEnum@TRIBUNAL_NOTICE.getCode()}
    </select>
    <select id="queryBothAgreement" parameterType="string" resultType="string">
        SELECT
          ARBITRATOR_ID
        FROM
          case_arbitrator_oper
        WHERE
          CASE_ID = #{caseId}
          GROUP BY ARBITRATOR_ID
    </select>
    
    <!-- 查询仲裁员的接案类型 (分配/双方共同选定) -->
    <select id="queryArbitratorAcceptType" resultType="java.lang.String">
  	SELECT
  		type
  	FROM
  		case_arbitrator
  	WHERE
  		arbitrator_id = #{arbitratorId}
  		AND
  		case_id = #{caseId}
  </select>
</mapper>