<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyxy.common.mapper.CaseInfoMapper">
  <resultMap id="BaseResultMap" type="com.zyxy.common.domain.CaseInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="CASE_NO" jdbcType="VARCHAR" property="caseNo" />
    <result column="ACCEPTANCE_NO" jdbcType="VARCHAR" property="acceptanceNo" />
    <result column="CASE_TYPE_ID" jdbcType="VARCHAR" property="caseTypeId" />
    <result column="CURRENT_MAIN_NODE" jdbcType="INTEGER" property="currentMainNode" />
    <result column="CURRENT_CHILD_NODE" jdbcType="INTEGER" property="currentChildNode" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
    <result column="SOURCE_ORG_ID" jdbcType="VARCHAR" property="sourceOrgId" />
    <result column="CREATER_ID" jdbcType="VARCHAR" property="createrId" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="REGISTER_TIME" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="UPDATE_ID" jdbcType="VARCHAR" property="updateId" />
    <result column="ACCEPT_TIME" jdbcType="TIMESTAMP" property="acceptTime" />
    <result column="CURRENT_OWNER" jdbcType="VARCHAR" property="currentOwner" />
    <result column="COMPLETE_TIME" jdbcType="TIMESTAMP" property="completeTime" />
    <result column="APPLY_TYPE" jdbcType="CHAR" property="applyType" />
    <result column="CASE_ACCEPTANCE_TIME" jdbcType="TIMESTAMP" property="caseAcceptanceTime" />
    <result column="SIGN_ABRI_PROTOCOL_MODE" jdbcType="CHAR" property="signAbriProtocolMode" />
    <result column="SIGN_TIME" jdbcType="TIMESTAMP" property="signTime" />
    <result column="PROTOCOL_NAME" jdbcType="VARCHAR" property="protocolName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    ID, CASE_NO, ACCEPTANCE_NO, CASE_TYPE_ID, CURRENT_MAIN_NODE, CURRENT_CHILD_NODE, 
    STATUS, SOURCE_ORG_ID, CREATER_ID, CREATE_TIME, UPDATE_TIME, REGISTER_TIME, UPDATE_ID, 
    ACCEPT_TIME, CURRENT_OWNER, COMPLETE_TIME, APPLY_TYPE, CASE_ACCEPTANCE_TIME, SIGN_ABRI_PROTOCOL_MODE, 
    SIGN_TIME, PROTOCOL_NAME
  </sql>
  <select id="selectByExample" parameterType="com.zyxy.common.domain.CaseInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from case_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from case_info
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from case_info
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zyxy.common.domain.CaseInfoExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from case_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zyxy.common.domain.CaseInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into case_info (ID, CASE_NO, ACCEPTANCE_NO, 
      CASE_TYPE_ID, CURRENT_MAIN_NODE, CURRENT_CHILD_NODE, 
      STATUS, SOURCE_ORG_ID, CREATER_ID, 
      CREATE_TIME, UPDATE_TIME, REGISTER_TIME, 
      UPDATE_ID, ACCEPT_TIME, CURRENT_OWNER, 
      COMPLETE_TIME, APPLY_TYPE, CASE_ACCEPTANCE_TIME, 
      SIGN_ABRI_PROTOCOL_MODE, SIGN_TIME, PROTOCOL_NAME
      )
    values (#{id,jdbcType=VARCHAR}, #{caseNo,jdbcType=VARCHAR}, #{acceptanceNo,jdbcType=VARCHAR}, 
      #{caseTypeId,jdbcType=VARCHAR}, #{currentMainNode,jdbcType=INTEGER}, #{currentChildNode,jdbcType=INTEGER}, 
      #{status,jdbcType=CHAR}, #{sourceOrgId,jdbcType=VARCHAR}, #{createrId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{registerTime,jdbcType=TIMESTAMP}, 
      #{updateId,jdbcType=VARCHAR}, #{acceptTime,jdbcType=TIMESTAMP}, #{currentOwner,jdbcType=VARCHAR}, 
      #{completeTime,jdbcType=TIMESTAMP}, #{applyType,jdbcType=CHAR}, #{caseAcceptanceTime,jdbcType=TIMESTAMP}, 
      #{signAbriProtocolMode,jdbcType=CHAR}, #{signTime,jdbcType=TIMESTAMP}, #{protocolName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zyxy.common.domain.CaseInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into case_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="caseNo != null">
        CASE_NO,
      </if>
      <if test="acceptanceNo != null">
        ACCEPTANCE_NO,
      </if>
      <if test="caseTypeId != null">
        CASE_TYPE_ID,
      </if>
      <if test="currentMainNode != null">
        CURRENT_MAIN_NODE,
      </if>
      <if test="currentChildNode != null">
        CURRENT_CHILD_NODE,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="sourceOrgId != null">
        SOURCE_ORG_ID,
      </if>
      <if test="createrId != null">
        CREATER_ID,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="registerTime != null">
        REGISTER_TIME,
      </if>
      <if test="updateId != null">
        UPDATE_ID,
      </if>
      <if test="acceptTime != null">
        ACCEPT_TIME,
      </if>
      <if test="currentOwner != null">
        CURRENT_OWNER,
      </if>
      <if test="completeTime != null">
        COMPLETE_TIME,
      </if>
      <if test="applyType != null">
        APPLY_TYPE,
      </if>
      <if test="caseAcceptanceTime != null">
        CASE_ACCEPTANCE_TIME,
      </if>
      <if test="signAbriProtocolMode != null">
        SIGN_ABRI_PROTOCOL_MODE,
      </if>
      <if test="signTime != null">
        SIGN_TIME,
      </if>
      <if test="protocolName != null">
        PROTOCOL_NAME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="caseNo != null">
        #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="acceptanceNo != null">
        #{acceptanceNo,jdbcType=VARCHAR},
      </if>
      <if test="caseTypeId != null">
        #{caseTypeId,jdbcType=VARCHAR},
      </if>
      <if test="currentMainNode != null">
        #{currentMainNode,jdbcType=INTEGER},
      </if>
      <if test="currentChildNode != null">
        #{currentChildNode,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="sourceOrgId != null">
        #{sourceOrgId,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        #{createrId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="acceptTime != null">
        #{acceptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="currentOwner != null">
        #{currentOwner,jdbcType=VARCHAR},
      </if>
      <if test="completeTime != null">
        #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applyType != null">
        #{applyType,jdbcType=CHAR},
      </if>
      <if test="caseAcceptanceTime != null">
        #{caseAcceptanceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signAbriProtocolMode != null">
        #{signAbriProtocolMode,jdbcType=CHAR},
      </if>
      <if test="signTime != null">
        #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="protocolName != null">
        #{protocolName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zyxy.common.domain.CaseInfoExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from case_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_info
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.caseNo != null">
        CASE_NO = #{record.caseNo,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptanceNo != null">
        ACCEPTANCE_NO = #{record.acceptanceNo,jdbcType=VARCHAR},
      </if>
      <if test="record.caseTypeId != null">
        CASE_TYPE_ID = #{record.caseTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.currentMainNode != null">
        CURRENT_MAIN_NODE = #{record.currentMainNode,jdbcType=INTEGER},
      </if>
      <if test="record.currentChildNode != null">
        CURRENT_CHILD_NODE = #{record.currentChildNode,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.sourceOrgId != null">
        SOURCE_ORG_ID = #{record.sourceOrgId,jdbcType=VARCHAR},
      </if>
      <if test="record.createrId != null">
        CREATER_ID = #{record.createrId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.registerTime != null">
        REGISTER_TIME = #{record.registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null">
        UPDATE_ID = #{record.updateId,jdbcType=VARCHAR},
      </if>
      <if test="record.acceptTime != null">
        ACCEPT_TIME = #{record.acceptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.currentOwner != null">
        CURRENT_OWNER = #{record.currentOwner,jdbcType=VARCHAR},
      </if>
      <if test="record.completeTime != null">
        COMPLETE_TIME = #{record.completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.applyType != null">
        APPLY_TYPE = #{record.applyType,jdbcType=CHAR},
      </if>
      <if test="record.caseAcceptanceTime != null">
        CASE_ACCEPTANCE_TIME = #{record.caseAcceptanceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.signAbriProtocolMode != null">
        SIGN_ABRI_PROTOCOL_MODE = #{record.signAbriProtocolMode,jdbcType=CHAR},
      </if>
      <if test="record.signTime != null">
        SIGN_TIME = #{record.signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.protocolName != null">
        PROTOCOL_NAME = #{record.protocolName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_info
    set ID = #{record.id,jdbcType=VARCHAR},
      CASE_NO = #{record.caseNo,jdbcType=VARCHAR},
      ACCEPTANCE_NO = #{record.acceptanceNo,jdbcType=VARCHAR},
      CASE_TYPE_ID = #{record.caseTypeId,jdbcType=VARCHAR},
      CURRENT_MAIN_NODE = #{record.currentMainNode,jdbcType=INTEGER},
      CURRENT_CHILD_NODE = #{record.currentChildNode,jdbcType=INTEGER},
      STATUS = #{record.status,jdbcType=CHAR},
      SOURCE_ORG_ID = #{record.sourceOrgId,jdbcType=VARCHAR},
      CREATER_ID = #{record.createrId,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      REGISTER_TIME = #{record.registerTime,jdbcType=TIMESTAMP},
      UPDATE_ID = #{record.updateId,jdbcType=VARCHAR},
      ACCEPT_TIME = #{record.acceptTime,jdbcType=TIMESTAMP},
      CURRENT_OWNER = #{record.currentOwner,jdbcType=VARCHAR},
      COMPLETE_TIME = #{record.completeTime,jdbcType=TIMESTAMP},
      APPLY_TYPE = #{record.applyType,jdbcType=CHAR},
      CASE_ACCEPTANCE_TIME = #{record.caseAcceptanceTime,jdbcType=TIMESTAMP},
      SIGN_ABRI_PROTOCOL_MODE = #{record.signAbriProtocolMode,jdbcType=CHAR},
      SIGN_TIME = #{record.signTime,jdbcType=TIMESTAMP},
      PROTOCOL_NAME = #{record.protocolName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zyxy.common.domain.CaseInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_info
    <set>
      <if test="caseNo != null">
        CASE_NO = #{caseNo,jdbcType=VARCHAR},
      </if>
      <if test="acceptanceNo != null">
        ACCEPTANCE_NO = #{acceptanceNo,jdbcType=VARCHAR},
      </if>
      <if test="caseTypeId != null">
        CASE_TYPE_ID = #{caseTypeId,jdbcType=VARCHAR},
      </if>
      <if test="currentMainNode != null">
        CURRENT_MAIN_NODE = #{currentMainNode,jdbcType=INTEGER},
      </if>
      <if test="currentChildNode != null">
        CURRENT_CHILD_NODE = #{currentChildNode,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="sourceOrgId != null">
        SOURCE_ORG_ID = #{sourceOrgId,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null">
        CREATER_ID = #{createrId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerTime != null">
        REGISTER_TIME = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        UPDATE_ID = #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="acceptTime != null">
        ACCEPT_TIME = #{acceptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="currentOwner != null">
        CURRENT_OWNER = #{currentOwner,jdbcType=VARCHAR},
      </if>
      <if test="completeTime != null">
        COMPLETE_TIME = #{completeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applyType != null">
        APPLY_TYPE = #{applyType,jdbcType=CHAR},
      </if>
      <if test="caseAcceptanceTime != null">
        CASE_ACCEPTANCE_TIME = #{caseAcceptanceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="signAbriProtocolMode != null">
        SIGN_ABRI_PROTOCOL_MODE = #{signAbriProtocolMode,jdbcType=CHAR},
      </if>
      <if test="signTime != null">
        SIGN_TIME = #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="protocolName != null">
        PROTOCOL_NAME = #{protocolName,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zyxy.common.domain.CaseInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update case_info
    set CASE_NO = #{caseNo,jdbcType=VARCHAR},
      ACCEPTANCE_NO = #{acceptanceNo,jdbcType=VARCHAR},
      CASE_TYPE_ID = #{caseTypeId,jdbcType=VARCHAR},
      CURRENT_MAIN_NODE = #{currentMainNode,jdbcType=INTEGER},
      CURRENT_CHILD_NODE = #{currentChildNode,jdbcType=INTEGER},
      STATUS = #{status,jdbcType=CHAR},
      SOURCE_ORG_ID = #{sourceOrgId,jdbcType=VARCHAR},
      CREATER_ID = #{createrId,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      REGISTER_TIME = #{registerTime,jdbcType=TIMESTAMP},
      UPDATE_ID = #{updateId,jdbcType=VARCHAR},
      ACCEPT_TIME = #{acceptTime,jdbcType=TIMESTAMP},
      CURRENT_OWNER = #{currentOwner,jdbcType=VARCHAR},
      COMPLETE_TIME = #{completeTime,jdbcType=TIMESTAMP},
      APPLY_TYPE = #{applyType,jdbcType=CHAR},
      CASE_ACCEPTANCE_TIME = #{caseAcceptanceTime,jdbcType=TIMESTAMP},
      SIGN_ABRI_PROTOCOL_MODE = #{signAbriProtocolMode,jdbcType=CHAR},
      SIGN_TIME = #{signTime,jdbcType=TIMESTAMP},
      PROTOCOL_NAME = #{protocolName,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <select id="queryCaseList" resultType="com.zyxy.common.vo.ArbitratorCaseListVO">
    SELECT
      c.id id,
      c.case_no caseNo,
      c.acceptance_no acceptanceNo,
      c.current_main_node mainStatus,
      c.current_child_node childStatus,
      <!--0- 待受理, 1- 进行中, 2- 已完结-->
      CASE WHEN c.CURRENT_MAIN_NODE = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_OVER.getCode()} OR
      c.CURRENT_MAIN_NODE = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_OFFSET.getCode()} THEN 2 ELSE CASE WHEN
      a.STATUS = 0 THEN 0 ELSE 1 END END rightStatus,
      <!--0- 待提交, 1- 和解中, 2- 答辩中, 3- 裁决中, 4- 已结案，5- 补正，6- 立案中-->
      CASE
      WHEN co.ID IS NOT NULL
        THEN 1
      WHEN c.ACCEPTANCE_NO IS NULL
        THEN 0
      WHEN c.CURRENT_MAIN_NODE = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_REPLY.getCode()} OR
      c.CURRENT_MAIN_NODE = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_CHECK_NOT_PASS.getCode()}
        THEN 2
      WHEN c.CURRENT_MAIN_NODE = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_CHECK.getCode()} OR
      c.CURRENT_MAIN_NODE = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_PAY.getCode()}
      THEN 6
      WHEN c.CURRENT_MAIN_NODE = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_PROCESSING.getCode()}
        THEN 3
      WHEN c.CURRENT_MAIN_NODE = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_OVER.getCode()}
        THEN 4
      WHEN c.CURRENT_MAIN_NODE = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_OFFSET.getCode()}
      THEN 5
      END status,
      p.prop_name applicant,
      d.prop_name beApplicant,
      a.accept_time acceptDate,
      a.type type,
      a.create_time beInviteDate,
      i.name agentName,
      r.case_id IS NOT NULL isBack
    FROM
      case_arbitrator a,
      case_proposer p,
      case_defendant d,
      case_info c
      LEFT JOIN case_agent ca
      ON ca.case_id = c.id AND ca.litigant_type = '0'
      LEFT JOIN user_info i
      ON i.id = ca.agent_id
      LEFT JOIN case_request_info r
      ON r.case_id = c.id AND r.request_type = '1'
      LEFT JOIN compromise_apply co
      ON co.CASE_ID = c.ID AND co.STATUS = ${@com.zyxy.common.enums.ComproiseApplyStatusEnum@DOING.getValue()}
      WHERE
        c.id = a.case_id
        and a.arbitrator_id = #{arbitratorId}
        and p.case_id = c.id
        and d.case_id = c.id
        <if test="dto.searchKeyWord != null and dto.searchKeyWord != ''">
          and (
            d.prop_name = #{dto.searchKeyWord}
            or c.case_no = #{dto.searchKeyWord}
          )
        </if>
        <if test="dto.beInviteDateStart != null and dto.beInviteDateStart != ''">
          and a.create_time &gt;= STR_TO_DATE(#{dto.beInviteDateStart}, 'yyyy-MM-dd')
        </if>
        <if test="dto.beInviteDateEnd != null and dto.beInviteDateEnd != ''">
            and a.create_time &lt;= DATE_ADD(STR_TO_DATE(#{dto.beInviteDateEnd}, 'yyyy-MM-dd'),INTERVAL 1 DAY)
        </if>
      <if test="dto.status != null and deo.status != ''">
          <!--0- 待提交, 1- 和解中, 2- 答辩中, 3- 裁决中, 4- 已结案，5- 补正-->
          <choose>
              <when test="title == '0'">
                  AND c.ACCEPTANCE_NO IS NULL
              </when>
              <when test="title == '1'">
                  AND co.ID IS NOT NULL
              </when>
              <when test="title == '2'">
                  AND c.CURRENT_MAIN_NODE = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_REPLY.getCode()}
              </when>
              <when test="title == '3'">
                  AND c.CURRENT_MAIN_NODE = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_PROCESSING.getCode()}
              </when>
              <when test="title == '4'">
                  AND c.CURRENT_MAIN_NODE = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_OVER.getCode()}
              </when>
              <when test="title == '5'">
                  AND c.CURRENT_MAIN_NODE = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_OFFSET.getCode()}
              </when>
          </choose>
      </if>
  </select>
  <select id="queryCaseBaseInfo" parameterType="java.lang.String" resultType="com.zyxy.common.vo.ArbitratorCaseBaseInfoVO">
    SELECT
      c.acceptance_no acceptanceNO,
      c.case_type_id caseType,
      c.register_time registerTime,
      r.case_amount caseAmount,
      a.type type,
      <!--0- 待受理, 1- 进行中, 2- 已完结-->
      CASE WHEN c.CURRENT_MAIN_NODE = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_OVER.getCode()} OR
      c.CURRENT_MAIN_NODE = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_OFFSET.getCode()} THEN 2 ELSE CASE WHEN
      a.STATUS = 0 THEN 0 ELSE 1 END END rightStatus,
      p.prop_name applicantName,
      p.prop_type applicantType,
      p.sex applicantSex,
      p.birthday applicantBirthday,
      p.address applicantAddress,
      p.card_id applicantCardId,
      p.cert_name applicantCertName,
      p.cert_duties applicantCertDuties,
      p.unified_social_code applicantUnifiedSocialCode,
      p.ethnic applicantEthnic,
      p.phone applicantPhone,
      p.email applicantEmail,
      pai.name applicantAttorney,
      pai.vocation applicantAttorneyJob,
      d.prop_name beApplicantName,
      d.prop_type beApplicantType,
      d.sex beApplicantSex,
      d.birthday beApplicantBirthday,
      d.address beApplicantAddress,
      d.card_id beApplicantCardId,
      d.cert_name beApplicantCertName,
      d.cert_duties beApplicantCertDuties,
      d.unified_social_code beApplicantUnifiedSocialCode,
      d.ethnic beApplicantEthnic,
      d.phone beApplicantPhone,
      d.email beApplicantEmail,
      dai.name beApplicantAttorney,
      dai.vocation beApplicantAttorneyJob,
      r.arb_claim arbClaim,
      r.fact fact,
      r.reason reason
    FROM
      case_info c
      LEFT JOIN case_agent da
      ON da.case_id = c.id
      <if test="requestFlag == '0'.toString()">
        AND da.litigant_type = '1'
      </if>
      <if test="requestFlag == '1'.toString()">
        AND da.litigant_type = '0'
      </if>
      LEFT JOIN litigant_info dai
      ON dai.id = da.agent_id
      LEFT JOIN case_agent pa
      ON pa.case_id = c.id
      <if test="requestFlag == '0'.toString()">
        AND pa.litigant_type = '1'
      </if>
      <if test="requestFlag == '1'.toString()">
        AND pa.litigant_type = '0'
      </if>
      LEFT JOIN litigant_info pai
      ON pai.id = pa.agent_id,
      case_arbitrator a,
      case_request_info r,
      <if test="requestFlag == '0'.toString()">
        case_proposer p,
        case_defendant d
      </if>
      <if test="requestFlag == '1'.toString()">
        case_proposer d,
        case_defendant p
      </if>
    WHERE
      c.id = #{caseId}
      AND a.case_id = c.id
      AND r.Case_id = c.id
      AND r.request_type = #{requestFlag}
      AND p.case_id = c.id
      AND d.case_id = c.id
  </select>

  <!-- 仲裁委人员查询案件基本信息 -->
  <select id="queryArbitrationCaseInfo" parameterType="java.lang.String" resultType="com.zyxy.common.vo.ArbitratorCaseBaseInfoVO">
    SELECT
      c.id caseId,
      c.case_no caseNO,
      c.acceptance_no acceptanceNO,
      c.case_type_id caseType,
      c.register_time registerTime,
      r.case_amount caseAmount,
      p.prop_name applicantName,
      p.prop_type applicantType,
      p.sex applicantSex,
      p.birthday applicantBirthday,
      p.address applicantAddress,
      p.card_id applicantCardId,
      p.cert_name applicantCertName,
      p.cert_duties applicantCertDuties,
      p.unified_social_code applicantUnifiedSocialCode,
      p.ethnic applicantEthnic,
      p.phone applicantPhone,
      p.email applicantEmail,
      pai.name applicantAttorney,
      pai.vocation applicantAttorneyJob,
      d.prop_name beApplicantName,
      d.prop_type beApplicantType,
      d.sex beApplicantSex,
      d.birthday beApplicantBirthday,
      d.address beApplicantAddress,
      d.card_id beApplicantCardId,
      d.cert_name beApplicantCertName,
      d.cert_duties beApplicantCertDuties,
      d.unified_social_code beApplicantUnifiedSocialCode,
      d.ethnic beApplicantEthnic,
      d.phone beApplicantPhone,
      d.email beApplicantEmail,
      dai.name beApplicantAttorney,
      dai.vocation beApplicantAttorneyJob,
      r.arb_claim arbClaim,
      r.fact fact,
      r.reason reason
    FROM
      case_info c
      LEFT JOIN case_agent da
      ON da.case_id = c.id
      <if test="requestFlag == '0'.toString()">
        AND da.litigant_type = '1'
      </if>
      <if test="requestFlag == '1'.toString()">
        AND da.litigant_type = '0'
      </if>
      LEFT JOIN litigant_info dai
      ON dai.id = da.agent_id
      LEFT JOIN case_agent pa
      ON pa.case_id = c.id
      <if test="requestFlag == '0'.toString()">
        AND pa.litigant_type = '0'
      </if>
      <if test="requestFlag == '1'.toString()">
        AND pa.litigant_type = '1'
      </if>
      LEFT JOIN litigant_info pai
      ON pai.id = pa.agent_id,
      case_request_info r,
      <if test="requestFlag == '0'.toString()">
        case_proposer p,
        case_defendant d
      </if>
      <if test="requestFlag == '1'.toString()">
        case_proposer d,
        case_defendant p
      </if>
    WHERE
      c.id = #{caseId}
      AND r.Case_id = c.id
      AND r.request_type = #{requestFlag}
      AND p.case_id = c.id
      AND d.case_id = c.id
  </select>


  <!-- 查询仲裁委案件列表 -->
  <select id="queryArbitrationCaseList" resultType="com.zyxy.common.vo.ArbitrationCaseListVO">
    SELECT
      ci.id caseId,
      ci.case_no caseNo,
      ci.acceptance_no acceptanceNo,
      ci.create_time createTime,
      ui.name name,
      ci.accept_time acceptTime,
      mi.duties duties,
      IF (
        (
          SELECT
            COUNT(1)
          FROM
            case_manager
          WHERE
            case_id = ci.id
          AND
            manager_id = #{dto.userId}
          AND
            status = ${@com.zyxy.common.enums.CaseManagerStatusEnum@OK.getCode()}
        ) &gt; 0,
        '0',
        '1'
        ) primiss,
      CASE WHEN ci.current_main_node =${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_CHECK.getCode()}
		OR ci.current_main_node = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_PAY.getCode()} THEN
			'立案期'
		WHEN ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_REPLY.getCode()} = ci.current_main_node THEN
			'答辩期'
		WHEN ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_PROCESSING.getCode()} = ci.current_main_node
		OR
      ci.current_main_node = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_ARBI.getCode()}
		OR
			ci.current_main_node = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_OVER.getCode()}
		 THEN
			'审理期'
		WHEN ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_OFFSET.getCode()} = ci.current_main_node THEN
			'补正期'
		END nodeName
    FROM
      case_info ci,
      user_info ui,
      manager_info mi,
      case_manager ma
    WHERE
    ui.id = ci.current_owner
    AND
    ui.id = mi.user_id
    AND
    ma.case_id=ci.id
    AND
    ma.manager_id=mi.id
    <if test="dto.param != null and dto.param != ''">
      AND
      (
      ui.phone = #{dto.param}
      OR
      ui.name = #{dto.param}
      OR
      ci.case_no = #{dto.param}
      OR
      ui.id_card = #{dto.param}
      )
    </if>
    order by ci.create_time DESC
  </select>
  <select id="queryCaseReplyInfo" resultType="com.zyxy.common.vo.ArbitratorCaseReplyInfoVO">
    SELECT
      d.prop_name beApplicantName,
      d.prop_type beApplicantType,
      d.sex beApplicantSex,
      d.birthday beApplicantBirthday,
      d.address beApplicantAddress,
      d.card_id beApplicantCardId,
      d.cert_name beApplicantCertName,
      d.cert_duties beApplicantCertDuties,
      d.unified_social_code beApplicantUnifiedSocialCode,
      d.ethnic beApplicantEthnic,
      d.phone beApplicantPhone,
      d.email beApplicantEmail,
      dai.name beApplicantAttorney,
      dai.vocation beApplicantAttorneyJob,
      p.prop_name applicantName,
      c.case_no caseNo,
      c.case_type_id caseType,
      re.rejoin_text replyContent,
      reu.name replyName,
      re.create_time replyTime,
      r.delayed_reply delayedReply
    FROM
      case_info c
      LEFT JOIN case_agent da
      ON da.case_id = c.id
      <if test="requestFlag == '0'.toString()">
        AND da.litigant_type = '1'
      </if>
      <if test="requestFlag == '1'.toString()">
        AND da.litigant_type = '0'
      </if>
      LEFT JOIN litigant_info dai
      ON dai.id = da.agent_id,
      case_request_info r,
      <if test="requestFlag == '0'.toString()">
        case_proposer p,
        case_defendant d,
      </if>
      <if test="requestFlag == '1'.toString()">
        case_proposer d,
        case_defendant p,
      </if>
      case_rejoin_record re,
      user_info reu
    WHERE
      c.id = #{caseId}
      AND r.case_id = c.id
      AND r.request_type = #{requestFlag}
      AND p.case_id = c.id
      AND d.case_id = c.id
      AND re.case_id = c.id
      AND re.counterclaim_flag = #{requestFlag}
      AND reu.id = re.rejoin_id
  </select>

  <select id="queryCaseFlowByCaseId" parameterType="java.lang.String" resultType="com.zyxy.common.vo.CaseFlowVO">
    SELECT
      true regStatus,
      c.REGISTER_TIME regDate,
      '已缴费 立案成功' regContent,
      CASE
        WHEN
          c.CURRENT_MAIN_NODE &gt;= 4
        THEN
          TRUE
        ELSE
          FALSE
      END replyStatus,
      CASE
        WHEN
          c.CURRENT_MAIN_NODE &gt;= 4
        THEN
          (SELECT START_TIME FROM case_node_oper WHERE CASE_ID = #{caseId} AND NODE_ID = 4)
        ELSE
          NULL
      END replyDate,
      CASE
        WHEN
          c.CURRENT_MAIN_NODE = 4
        THEN
          '双方正在答辩中'
        WHEN
          c.CURRENT_MAIN_NODE &gt; 4
        THEN
          '双方已答辩完成'
        ELSE
          NULL
      END replyContent,
      CASE
        WHEN
          c.CURRENT_MAIN_NODE &gt;= 5
        THEN
          TRUE
        ELSE
          FALSE
      END organizeStatus,
      CASE
        WHEN
          c.CURRENT_MAIN_NODE &gt;= 6
        THEN
          (SELECT START_TIME FROM case_node_oper WHERE CASE_ID = #{caseId} AND NODE_ID = 6)
        ELSE
          NULL
      END organizeDate,
      CASE
        WHEN
          c.CURRENT_MAIN_NODE = 6
        THEN
          '等待仲裁员接受'
        WHEN
          c.CURRENT_MAIN_NODE &gt; 6
        THEN
          '已接受 组庭成功'
        ELSE
          NULL
      END organizeContent,
      CASE
        WHEN
          c.CURRENT_MAIN_NODE &gt;= 7
        THEN
          TRUE
        ELSE
          FALSE
      END arbiStatus,
      CASE
        WHEN
          c.CURRENT_MAIN_NODE &gt;= 7
        THEN
          (SELECT START_TIME FROM case_node_oper WHERE CASE_ID = #{caseId} AND NODE_ID = 7)
        ELSE
          NULL
      END arbiDate,
      CASE
        WHEN
          c.CURRENT_MAIN_NODE = 7
        THEN
          '仲裁员正在裁决中'
        WHEN
          c.CURRENT_MAIN_NODE = 8
        THEN
          '仲裁员已裁决完毕 等待仲裁委审核'
        WHEN
          c.CURRENT_MAIN_NODE &gt; 8
        THEN
          '裁决书审核通过 已下发至双方当事人'
        ELSE
          NULL
      END arbiContent,
      CASE
        WHEN
          c.CURRENT_MAIN_NODE &gt;= 9
        THEN
          TRUE
        ELSE
          FALSE
      END overStatus,
      CASE
        WHEN
          c.CURRENT_MAIN_NODE &gt;= 9
        THEN
          (SELECT START_TIME FROM case_node_oper WHERE CASE_ID = #{caseId} AND NODE_ID = 9)
        ELSE
          NULL
      END overDate,
      CASE
        WHEN
          c.CURRENT_MAIN_NODE &gt;= 9
        THEN
          '该案结案'
        ELSE
          NULL
      END overContent,
      CASE
        WHEN
          c.CURRENT_MAIN_NODE = 9
        THEN
          TRUE
        ELSE
          FALSE
      END offsetStatus,
      CASE
        WHEN
          c.CURRENT_MAIN_NODE = 9
        THEN
          (SELECT REAL_END_TIME FROM case_node_oper WHERE CASE_ID = #{caseId} AND NODE_ID = 9)
        ELSE
          NULL
      END offsetDate,
      CASE
        WHEN
          c.CURRENT_MAIN_NODE = 9
        THEN
          CASE
            WHEN
              ADDDATE((SELECT REAL_END_TIME FROM case_node_oper WHERE CASE_ID = #{caseId} AND NODE_ID = 9), INTERVAL 15 DAY) &lt; now()
            THEN
              '正在等待双方补正'
            ELSE
            '双方已补正完成'
          END
        ELSE
          NULL
      END offsetContent
    FROM
      case_info c
    WHERE
      ID = #{caseId}
  </select>

  <sql id="Litigant_Case_List">
 	ci.id id,
	ci.case_no caseNo,
	ci.acceptance_no accptanceNo,
	CASE
	WHEN ci.current_main_node IS NULL THEN
		0
	WHEN ci.current_main_node = 1 THEN
		1
	WHEN ci.current_main_node = 2 THEN
		2
	WHEN ci.current_main_node = 3 THEN
		3
	WHEN ci.current_main_node = 4 THEN
		4
	WHEN ci.current_main_node = 5 THEN
		5
	WHEN ci.current_main_node = 6 THEN
		6
	WHEN ci.current_main_node = 7 THEN
		7
	WHEN ci.current_main_node = 8 THEN
		8
	WHEN ci.current_main_node = 9 THEN
		1
	WHEN ci.current_main_node = 2 THEN
		2
	END AS status,
	ci.current_child_node currentChildNode,
	ci.create_time caseApplyTime,
	ci.register_time caseRegisterTime,
	ci.complete_time caseCompleteTime,
	cp.id proposerId,
	cp.prop_name proposerName,
	cp.prop_type proposerType,
	cd.id defendantId,
	cd.prop_name defendantName,
	cd.prop_type defendantType,
	ca.agent_id agentId,
	ca.litigant_type litigantType,
	cpo.amount amount,
	cno.plan_end_time nodeEndTime,
  </sql>

  <sql id="Litigant_Case_List_Extend">
  	ca.agent_id IS NOT NULL hasAgent,
  	ui2.name agentName,
  	cri2.case_id IS NOT NULL isBack
  </sql>

  <sql id="Litigant_Case_List_Extend_2">
  	ui.name agentName,
  	cri2.case_id IS NOT NULL isBack
  </sql>
  <!-- 当事人 申请人案件列表 -->
  <select id="selectProposerCaseList" parameterType="com.zyxy.common.dto.LitigantCaseListDTO" resultType="com.zyxy.common.vo.LitigantCaseListVO">
	 SELECT
		<include refid="Litigant_Case_List" />
		<include refid="Litigant_Case_List_Extend" />
	FROM
		user_info ui,
		case_proposer cp,
		case_defendant cd,
		case_info ci
	LEFT JOIN
		case_request_info cri2
	ON
		ci.id = cri2.case_id
	AND
		cri2.request_type = ${@com.zyxy.common.enums.RequestTypeEnum@BACK_REQUEST.getValue()}
	LEFT JOIN
		case_request_info cri
	ON
		ci.id = cri.case_id
	AND
		cri.request_type = ${@com.zyxy.common.enums.RequestTypeEnum@REQUEST.getValue()}
	LEFT JOIN
		case_pay_order cpo
	ON
		cri.case_id = cpo.case_id
	AND
		cri.id = cpo.request_id
	AND
		cpo.status = ${@com.zyxy.common.enums.OrderPayFlagEnum@UN_PAY.getValue()}
	LEFT JOIN
		case_agent ca
	ON
		ci.id= ca.case_id
	AND
		ca.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@PROPESER.getValue()}
	LEFT JOIN
		case_node_oper cno
	ON
		cri.id = cno.request_id
	AND
		ci.current_main_node = cno.node_id
	LEFT JOIN
		user_info ui2
	ON
		ca.agent_id = ui2.id
	WHERE
		ui.card_id = cp.card_id
	AND
		cp.case_id = ci.id
	AND
		cd.case_id = ci.id
	AND
		ui.id =  #{userId}

	<if test="status!=null">
		ci.status = #{status}
	</if>
	<if test="fifterCondition!=null">
		ci.case_no = #{fifterCondition}
        OR
		ci.acceptance_no = #{fifterCondition}
		OR
		cp.prop_name = #{fifterCondition}
		OR
		cd.prop_name = #{fifterCondition}
		OR
		ui2.name = {fifterCondition}
	</if>
	ORDER BY
	ci.create_time
	DESC
  </select>

  <!-- 当事人  被申请人案件列表 -->
  <select id="selectDefendantCaseList" parameterType="com.zyxy.common.dto.LitigantCaseListDTO" resultType="com.zyxy.common.vo.LitigantCaseListVO">
	SELECT
		<include refid="Litigant_Case_List" />
		<include refid="Litigant_Case_List_Extend" />
	FROM
		user_info ui,
		case_proposer cp,
		case_defendant cd,
		case_info ci
	LEFT JOIN
		case_request_info cri2
	ON
		ci.id = cri2.case_id
	AND
		cri2.request_type = ${@com.zyxy.common.enums.RequestTypeEnum@BACK_REQUEST.getValue()}
	LEFT JOIN
		case_request_info cri
	ON
		ci.id = cri.case_id
	AND
		cri.request_type = ${@com.zyxy.common.enums.RequestTypeEnum@BACK_REQUEST.getValue()}
	LEFT JOIN
		case_pay_order cpo
	ON
		cri.case_id = cpo.case_id
	AND
		cpo.status = ${@com.zyxy.common.enums.OrderPayFlagEnum@UN_PAY.getValue()}
	LEFT JOIN
		case_agent ca
	ON
		ci.id= ca.case_id
	AND
		ca.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@DEFENDANT.getValue()}
	LEFT JOIN
		case_node_oper cno
	ON
		cri.id = cno.request_id
	AND
		ci.current_main_node = cno.node_id
	LEFT JOIN
		user_info ui2
	ON
		ca.agent_id = ui2.ID
	WHERE
		ui.card_id = cd.card_id
	AND
		cd.case_id = ci.id
	AND
		cp.case_id = ci.id
	AND
		ui.id =  #{userId}
	AND
		ci.current_main_node in(3,4,5,6,7,8)
	<if test="status!=null">
		ci.status = #{status}
	</if>
	<if test="fifterCondition!=null">
		ci.case_no = #{fifterCondition}
        OR
		ci.acceptance_no = #{fifterCondition}
		OR
		cp.prop_name = #{fifterCondition}
		OR
		cd.prop_name = #{fifterCondition}
		OR
		ui2.name = {fifterCondition}
	</if>
	order by
	ci.create_time
	DESC
  </select>

  <select id="selectAgentCaseList" parameterType="com.zyxy.common.dto.LitigantCaseListDTO" resultType="com.zyxy.common.vo.LitigantCaseListVO">
	SELECT
		<include refid="Litigant_Case_List" />
		<include refid="Litigant_Case_List_Extend_2" />
	FROM
		user_info ui,
		case_agent ca,
		case_proposer cp,
		case_defendant cd ,
		case_info ci
	LEFT JOIN
		case_request_info cri2
	ON
		ci.id = cri2.case_id
	AND
		cri2.request_type = ${@com.zyxy.common.enums.RequestTypeEnum@BACK_REQUEST.getValue()}
	LEFT JOIN
		case_request_info cri
	ON
		ci.ID = cri.case_id
	LEFT JOIN
		case_pay_order cpo
	ON
		cri.case_id = cpo.case_id
	AND
		cri.id = cpo.request_id
	AND
		cpo.status = ${@com.zyxy.common.enums.OrderPayFlagEnum@UN_PAY.getValue()}
	LEFT JOIN
		case_node_oper cno
	ON
		cri.id = cno.request_id
	WHERE
		ui.id = ca.agent_id
	AND
		ca.case_id = ci.id
	AND
		ci.id = cp.case_id
	AND
		ci.id = cd.case_id
	AND
		ca.litigant_type = cri.request_type
	AND
		ui.id = #{userId}
	<if test="status!=null">
		ci.status = #{status}
	</if>
	<if test="fifterCondition!=null">
		ci.case_no = #{fifterCondition}
        OR
		ci.acceptance_no = #{fifterCondition}
		OR
		cp.prop_name = #{fifterCondition}
		OR
		cd.prop_name = #{fifterCondition}
		OR
		ui.name = {fifterCondition}
	</if>
	ORDER BY
	ci.create_time
	DESC
  </select>

  <select id="queryWithdrawDecisionDocByCaseIdAndRequestFlag" resultType="com.zyxy.common.vo.CaseWithdrawDecisionVO">
    SELECT
      c.doc_year_number docYear,
      c.doc_serial_number docNo,
      cc.body_text docContent,
      cc.final_decision docFinalDecision,
      cc.issus_time docDate,
      cm.name docSecretary,
      ai.name docArbitrator,
      p.prop_name applicantName,
      p.prop_type applicantType,
      p.sex applicantSex,
      p.birthday applicantBirthday,
      p.address applicantAddress,
      p.card_id applicantCardId,
      p.cert_name applicantCertName,
      p.cert_duties applicantCertDuties,
      p.unified_social_code applicantUnifiedSocialCode,
      p.ethnic applicantEthnic,
      p.phone applicantPhone,
      p.email applicantEmail,
      pai.name applicantAttorney,
      pai.vocation applicantAttorneyJob,
      d.prop_name beApplicantName,
      d.prop_type beApplicantType,
      d.sex beApplicantSex,
      d.birthday beApplicantBirthday,
      d.address beApplicantAddress,
      d.card_id beApplicantCardId,
      d.cert_name beApplicantCertName,
      d.cert_duties beApplicantCertDuties,
      d.unified_social_code beApplicantUnifiedSocialCode,
      d.ethnic beApplicantEthnic,
      d.phone beApplicantPhone,
      d.email beApplicantEmail,
      dai.name beApplicantAttorney,
      dai.vocation beApplicantAttorneyJob
    FROM
      case_doc c
      LEFT JOIN case_agent da
      ON da.case_id = c.id
      <if test="requestFlag == '0'.toString()">
        AND da.litigant_type = '1'
      </if>
      <if test="requestFlag == '1'.toString()">
        AND da.litigant_type = '0'
      </if>
      LEFT JOIN litigant_info dai
      ON dai.id = da.agent_id
      LEFT JOIN case_agent pa
      ON pa.case_id = c.id
      <if test="requestFlag == '0'.toString()">
        AND pa.litigant_type = '1'
      </if>
      <if test="requestFlag == '1'.toString()">
        AND pa.litigant_type = '0'
      </if>
      LEFT JOIN litigant_info pai
      ON pai.id = pa.agent_id,
      case_doc_content cc,
      user_info ai,
      user_info cm,
      <if test="requestFlag == '0'.toString()">
        case_proposer p,
        case_defendant d
      </if>
      <if test="requestFlag == '1'.toString()">
        case_proposer d,
        case_defendant p
      </if>
    WHERE
    c.case_id = #{caseId}
    AND cc.doc_id = c.id
    <if test="requestFlag == '0'.toString()">
      AND c.doc_type = ${@com.zyxy.common.enums.CaseDocTypeEnum@CANCEL_DECIDE_BOOK.getCode()}
    </if>
    <if test="requestFlag == '1'.toString()">
      AND c.doc_type = ${@com.zyxy.common.enums.CaseDocTypeEnum@DE_REQUEST_CANCEL_DECIDE_BOOK.getCode()}
    </if>
    AND cm.ID = cc.SECRETARY_ID
    AND ai.ID = cc.ARBITRATOR_ID
    AND p.case_id = c.case_id
    AND d.case_id = c.case_id
  </select>


  <!--查询案件列表-->
  <select id="queryArbiCaseList" parameterType="com.zyxy.common.dto.CaseListDTO" resultType="com.zyxy.common.vo.CaseListVO">
    SELECT
        ci.id caseId,
        cp.prop_name proposerName,
        cd.prop_name defendantName,
        cpr.approve_status approveStatus,
        ci.create_time applyTime,
        ui.name ownnerName,
        mi.duties duties,
        cno.plan_end_time timeSet,
        IF (
			(
				SELECT
					COUNT(1)
				FROM
					case_manager
				WHERE
					case_id = ci.id
				AND manager_id = #{userId}
				AND status = ${@com.zyxy.common.enums.CaseManagerStatusEnum@OK.getCode()}
			) &gt; 0,
			'0',
			'1'
		) primiss,
        CASE (
				SELECT
					duties
				FROM
					manager_info
				WHERE
					user_id = #{userId}
				AND
					status= ${@com.zyxy.common.enums.ManagerInfoStatusEnum@NORMAL.getCode()}
			)
		WHEN ${@com.zyxy.common.enums.ManagerInfoTypeEnum@INITIATE_THE_SECRETARY.getCode()} THEN
			(

				IF (
					cpr.approve_user_id = #{userId},
					'0',
					'1'
				)
			)
		WHEN ${@com.zyxy.common.enums.ManagerInfoTypeEnum@INITIATE_THE_MINISTER.getCode()} THEN
			(

				IF (
					cpr.approve_user_id = #{userId},
					'0',
					'1'
				)
			)
		WHEN ${@com.zyxy.common.enums.ManagerInfoTypeEnum@ARBITRATION_SECRETARY.getCode()} THEN
			(

				IF (
					cpr.approve_user_id = #{userId},
					'0',
					'1'
				)
			)
		WHEN ${@com.zyxy.common.enums.ManagerInfoTypeEnum@ARBITRATION_MINISTER.getCode()} THEN
			(
				IF (
					cpr.approve_user_id = #{userId},
					'0',
					'1'
				)
			)
		WHEN ${@com.zyxy.common.enums.ManagerInfoTypeEnum@DIRECTOR.getCode()} THEN
			0
		WHEN ${@com.zyxy.common.enums.ManagerInfoTypeEnum@DEPUTY_DIRECTOR.getCode()} THEN
			0
		END caseStatus,
        CASE (
            SELECT
            ad.agent_user_id
            FROM
            authorization_delegate ad,
            case_manager cm
            WHERE
            ad.user_id = cm.manager_id
            AND ad.user_id = #{userId}
            AND ad.auth_type = '${@com.zyxy.common.enums.ApproveTypeEnum@INITIATE_APPROVAL.getTypeName()}'
            AND cm.case_id = ci.id
            AND ad.status=${@com.zyxy.common.enums.AuthorizationDelegateStatusEnum@EFFECTIVE.getCode()}
        )
        WHEN NULL THEN
          0
        ELSE
          1
        END isArantAuthOther,
        CASE (
            SELECT
              cm.manager_type
            FROM
              authorization_delegate ad,
              case_manager cm
            WHERE
              ad.user_id = cm.manager_id
            AND ad.agent_user_id = #{userId}
            AND ad.auth_type = '${@com.zyxy.common.enums.ApproveTypeEnum@INITIATE_APPROVAL.getTypeName()}'
            AND cm.case_id = ci.id
            AND ad.status=${@com.zyxy.common.enums.AuthorizationDelegateStatusEnum@EFFECTIVE.getCode()}
        )
        WHEN NOT NULL THEN
        (
            SELECT
              cm.manager_type
            FROM
              authorization_delegate ad,
              case_manager cm
            WHERE
              ad.user_id = cm.manager_id
            AND ad.agent_user_id = #{userId}
            AND ad.auth_type = '${@com.zyxy.common.enums.ApproveTypeEnum@INITIATE_APPROVAL.getTypeName()}'
            AND cm.case_id = ci.id
            AND ad.status=${@com.zyxy.common.enums.AuthorizationDelegateStatusEnum@EFFECTIVE.getCode()}
        )
        ELSE
          NULL
        END managerType
    FROM case_info ci
      LEFT JOIN
            (SELECT
            ca1.case_id,
            ui1.name
            FROM case_agent ca1, user_info ui1
            WHERE ca1.litigant_type = ${@com.zyxy.common.enums.CaseAgentTypeEnum@PROP_AGENT.getCode()} AND ca1.agent_id = ui1.id) m ON m.case_id = ci.id
      LEFT JOIN
            (SELECT
            ca2.case_id,
            ui2.name
            FROM case_agent ca2, user_info ui2
            WHERE ca2.litigant_type = ${@com.zyxy.common.enums.CaseAgentTypeEnum@DEFE_AGENT.getCode()} AND ca2.agent_id = ui2.id) n ON n.case_id = ci.id,
      case_proposer cp,
      case_defendant cd,
      manager_info mi,
      user_info ui,
      case_approve cpr,
      case_node cn,
      case_node_oper cno
    WHERE
      ci.id = cp.case_id
    AND
      ci.id = cd.case_id
    AND 
    	cpr.approve_user_id = mi.user_id
	AND 
		mi.user_id = ui.id
    AND
      ci.id = cpr.case_id
    AND
		ci.id=cno.case_id
	AND
		cn.id=cno.node_id
	AND
      cpr.approve_type = '${@com.zyxy.common.enums.ApproveTypeEnum@INITIATE_APPROVAL.getTypeName()}'
    AND
      cn.id = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_CHECK.getCode()}

   	<!-- 待审核 -->
    <if test="toAudit !=null and toAudit !=''">
      AND
        cpr.approve_status = ${@com.zyxy.common.enums.CaseApproveStatusEnum@WAIT_AUDIT.getValue()}
      AND
      	ui.id = #{userId}
    </if>

    <!-- 审核中 -->
    <if test="underReview !=null and underReview !=''">
      AND
        cpr.approve_status = ${@com.zyxy.common.enums.CaseApproveStatusEnum@WAIT_AUDIT.getValue()}
      AND
      	ui.id != #{userId}
    </if>

    <!-- 已审核 -->
    <if test="approved !=null and approved !=''">
      AND
      	(
	        	cpr.approve_status = ${@com.zyxy.common.enums.CaseApproveStatusEnum@SUCCESS_AUDIT.getValue()}
	        OR
	        	cpr.approve_status = ${@com.zyxy.common.enums.CaseApproveStatusEnum@FAIL_AUDIT.getValue()}
        )
    </if>

    <if test="propName !=null and propName !=''">
      AND
      (   cp.prop_name = #{propName}
        OR
          cd.prop_name = #{propName}
        OR
          n.name = #{propName}
        OR
          m.name = #{propName}
      )
    </if>

    <if test="duties !=null and duties !='' and duties != '-1'.toString() ">/*当duties等于-1的时候，代表查询全部*/
      AND
        mi.duties = #{duties}
    </if>

    <if test="startTime !=null and startTime !=''">
      AND
        #{startTime} &lt;=date_format(ci.create_time,'%Y-%m-%d')
    </if>

    <if test="endTime !=null and endTime !=''">
      AND
        date_format(ci.create_time,'%Y-%m-%d') &lt;=#{endTime}
    </if>
      order by ci.create_time DESC
  </select>

    <!-- 案件审批记录-->
  <select id="selectApproveRecordList" resultType="com.zyxy.common.vo.ApproveRecordVO">
   SELECT
        a.approve_content AS approveContent,
        a.approve_status AS approveStatus,
        a.create_time AS createTime,
        b.approve_suggest AS approveSuggest,
		d.duties AS duties
    FROM  case_approve a
    LEFT JOIN case_approve_suggest b
    ON a.id = b.approve_id
	LEFT JOIN case_request_info c
	ON  c.id=a.request_id
	LEFT JOIN manager_info d
	ON  d.user_id=a.approve_user_id
    WHERE
    a.case_id = #{caseId}
	AND a.approve_type='${@com.zyxy.common.enums.ApproveTypeEnum@INITIATE_APPROVAL.getTypeName()}'
	AND c.request_type=${@com.zyxy.common.enums.RequestTypeEnum@REQUEST.getValue()}
  
  </select>


    <!-- 根据案件ID查询案件相关人员userId -->
  <select id="selectLitigantUserIdByCaseId" parameterType="string" resultType="com.zyxy.common.vo.LitigantCaseInfoValidVO">
	SELECT
		l.user_id proposerId,
		li.user_id defendantId,
		a.agent_id proposerAgentId,
		ca.agent_id defendantAgentId,
		cm.manager_id arbiSecretaryId,
		ar.arbitrator_id arbitratorId
	FROM
		case_proposer p
	LEFT JOIN litigant_info l ON p.card_id = l.card_id,
	 case_defendant d
	LEFT JOIN litigant_info li ON d.card_id = li.card_id,
	 case_info i
	LEFT JOIN case_agent a ON i.id = a.case_id
	AND a.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@PROPESER.getValue()}
	LEFT JOIN case_agent ca ON ca.case_id = i.id
	AND ca.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@DEFENDANT.getValue()}
	LEFT JOIN  case_manager cm  ON cm.case_id = i.id 
	AND cm.status = ${@com.zyxy.common.enums.CaseManagerStatusEnum@OK.getCode()} 
	AND cm.manager_type = ${@com.zyxy.common.enums.ManagerInfoTypeEnum@ARBITRATION_SECRETARY.getCode()}
	LEFT JOIN case_arbitrator ar ON ar.case_id = i.id 
	AND ar.status = ${@com.zyxy.common.enums.CaseArbitratorStatusEnum@OK.getCode()}
	WHERE
		p.case_id = i.id
	AND d.case_id = i.id
	AND i.id = #{caseId}
  </select>

    <select id="selectLitigantCaseInfoByCaseId" parameterType="string" resultType="com.zyxy.common.vo.LitigantCaseBaseInfoVO">
	 SELECT 
		i.case_no caseNo,
		i.acceptance_no acceptanceNo,
		i.case_type_id caseType,
		i.register_time registerTime,
		i.create_time applyTime,
		p.prop_name applicantName,
		p.prop_type applicantType,
		p.sex applicantSex,
		p.birthday applicantBirthday,
		p.address applicantAddress,
		p.card_id applicantCardId,
		p.cert_name applicantCertName,
		p.cert_duties applicantCertDuties,
		p.unified_social_code applicantUnifiedSocialCode,
		p.ethnic applicantEthnic,
		p.phone applicantPhone,
		p.email applicantEmail,
		l.name applicantAttorney,
		l.vocation applicantAttorneyJob,
		d.prop_name beApplicantName,
		d.prop_type beApplicantType,
		d.sex beApplicantSex,
		d.birthday beApplicantBirthday,
		d.address beApplicantAddress,
		d.card_id beApplicantCardId,
		d.cert_name beApplicantCertName,
		d.cert_duties beApplicantCertDuties,
		d.unified_social_code beApplicantUnifiedSocialCode,
		d.ethnic beApplicantEthnic,
		d.phone beApplicantPhone,
		d.email beApplicantEmail,
		li.name beApplicantAttorney,
		li.vocation beApplicantAttorneyJob,
		r.arb_claim requestItem,
		r.fact factReason,
		r.reason reason
	FROM
		case_proposer p,
		case_defendant d,
		case_request_info r,
		case_info i
	LEFT JOIN
		case_agent a
	ON
		i.id = a.case_id
	AND	
		a.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@PROPESER.getValue()}
	LEFT JOIN
		litigant_info l
	ON	
		l.user_id = a.agent_id
	LEFT JOIN
		case_agent ca
	ON	
		i.id = ca.case_id
	AND
		ca.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@DEFENDANT.getValue()}
	LEFT JOIN
		litigant_info li
	ON
		li.user_id = ca.agent_id 
	WHERE
		i.id = p.case_id
	AND
		i.id = d.case_id
	AND	
		i.id = r.case_id
	AND
		r.REQUEST_TYPE = ${@com.zyxy.common.enums.RequestTypeEnum@REQUEST.getValue()}
	AND
		i.id = #{caseId}
  </select>

    <select id="selectLitigantBackRequestInfoByCaseId" parameterType="string" resultType="com.zyxy.common.vo.LitigantCaseBaseInfoVO">
  	SELECT 
		i.case_no caseNo,
		i.acceptance_no acceptanceNo,
		i.case_type_id caseType,
		i.register_time registerTime,
		i.create_time applyTime,
		d.prop_name applicantName,
		d.prop_type applicantType,
		d.sex applicantSex,
		d.birthday applicantBirthday,
		d.address applicantAddress,
		d.card_id applicantCardId,
		d.cert_name applicantCertName,
		d.cert_duties applicantCertDuties,
		d.unified_social_code applicantUnifiedSocialCode,
		d.ethnic applicantEthnic,
		d.phone applicantPhone,
		d.email applicantEmail,
		l.name applicantAttorney,
		l.vocation applicantAttorneyJob,
		p.prop_name beApplicantName,
		p.prop_type beApplicantType,
		p.sex beApplicantSex,
		p.birthday beApplicantBirthday,
		p.address beApplicantAddress,
		p.card_id beApplicantCardId,
		p.cert_name beApplicantCertName,
		p.cert_duties beApplicantCertDuties,
		p.unified_social_code beApplicantUnifiedSocialCode,
		p.ethnic beApplicantEthnic,
		p.phone beApplicantPhone,
		p.email beApplicantEmail,
		li.name beApplicantAttorney,
		li.vocation beApplicantAttorneyJob,
		r.arb_claim requestItem,
		r.fact factReason,
		r.reason reason
	FROM
		case_proposer p,
		case_defendant d,
		case_request_info r,
		case_info i
	LEFT JOIN
		case_agent a
	ON
		i.id = a.case_id
	AND	
		a.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@PROPESER.getValue()}
	LEFT JOIN
		litigant_info l
	ON	
		l.user_id = a.agent_id
	LEFT JOIN
		case_agent ca
	ON	
		i.id = ca.case_id
	AND
		ca.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@DEFENDANT.getValue()}
	LEFT JOIN
		litigant_info li
	ON
		li.user_id = ca.agent_id 
	WHERE
		i.id = p.case_id
	AND
		i.id = d.case_id
	AND	
		i.id = r.case_id
	AND
		r.REQUEST_TYPE = ${@com.zyxy.common.enums.RequestTypeEnum@BACK_REQUEST.getValue()}
	AND
		i.id = #{caseId}
  </select>

    <select id="queryDutiesById" parameterType="java.lang.String" resultType="String">
  	SELECT
  		duties
  	FROM
  		manager_info
  	WHERE
  		user_id=#{userId}
  </select>

    <!-- 证据目录查询 -->
  <select id="queryEvdences" resultType="com.zyxy.common.vo.EvidenceVO">
  	SELECT
  		cm.evidence_mat evidenceMat,
  		cm.purpose_evidence purposeEvidence,
  		cm.source_evidence sourceEvidence,
  		cm.doc_name docName,
  		cm.file_id fileId,
  		cm.doc_type docType,
  		cm.creater_type createrType
  	FROM
  		case_mat cm
  		LEFT JOIN
  		case_request_info cri
  		ON
  			cm.request_id=cri.id
  	WHERE
  		cm.mat_type=1
  		AND
  		cm.case_id=#{caseId}
  		AND
  		cri.request_type=#{requestFlag}
  </select>

    <!-- 审批记录查询 -->
  <select id="queryApproveRecords" resultType="com.zyxy.common.vo.ApproveRecordVO">
  	SELECT
  		ui.name approveName,
  		mi.duties duties,
  		cas.approve_suggest approveSuggest,
  		cas.opinion_status opinionStatus,
  		cas.create_time createTime
  	FROM
  		case_approve ca
  		LEFT JOIN
  			case_approve_suggest cas
  		ON
  			ca.id=cas.approve_id
  		LEFT JOIN
  			user_info ui
  		ON
  			ui.id=cas.creater_id
  		LEFT JOIN
  			manager_info mi
  		ON
  			mi.user_id=cas.creater_id
  	WHERE
  		cas.case_id=#{caseId}
  		AND
  		ca.approve_type=#{approveType}
  	ORDER BY
  		cas.create_time
  </select>

    <select id="queryCaseAmount" resultType="com.zyxy.common.vo.CaseAmountVO">
  	SELECT
  		cri.case_amount caseAmount,
  		cri.case_admissible_amount caseAdmissibleAmount,
  		cri.case_handling_amount caseHandlingAmount
  	FROM
  		case_request_info cri
  	WHERE
  		cri.case_id=#{caseId}
  		AND
  		request_type=#{requestFlag}
  </select>

    <!-- 判断案件是否存在 -->
  <select id="caseExist" parameterType="java.lang.String" resultType="java.lang.Integer">
  	SELECT
  		COUNT(*)
	FROM
		case_info
	WHERE
		id=#{caseId}
  </select>

  <select id="queryCaseCommInfo" parameterType="String" resultType="com.zyxy.common.vo.CaseCommBaseInfoVO">
    SELECT
      c.case_no         caseNo,
      CASE
      WHEN c.case_no IS NULL
        THEN (SELECT user_info.name
              FROM case_manager, user_info
              WHERE case_id = #{caseId} AND manager_type = ${@com.zyxy.common.enums.ManagerInfoTypeEnum@INITIATE_THE_SECRETARY.getCode()} AND case_manager.status = ${@com.zyxy.common.enums.CaseManagerStatusEnum@OK.getCode()} AND
                    user_info.id = case_manager.manager_id)
      ELSE
        (SELECT user_info.name
         FROM case_manager, user_info
         WHERE case_id = #{caseId} AND manager_type = ${@com.zyxy.common.enums.ManagerInfoTypeEnum@ARBITRATION_SECRETARY.getCode()} AND case_manager.status = ${@com.zyxy.common.enums.CaseManagerStatusEnum@OK.getCode()} AND
               user_info.id = case_manager.manager_id)
      END               secretary,
      concat(ai.name ,'(仲裁员)') arbitralTribunal,
      p.prop_name       applicantName,
      p.prop_type       applicantType,
      p.phone           applicantPhone,
      pai.name          applicantAttorney,
      pai.vocation      applicantAttorneyJob,
      d.prop_name       beApplicantName,
      d.prop_type       beApplicantType,
      d.phone           beApplicantPhone,
      dai.name          beApplicantAttorney,
      dai.vocation      beApplicantAttorneyJob
    FROM
      case_info c
      LEFT JOIN case_agent da
        ON da.case_id = c.id
           AND da.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@DEFENDANT.getValue()}
      LEFT JOIN litigant_info dai
        ON dai.id = da.agent_id
      LEFT JOIN case_agent pa
        ON pa.case_id = c.id
           AND pa.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@PROPESER.getValue()}
      LEFT JOIN litigant_info pai
        ON pai.id = pa.agent_id
      LEFT JOIN case_arbitrator a
        ON a.case_id = c.id AND a.status = ${@com.zyxy.common.enums.CaseArbitratorStatusEnum@OK.getCode()}
      LEFT JOIN user_info ai
        ON ai.id = a.arbitrator_id
      ,
      case_proposer p,
      case_defendant d
    WHERE
      c.id = #{caseId}
      AND p.case_id = c.id
      AND d.case_id = c.id
  </select>

    <select id="queryCaseCommProgressInfo" parameterType="String" resultType="com.zyxy.common.vo.CaseCommProgressInfoVO">
        SELECT
        CASE
        WHEN c.current_main_node IN (
        ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_CHECK.getCode()},
        ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_PAY.getCode()}
        )
        THEN 1
        WHEN c.current_main_node = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_REPLY.getCode()}
        THEN 2
        WHEN c.current_main_node = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_PROCESSING.getCode()}
        THEN 3
        WHEN c.current_main_node = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_ARBI.getCode()}
        THEN 4
        WHEN c.current_main_node = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_OVER.getCode()}
        THEN 5
        WHEN c.current_main_node = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_OFFSET.getCode()}
        THEN 6
        END currentProgress,
        CASE
        WHEN c.current_main_node IN (
        ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_CHECK.getCode()},
        ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_PAY.getCode()}
        )
        THEN c.create_time
        ELSE NULL
        END registerCaseDate,
        r.start_time replyDate,
        t.start_time trialDate,
        a.start_time arbitratorDate,
        ca.start_time completeDate,
        o.start_time offsetDate
        FROM
        case_info c
        LEFT JOIN case_node_oper r
        ON r.NODE_ID = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_REPLY.getCode()} AND r.CASE_ID = c.ID
        LEFT JOIN case_node_oper t
        ON t.NODE_ID = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_PROCESSING.getCode()} AND r.CASE_ID = c.ID
        LEFT JOIN case_node_oper a
        ON a.NODE_ID = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_ARBI.getCode()} AND r.CASE_ID = c.ID
        LEFT JOIN case_node_oper ca
        ON ca.NODE_ID = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_OVER.getCode()} AND r.CASE_ID = c.ID
        LEFT JOIN case_node_oper o
        ON o.NODE_ID = ${@com.zyxy.common.enums.CaseMainNodeEnum@CASE_OFFSET.getCode()} AND r.CASE_ID = c.ID
        WHERE
        c.id = #{caseId}
    </select>


  <!--查询财务模块列表-->
  <select id="queryFinance" parameterType="com.zyxy.common.dto.FincaceDTO" resultType="com.zyxy.common.vo.FinanceVO">
      SELECT
          ci.id caseId,
          ci.register_time registerTime,
          cdc.doc_year_number docYearNumber,
          cdc.doc_serial_number docSerialNumber,
          cp.prop_name propName,
          cd.prop_name defeName,
          CASE n.arbitrationFee
          WHEN NULL THEN
          m.arbitrationFee
          ELSE
          m.arbitrationFee + n.arbitrationFee
          END arbitrationFee
      FROM
          case_doc cdc,
          case_proposer cp,
          case_defendant cd,
          case_info ci
      LEFT JOIN (
            SELECT
                (
                cri.case_admissible_amount + cri.case_handling_amount
                ) arbitrationFee,
                cri.case_id
            FROM
                case_request_info cri
            WHERE
                cri.request_type = $ {@com.zyxy.common.enums.RequestTypeEnum@REQUEST.getValue () }
                ) m
      ON ci.id = m.case_id /*本请求*/
      LEFT JOIN (
            SELECT
                (
                cri.case_admissible_amount + cri.case_handling_amount
                ) arbitrationFee,
                cri.case_id
            FROM
                case_request_info cri
            WHERE
                cri.request_type = $ {@com.zyxy.common.enums.RequestTypeEnum@BACK_REQUEST.getValue () }
                ) n
      ON ci.id = n.case_id /*反请求*/
      WHERE
      cdc.case_id = ci.id
      AND cdc.doc_type = $ {@com.zyxy.common.enums.CaseDocTypeEnum@APPLICATION_ARBITRATION_BOOK.getCode () } /*仲裁申请书*/
      AND ci.id = cp.case_id
      AND ci.id = cd.case_id
      <if test="caseId !=null and caseId !=''">
        AND
        ci.id = #{caseId}
      </if>

      <if test="caseNo !=null and caseNo !=''">
        AND
          ci.case_no = #{caseNo}
      </if>

      <if test="propName !=null and propName !=''">
        AND
        (cp.prop_name = #{propName}
        OR
        cd.prop_name = #{propName})
      </if>

      <if test="startTime !=null and startTime !=''">
        AND ci.create_time &lt;= #{startTime}
      </if>

      <if test="endTime !=null and endTime !=''">
        AND ci.create_time &gt;= #{endTime}
      </if>
  </select>


    <select id="selectCaseInfoByCaseId" parameterType="com.zyxy.common.domain.CaseInfo" resultMap="BaseResultMap">

    select  <include refid="Base_Column_List" />
      from case_info
    where ID=#{id}


  </select>

   <!-- 结果集内容-->  
  <resultMap id="ApproveList" type="com.zyxy.common.vo.CaseProgressListVO">
  	<id column="id" property="id" />
  	<result column="approve_type" property="approveType" />
  	<collection column="id" property="progressCont" select="queryApproveContByApproveId" />
  </resultMap>
  <select id="queryApproveContByApproveId" resultType="com.zyxy.common.vo.ProgressContentVO">
  	SELECT
  		create_time time,
  		mark mark
  	FROM	
  		case_approve_suggest
  	WHERE
  		approve_id=#{approveId}
  	ORDER BY
    	create_time DESC
  </select>
  
  <select id="queryCaseProgress" resultMap="ApproveList">  
  	SELECT
  		ca.id,
  		ca.approve_type approveType
  	FROM
  		case_approve ca
  		LEFT JOIN
  			case_request_info cri
  		ON
  			cri.id=ca.request_id
    WHERE
    	cri.request_type=#{requestFlag}
    	AND
    	ca.case_id=#{caseId}
  </select>  
	
    <select id="queryCaseApplyDraft" parameterType="String" resultType="com.zyxy.common.vo.CaseApplyDraftVO">
        SELECT
        c.id caseId,
        c.apply_type filingType,
        c.case_type_id caseType,
        c.sign_abri_protocol_mode arbiProtocolSignMode,
        c.sign_time signTime,
        c.protocol_name protocolName,
        cp.prop_name applicantName,
        cp.prop_type applicantType,
        cp.ethnic applicantEthnic,
        cp.sex applicantSex,
        cp.phone applicantPhone,
        cp.card_id applicantCardId,
        cp.email applicantEmail,
        cp.address applicantAddress,
        cp.birthday applicantBirthday,
        cp.unified_social_code applicantUnifiedSocialCode,
        cp.cert_name applicantCertName,
        cp.cert_duties applicantCertDuties,
        cd.prop_name beApplicantName,
        cd.prop_type beApplicantType,
        cd.ethnic beApplicantEthnic,
        cd.sex beApplicantSex,
        cd.phone beApplicantPhone,
        cd.card_id beApplicantCardId,
        cd.email beApplicantEmail,
        cd.address beApplicantAddress,
        cd.birthday beApplicantBirthday,
        cd.unified_social_code beApplicantUnifiedSocialCode,
        cd.cert_name beApplicantCertName,
        cd.cert_duties beApplicantCertDuties,
        r.arb_claim arbClaim,
        r.fact fact,
        group_concat(cm.file_id) agentMaterial
        FROM
        case_info c
        LEFT JOIN case_proposer cp
        ON cp.case_id = c.id
        LEFT JOIN case_defendant cd
        ON cd.case_id = c.id
        LEFT JOIN case_request_info r
        ON r.case_id = c.id AND r.request_type = ${@com.zyxy.common.enums.RequestTypeEnum@REQUEST.getValue()}
        LEFT JOIN case_mat cm
        ON cm.case_id = c.id AND cm.mat_type = ${@com.zyxy.common.enums.CaseMatTypeEnum@ATTORNEY_MATERIAL.getCode()}
        WHERE
        c.id = #{caseId}
    </select>
    <select id="queryCaseApplyDraftEvidence" parameterType="String" resultType="com.zyxy.common.vo.CaseDraftEvidenceVO">
        SELECT
        evidence_mat evidenceMat,
        purpose_evidence purposeEvidence,
        source_evidence sourceEvidence,
        file_id fileId
        FROM
        case_mat
        WHERE
        case_id = #{caseId}
    </select>
     <!-- 查询反请求 -->
    <select id="selectCaseBackRequest" parameterType="string" resultType="com.zyxy.common.vo.RequestListVO">
    	SELECT
		r.case_id caseId,
		r.id requestId,
		r.create_time createTime,
		CASE
			WHEN i.current_main_node = '1' THEN '待审核'
			WHEN i.current_main_node = '3' THEN '待缴费'
			WHEN i.current_main_node = '2' THEN '立案失败'
			WHEN i.current_main_node = '9' THEN '立案失败'
			ELSE '案件进行中'
			END status,
		${@com.zyxy.common.enums.CaseDocTypeEnum@DE_REQUEST_APPLICATION_ARBITRATION_BOOK.getCode()} requestType,
		'反请求申请书' dcoName
		FROM
			case_info i,
			case_request_info r
		WHERE
			i.id = r.case_id
		AND
			r.case_id = #{caseId}
		AND r.request_type = ${@com.zyxy.common.enums.RequestTypeEnum@BACK_REQUEST.getValue()}
		<if test="litigantType != null">
			AND
			i.current_main_node &gt;=4 
			AND
			i.current_main_node &lt;=8 	
		</if>
    </select>

    <!-- 查询仲裁请求 -->
    <select id="selectCaseRequest" parameterType="string" resultType="com.zyxy.common.vo.RequestListVO">
    	SELECT
		r.case_id caseId,
		r.id requestId,
		r.create_time createTime,
		CASE
			WHEN i.current_main_node = '1' THEN '待审核'
			WHEN i.current_main_node = '3' THEN '待缴费'
			WHEN i.current_main_node = '2' THEN '立案失败'
			WHEN i.current_main_node = '9' THEN '立案失败'
			ELSE '案件进行中'
			END status,
		${@com.zyxy.common.enums.CaseDocTypeEnum@APPLICATION_ARBITRATION_BOOK.getCode()} requestType,
		'仲裁申请书' dcoName
		FROM
			case_info i,
			case_request_info r
		WHERE
			i.id = r.case_id
		AND
			r.case_id = #{caseId}
		AND r.request_type = ${@com.zyxy.common.enums.RequestTypeEnum@REQUEST.getValue()}
		<if test="litigantType != null">
			AND
			i.current_main_node &gt;=4 
			AND
			i.current_main_node &lt;=8 	
		</if>
    </select>
    <select id="queryCaseDefaultInfo" parameterType="String" resultType="com.zyxy.common.vo.CaseDefaultInfoVO">
        SELECT
            l.name applicantName,
            l.type applicantType,
            l.ethnic applicantEthnic,
            u.sex applicantSex,
            u.phone applicantPhone,
            u.card_id applicantCardId,
            u.email applicantEmail,
            l.address applicantAddress,
            l.birthday applicantBirthday,
            l.unified_social_code applicantUnifiedSocialCode,
            l.cert_name applicantCertName,
            l.cert_duties applicantCertDuties
        FROM
            user_info u,
            litigant_info l
        WHERE
            u.id = #{userId}
            AND l.user_id = u.id
    </select>
    
      <!-- 查询案件有效仲裁委 -->
  <select id="queryCaseArbiInfo" resultType="com.zyxy.common.vo.CaseManagerVO">
  	SELECT
  		cm.manager_type duties,
  		ui.name name
  	FROM
  		case_manager cm
  		LEFT JOIN
  			user_info ui
  		ON
  			ui.id=cm.manager_id
  	WHERE
  		cm.case_id=#{caseId}
  		AND
  		cm.status=${@com.zyxy.common.enums.CaseManagerStatusEnum@OK.getCode()}
  </select>
  
  <select id="selectDocHead" resultType="com.zyxy.common.vo.DocHeadVO">
  	SELECT 
		p.prop_name applicantName,
		p.prop_type applicantType,
		p.sex applicantSex,
		p.birthday applicantBirthday,
		p.address applicantAddress,
		p.card_id applicantCardId,
		p.cert_name applicantCertName,
		p.cert_duties applicantCertDuties,
		p.unified_social_code applicantUnifiedSocialCode,
		p.ethnic applicantEthnic,
		p.phone applicantPhone,
		p.email applicantEmail,
		l.name applicantAttorney,
		l.vocation applicantAttorneyJob,
		d.prop_name beApplicantName,
		d.prop_type beApplicantType,
		d.sex beApplicantSex,
		d.birthday beApplicantBirthday,
		d.address beApplicantAddress,
		d.card_id beApplicantCardId,
		d.cert_name beApplicantCertName,
		d.cert_duties beApplicantCertDuties,
		d.unified_social_code beApplicantUnifiedSocialCode,
		d.ethnic beApplicantEthnic,
		d.phone beApplicantPhone,
		d.email beApplicantEmail,
		li.name beApplicantAttorney,
		li.vocation beApplicantAttorneyJob
	FROM
		case_proposer p,
		case_defendant d,
		case_info i
	LEFT JOIN
		case_agent a
	ON
		i.id = a.case_id
	AND	
		a.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@PROPESER.getValue()}
	LEFT JOIN
		litigant_info l
	ON	
		l.user_id = a.agent_id
	LEFT JOIN
		case_agent ca
	ON	
		i.id = ca.case_id
	AND
		ca.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@DEFENDANT.getValue()}
	LEFT JOIN
		litigant_info li
	ON
		li.user_id = ca.agent_id 
	WHERE
		i.id = p.case_id
	AND
		i.id = d.case_id
	AND
		i.id = #{caseId}
  </select>
  
  <!-- 查询请求id -->
  <select id="queryRequestId" resultType="java.lang.String">
  	SELECT
  		id
  	FROM 
  		case_request_info
  	WHERE
  		request_type=#{requestFlag}
  		AND
  		case_id=#{caseId}
  </select>
  
   <!-- 将案由更新到案件表 -->
  <update id="updateCaseTypeId" parameterType="String">
  	 UPDATE case_info
  	 SET case_type_id=#{caseTypeId}
  	 WHERE id=#{caseId}
  </update>

  <select id="selectCaseLitigantValidInfo" resultType="com.zyxy.common.vo.CaseLitigantValidVO">
  	SELECT
		p.prop_name propName,
		p.card_id propCardId,
		d.prop_name defeName,
		d.card_id defeCardId
	FROM
		case_info i,
		case_proposer p,
		case_defendant d
	WHERE
		i.id = p.case_id
	AND i.id = d.case_id
	AND i.case_no = #{caseNo}
  </select>




  <!--根据案件id查询出当事人信息-->
  <select id="selectLitigantInfoByCaseId" resultType="com.zyxy.common.vo.LitigantInfoVO">
      SELECT
          cp.phone propPhone,
          cd.phone defePhone,
          ui.id propUserId,
          ui1.id defeUserId
          p.name propAgentName,
          p.phone propAgentPhone,
          p.id propAgentUserId,
          d.name defeAgentName,
          d.phone defeAgentPhone,
          d.id defeAgentUserId,
          ci.case_no caseNo
      FROM
          case_proposer cp,
          case_defendant cd,
          user_info ui,
          user_info ui1,
          case_info ci
      LEFT JOIN (
          SELECT
              ui.id,
              ui.name,
              ui.phone,
              ca.case_id
          FROM
              case_agent ca,
              user_info ui
          WHERE
              ca.agent_id = ui.id
          AND ca.case_id = #{caseId}
          AND ca.agent_type = ${@com.zyxy.common.enums.CaseAgentTypeEnum@PROP_AGENT.getCode()}
      ) p ON p.case_id = ci.id
      LEFT JOIN (
          SELECT
              ui.id,
              ui.name,
              ui.phone,
              ca.case_id
          FROM
              case_agent ca,
              user_info ui
          WHERE
              ca.agent_id = ui.id
          AND ca.case_id = #{caseId}
          AND ca.agent_type = ${@com.zyxy.common.enums.LitigantTypeEnum@DEFE_AGENT.getCode()}
      ) d ON d.case_id = ci.id
      WHERE
          cp.case_id = cd.case_id
      AND ci.id = cp.case_id
      AND ci.id = cd.case_id
      AND cp.card_id = ui.card_id
      AND cd.card_id = ui1.card_id
      AND cp.case_id = #{caseId}
  </select>
  
  
      <!-- 查询案件是否存在 -->
  <select id="queryCaseInfoCaseId" parameterType="String" resultType="String">
	SELECT
		ci.id caseId
	FROM
		case_approve ca,
		case_info ci
	WHERE
		ca.case_id = ci.id
	AND ca.id = #{approveId};
  </select>
  
  <!-- 通过请求id查询案件基本信息 -->
  <select id="queryCaseBaseInfoByRequestId" parameterType="java.lang.String" resultType="com.zyxy.common.vo.CaseBaseInfoVO">
	 SELECT 
		i.case_no caseNo,
		i.acceptance_no acceptanceNo,
		i.case_type_id caseType,
		i.register_time registerTime,
		i.create_time applyTime,
		p.prop_name applicantName,
		p.prop_type applicantType,
		p.sex applicantSex,
		p.birthday applicantBirthday,
		p.address applicantAddress,
		p.card_id applicantCardId,
		p.cert_name applicantCertName,
		p.cert_duties applicantCertDuties,
		p.unified_social_code applicantUnifiedSocialCode,
		p.ethnic applicantEthnic,
		p.phone applicantPhone,
		p.email applicantEmail,
		l.name applicantAttorney,
		l.vocation applicantAttorneyJob,
		d.prop_name beApplicantName,
		d.prop_type beApplicantType,
		d.sex beApplicantSex,
		d.birthday beApplicantBirthday,
		d.address beApplicantAddress,
		d.card_id beApplicantCardId,
		d.cert_name beApplicantCertName,
		d.cert_duties beApplicantCertDuties,
		d.unified_social_code beApplicantUnifiedSocialCode,
		d.ethnic beApplicantEthnic,
		d.phone beApplicantPhone,
		d.email beApplicantEmail,
		li.name beApplicantAttorney,
		li.vocation beApplicantAttorneyJob,
		r.arb_claim requestItem,
		r.fact factReason,
		r.reason reason
	FROM
		case_proposer p,
		case_defendant d,
		case_request_info r,
		case_info i
	LEFT JOIN
		case_agent a
	ON
		i.id = a.case_id
	AND	
		a.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@PROPESER.getValue()}
	LEFT JOIN
		litigant_info l
	ON	
		l.user_id = a.agent_id
	LEFT JOIN
		case_agent ca
	ON	
		i.id = ca.case_id
	AND
		ca.litigant_type = ${@com.zyxy.common.enums.LitigantTypeEnum@DEFENDANT.getValue()}
	LEFT JOIN
		litigant_info li
	ON
		li.user_id = ca.agent_id 
	WHERE
		i.id = p.case_id
	AND
		i.id = d.case_id
	AND	
		i.id = r.case_id
	AND
		r.id = #{requestId}
  </select>
   
     <!-- 查询案件是否存在 -->
  <select id="queryCaseInfoCaseId" parameterType="String" resultType="String">
	SELECT
		ci.id caseId
	FROM
		case_approve ca,
		case_info ci
	WHERE
		ca.case_id = ci.id
	AND ca.id = #{approveId};
  </select>
</mapper>
